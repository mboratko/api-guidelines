window.search = {"resultsoptions":{"limit_results":30,"teaser_word_count":30},"searchoptions":{"bool":"OR","expand":true,"fields":{"body":{"boost":1},"breadcrumbs":{"boost":1},"title":{"boost":2}}},"index":{"fields":["title","body","breadcrumbs"],"pipeline":["trimmer","stopWordFilter","stemmer"],"ref":"id","version":"0.9.5","index":{"body":{"root":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}}}},"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":1}}}}},"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0},"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0},"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.4142135623730952}},"df":8}}}}},"l":{"docs":{},"df":0,"i":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.4142135623730952},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.4142135623730952},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.4142135623730952},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":9,"c":{"docs":{"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":3}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.4142135623730952}},"df":2}},"n":{"docs":{},"df":0,"d":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":1}}}},"i":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.4142135623730952},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.0},"flexibility.html#functions-expose-intermediate-results-to-avoid-duplicate-work-c-intermediate":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0},"external-links.html#external-links":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.7320508075688773},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.4142135623730952}},"df":12,"'":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":2.8284271247461905}},"df":1,"e":{"docs":{},"df":0,"]":{"docs":{},"df":0,"(":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}}}}}}}}}}}}},"l":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0}},"df":2}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2}}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"interoperability.html#examples-from-the-standard-library":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.4142135623730952},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0}},"df":4}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.4142135623730952},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.4142135623730952},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.4142135623730952},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.4142135623730952},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.4142135623730952},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0}},"df":11},"c":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0}},"df":2}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":3}}}},"s":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"tf":1.4142135623730952}},"df":2,"<":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}}}}}},"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":1,"p":{"docs":{},"df":0,"t":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.7320508075688773}},"df":2}}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"!":{"docs":{},"df":0,"(":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"debuggability.html#debug--representation-is-never-empty-c-debug-nonempty":{"tf":1.4142135623730952}},"df":1}}}}}}}}}},"s":{"docs":{},"df":0,"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"<":{"docs":{},"df":0,"m":{"docs":{},"df":0,"y":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"<":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"<":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0}},"df":1}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"<":{"docs":{},"df":0,"m":{"docs":{},"df":0,"y":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"predictability.html#operator-overloads-are-unsurprising-c-overload":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0},"future-proofing.html#exceptions":{"tf":1.0},"future-proofing.html#examples-from-the-standard-library":{"tf":1.0}},"df":5}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{"type-safety.html#consuming-builders":{"tf":1.4142135623730952}},"df":1}}}},"_":{"docs":{"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.7320508075688773},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":3,"s":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}}}}}},"t":{"docs":{},"df":0,"r":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}},"b":{"docs":{},"df":0,"y":{"docs":{},"df":0,"t":{"docs":{"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0}},"df":1}}},"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"d":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0}},"df":1}},"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"tf":1.4142135623730952}},"df":2}}},"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"i":{"docs":{"dependability.html#static-enforcement":{"tf":1.7320508075688773}},"df":1}}}},"d":{"docs":{"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"interoperability.html#collections-implement--fromiterator--and--extend--c-collect":{"tf":1.0},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.0},"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":10,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0},"flexibility.html#advantages-of-trait-objects":{"tf":1.0}},"df":3}}}}}},"d":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.4142135623730952},"dependability.html#dynamic-enforcement":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.4142135623730952},"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0}},"df":8,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"interoperability.html#examples-from-the-standard-library":{"tf":1.0},"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0},"interoperability.html#examples-of-error-messages":{"tf":1.0}},"df":3}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0}},"df":1}}}}}}}}}}},"i":{"docs":{},"df":0,"t":{"docs":{"predictability.html#examples-from-the-standard-library":{"tf":1.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.4142135623730952},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":8,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":1}}}}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"flexibility.html#functions-expose-intermediate-results-to-avoid-duplicate-work-c-intermediate":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0}},"df":6}}},"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"m":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":1}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0}},"df":1}}},"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0}},"df":1}}}}}}},"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.7320508075688773},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.4142135623730952}},"df":4}}}}},"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0}},"df":1}}}}},"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.4142135623730952}},"df":3}},"p":{"docs":{},"df":0,"t":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0},"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.0}},"df":5}}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0}},"df":1}}}}}},"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.0}},"df":1}}}},"t":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":1,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"flexibility.html#disadvantages-of-generics":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.4142135623730952}},"df":3}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"y":{"docs":{},"df":0,"m":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.4142135623730952}},"df":1}}}}}},"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":2,"s":{"docs":{},"df":0,"t":{"docs":{"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0},"flexibility.html#disadvantages-of-generics":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":4}}}}}},"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.0}},"df":2,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.4142135623730952},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.7320508075688773},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952}},"df":4}}}}},"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"t":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0}},"df":2}}}},"o":{"docs":{},"df":0,"m":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}}}}}}},"n":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.4142135623730952}},"df":1}}},"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":7}}},"d":{"docs":{},"df":0,"/":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0}},"df":1}}}},"y":{"docs":{},"df":0,"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.7320508075688773}},"df":2}}}}},"s":{"docs":{},"df":0,"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0},"flexibility.html#functions-expose-intermediate-results-to-avoid-duplicate-work-c-intermediate":{"tf":1.0}},"df":2}}}}},"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":1}}}}}}}},"i":{"docs":{},"df":0,"l":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0}},"df":2}},"o":{"docs":{},"df":0,"v":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":4},"r":{"docs":{},"df":0,"t":{"docs":{"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.4142135623730952}},"df":2}}}}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.0},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.4142135623730952}},"df":2}}}}},"c":{"docs":{"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":2.0}},"df":1}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"dependability.html#static-enforcement":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":3}}}},"c":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":1,"<":{"docs":{},"df":0,"t":{"docs":{"predictability.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}},"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0}},"df":1}}}}}}}}},"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"y":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":2}},"i":{"docs":{},"df":0,"s":{"docs":{"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0}},"df":1}},"g":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":2.0}},"df":1,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":1}}}}}},"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":2.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"type-safety.html#non-consuming-builders-preferred":{"tf":1.4142135623730952},"predictability.html#examples-from-the-standard-library":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":2.449489742783178},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.4142135623730952},"dependability.html#static-enforcement":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"flexibility.html#disadvantages-of-trait-objects":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.0},"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.0}},"df":14}}}}},"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":1}}}}}}}},"e":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.4142135623730952}},"df":2,"v":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.4142135623730952}},"df":2}},"e":{"docs":{},"df":0,"n":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"debuggability.html#debug--representation-is-never-empty-c-debug-nonempty":{"tf":1.0}},"df":7},"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0}},"df":1}}}}}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0}},"df":6}}}}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.4142135623730952},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":6}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2}}}}},"r":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0},"dependability.html#static-enforcement":{"tf":1.0}},"df":2}}},"s":{"docs":{},"df":0,"i":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"naming.html#examples-from-the-standard-library":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.4142135623730952},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0}},"df":4,"e":{"docs":{},"df":0,"r":{"docs":{"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":2}},"l":{"docs":{},"df":0,"i":{"docs":{"dependability.html#dynamic-enforcement":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0}},"df":2}}}}},"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"debuggability.html#debug--representation-is-never-empty-c-debug-nonempty":{"tf":1.7320508075688773},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":4},"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{"debuggability.html#debug--representation-is-never-empty-c-debug-nonempty":{"tf":1.4142135623730952}},"df":1}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"debuggability.html#debug--representation-is-never-empty-c-debug-nonempty":{"tf":1.4142135623730952}},"df":1}}}}}}}},"q":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0}},"df":2,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}},"a":{"docs":{},"df":0,"l":{"docs":{"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"c":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":1}},".":{"docs":{},"df":0,"g":{"docs":{"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.4142135623730952},"predictability.html#operator-overloads-are-unsurprising-c-overload":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"dependability.html#static-enforcement":{"tf":1.0}},"df":5}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}}},"d":{"docs":{"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":4}},"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2}}}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"interoperability.html#examples-of-error-messages":{"tf":1.0},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0}},"df":2}}}}},"d":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"interoperability.html#examples-of-error-messages":{"tf":1.0}},"df":3,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":2}}},"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.4142135623730952},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"interoperability.html#collections-implement--fromiterator--and--extend--c-collect":{"tf":1.0}},"df":5}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"dependability.html#dynamic-enforcement":{"tf":2.23606797749979},"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.4142135623730952},"dependability.html#static-enforcement":{"tf":1.4142135623730952}},"df":3}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"r":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"m":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":2.23606797749979},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.4142135623730952},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":8,".":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0}},"df":1}}}}}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"<":{"docs":{},"df":0,"s":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"<":{"docs":{},"df":0,"i":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0}},"df":2}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0}},"df":2}}}}},"x":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":1,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"flexibility.html#functions-expose-intermediate-results-to-avoid-duplicate-work-c-intermediate":{"tf":1.4142135623730952},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":4}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"predictability.html#operator-overloads-are-unsurprising-c-overload":{"tf":1.4142135623730952},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.4142135623730952},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.4142135623730952}},"df":5}},"r":{"docs":{},"df":0,"i":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"s":{"docs":{"dependability.html#dynamic-enforcement":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.7320508075688773}},"df":2}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0}},"df":2}},"n":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":2}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0}},"df":2,"l":{"docs":{},"df":0,"i":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":2}}}}}}},"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":3}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"dependability.html#static-enforcement":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0},"interoperability.html#collections-implement--fromiterator--and--extend--c-collect":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.4142135623730952},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0}},"df":9}}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.0},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":2,"l":{"docs":{},"df":0,"i":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.0},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":3}}}},"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"dependability.html#static-enforcement":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.4142135623730952},"interoperability.html#examples":{"tf":1.0},"documentation.html#examples":{"tf":1.0},"predictability.html#examples-from-the-standard-library":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.7320508075688773},"interoperability.html#examples-from-the-standard-library":{"tf":1.0},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.4142135623730952},"interoperability.html#examples-of-error-messages":{"tf":1.0},"future-proofing.html#examples":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.4142135623730952},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.4142135623730952},"future-proofing.html#examples-from-the-standard-library":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":3.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0},"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":2.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.4142135623730952},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":2.23606797749979},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"naming.html#examples-from-the-standard-library":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.7320508075688773},"documentation.html#crate-level-docs-are-thorough-and-include-examples-c-crate-doc":{"tf":1.0},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"flexibility.html#disadvantages-of-generics":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.7320508075688773},"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":37,"e":{"docs":{},"df":0,"<":{"docs":{},"df":0,"t":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.4142135623730952}},"df":1}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":1}}}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":1}}}}}}}}}},"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"d":{"docs":{"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.4142135623730952}},"df":1},"s":{"docs":{"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"t":{"docs":{"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"future-proofing.html#exceptions":{"tf":1.4142135623730952},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0},"flexibility.html#disadvantages-of-trait-objects":{"tf":1.0},"debuggability.html#all-public-types-implement--debug--c-debug":{"tf":1.0}},"df":6}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0}},"df":1}}}},"c":{"docs":{},"df":0,"t":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.7320508075688773}},"df":1}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"interoperability.html#collections-implement--fromiterator--and--extend--c-collect":{"tf":1.7320508075688773},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2,"<":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}},"s":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"n":{"docs":{"external-links.html#external-links":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.4142135623730952},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":3}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0}},"df":1}}}},"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":3}}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{"external-links.html#external-links":{"tf":1.0}},"df":1},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#disadvantages-of-generics":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.4142135623730952}},"df":4}}}}}},"r":{"docs":{},"df":0,"r":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":3,"o":{"docs":{},"df":0,"r":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":5.916079783099616},"interoperability.html#examples-from-the-standard-library":{"tf":1.0},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.7320508075688773},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.4142135623730952},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"predictability.html#examples-from-the-standard-library":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":2.0},"interoperability.html#examples-of-error-messages":{"tf":1.0},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":3.1622776601683797}},"df":11,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.7320508075688773}},"df":1,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"(":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0}},"df":1}}}}}}}}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":1}}}}}}}}}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":1}}}}}}}}}}}}},"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0}},"df":1}}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"y":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.4142135623730952}},"df":2}}}}}}}}},"v":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.7320508075688773}},"df":1,"s":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":1},"c":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0}},"df":1},"i":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.0}},"df":2,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.4142135623730952},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0}},"df":4}}}},"e":{"docs":{},"df":0,"w":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.4142135623730952},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":3}},"a":{"docs":{"dependability.html#dynamic-enforcement":{"tf":1.0},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0}},"df":2},"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":2}}}},"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":1}}},"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":6}},"b":{"docs":{},"df":0,"l":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"interoperability.html#examples-of-error-messages":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":3}}}}},"l":{"docs":{},"df":0,"u":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.7320508075688773},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.4142135623730952},"flexibility.html#advantages-of-generics":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":2.0},"debuggability.html#debug--representation-is-never-empty-c-debug-nonempty":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":2.23606797749979},"naming.html#examples-from-the-standard-library":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.4142135623730952},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.4142135623730952},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.4142135623730952},"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.4142135623730952},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":2.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.4142135623730952},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.4142135623730952},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":20},"i":{"docs":{},"df":0,"d":{"docs":{"interoperability.html#examples-of-error-messages":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.7320508075688773},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.4142135623730952}},"df":8}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"flexibility.html#disadvantages-of-trait-objects":{"tf":1.0}},"df":1}}}},"4":{"docs":{"interoperability.html#examples-from-the-standard-library":{"tf":1.0}},"df":1},"6":{"docs":{"interoperability.html#examples-from-the-standard-library":{"tf":1.0}},"df":1},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"flexibility.html#disadvantages-of-generics":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":2}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"naming.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"t":{"docs":{"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}}}}},"t":{"docs":{"naming.html#examples-from-the-standard-library":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"naming.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}}}}}},"<":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,">":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"debuggability.html#debug--representation-is-never-empty-c-debug-nonempty":{"tf":1.0}},"df":1}}}}}}}}}}},"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}}}}}}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":1}}},"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"<":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0}},"df":2}}},"u":{"docs":{},"df":0,"8":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.4142135623730952}},"df":1}},"i":{"docs":{},"df":0,"6":{"docs":{},"df":0,"4":{"docs":{"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.0}},"df":1}}},"t":{"docs":{"interoperability.html#examples-from-the-standard-library":{"tf":1.0},"flexibility.html#disadvantages-of-generics":{"tf":1.0}},"df":2}}},"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.4142135623730952},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.4142135623730952},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":2.6457513110645909},"flexibility.html#advantages-of-trait-objects":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.4142135623730952}},"df":6}}}},"b":{"docs":{"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.4142135623730952}},"df":1,"o":{"docs":{},"df":0,"s":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.0},"flexibility.html#disadvantages-of-generics":{"tf":1.0}},"df":3}},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0}},"df":1}}}}}}}},"k":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":2.0}},"df":1,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":1}},"y":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"naming.html#examples-from-the-standard-library":{"tf":1.0}},"df":3,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":2.0}},"df":3}}}}},"e":{"docs":{},"df":0,"p":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0}},"df":3}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":2.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"y":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.0}},"df":1,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":1}}}}}}}},"x":{"docs":{"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.4142135623730952},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.7320508075688773}},"df":2},"0":{"docs":{},"df":0,"x":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1}}}}}},"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1}}}},"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1}}}}}}},".":{"docs":{},"df":0,"9":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{"documentation.html#examples":{"tf":1.0}},"df":1},"8":{"docs":{"documentation.html#examples":{"tf":1.0}},"df":1}}},"3":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.4142135623730952}},"df":1},"8":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":1}}},"1":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0}},"df":1}}}},"b":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.4142135623730952}},"df":1,"0":{"docs":{"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.0}},"df":1,"0":{"docs":{},"df":0,"0":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":1}}}}},"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":1}},"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1}},"0":{"docs":{},"df":0,"1":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1}}},"1":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":1,"0":{"docs":{},"df":0,"0":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1}}}}},"1":{"docs":{"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.0}},"df":1,"0":{"docs":{},"df":0,"0":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":1}}}},"1":{"docs":{"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.4142135623730952}},"df":1,"0":{"docs":{"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.0}},"df":1,"0":{"docs":{},"df":0,"0":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":1}}}}}},"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.0}},"df":1,"0":{"docs":{},"df":0,"0":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":1}}}}}}}},"j":{"docs":{},"df":0,"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0}},"df":1,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0}},"df":1}}}}}}}}}}}}},"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":2}}},"u":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":1}}}}}},"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.0},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.4142135623730952},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.0},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":8,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0}},"df":2}}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":1}}}}}},"y":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0}},"df":4}}}}},"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"=":{"docs":{},"df":0,"%":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0}},"df":1}}}}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":1,"s":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0}},"df":3}}}},"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"flexibility.html#disadvantages-of-generics":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.4142135623730952}},"df":4}}},"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.4142135623730952},"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"dependability.html#static-enforcement":{"tf":1.0},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.4142135623730952}},"df":14}},"i":{"docs":{},"df":0,"x":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":2.0}},"df":5}},"a":{"docs":{},"df":0,"c":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"tf":1.0}},"df":1}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"predictability.html#predictability":{"tf":1.0}},"df":2}}}},"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0},"future-proofing.html#exceptions":{"tf":1.0}},"df":4},"c":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"f":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"future-proofing.html#future-proofing":{"tf":1.0}},"df":2}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"flexibility.html#disadvantages-of-trait-objects":{"tf":1.0},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.4142135623730952},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"tf":1.0},"interoperability.html#examples-of-error-messages":{"tf":1.4142135623730952},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.4142135623730952},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.4142135623730952},"predictability.html#operator-overloads-are-unsurprising-c-overload":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.7320508075688773},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0}},"df":20}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0}},"df":2}}}},"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"t":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":1}}}}}},"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.4142135623730952},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.4142135623730952},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952}},"df":9,"t":{"docs":{"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":1}}}},"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.4142135623730952}},"df":1}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"dependability.html#static-enforcement":{"tf":1.0},"predictability.html#operator-overloads-are-unsurprising-c-overload":{"tf":1.0}},"df":2}}}}},"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":2.23606797749979},"about.html#rust-api-guidelines":{"tf":1.0},"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.0}},"df":3}}}},"s":{"docs":{},"df":0,"e":{"docs":{"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":3}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.4142135623730952}},"df":1}}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":2.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.4142135623730952},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.4142135623730952}},"df":5}}}}},"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.7320508075688773},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.7320508075688773},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.4142135623730952},"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.0}},"df":6,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.7320508075688773}},"df":1}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"s":{"docs":{"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0}},"df":1}}},"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.0}},"df":1}}}}}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.4142135623730952}},"df":1}},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":3}}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":2}}}},"t":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"n":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1,"!":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.7320508075688773}},"df":1}}}}}}},"<":{"docs":{},"df":0,"t":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}}}}}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}},"b":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":2.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.4142135623730952},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.4142135623730952},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.4142135623730952},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.7320508075688773},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.7320508075688773},"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.4142135623730952},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.4142135623730952},"type-safety.html#consuming-builders":{"tf":1.7320508075688773},"type-safety.html#non-consuming-builders-preferred":{"tf":2.449489742783178}},"df":13,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"debuggability.html#all-public-types-implement--debug--c-debug":{"tf":1.0},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":2.449489742783178},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.4142135623730952},"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.4142135623730952},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.0},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0}},"df":9,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":2.0}},"df":1}}}}},"l":{"docs":{},"df":0,"i":{"docs":{"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0}},"df":1}},"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"h":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.7320508075688773}},"df":1}}}},"(":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.0},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0}},"df":2},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.4142135623730952}},"df":2}}}}}},"s":{"docs":{},"df":0,"h":{"docs":{"dependability.html#static-enforcement":{"tf":1.0},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0}},"df":2}},"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"tf":1.0}},"df":3}}}}},"t":{"docs":{},"df":0,"r":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.4142135623730952}},"df":2}},"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.4142135623730952},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.4142135623730952},"type-safety.html#consuming-builders":{"tf":1.0}},"df":6,"i":{"docs":{},"df":0,"v":{"docs":{"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0}},"df":1}}}},"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":4}}}},"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":3.872983346207417},"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":3}}},"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"external-links.html#external-links":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"dependability.html#static-enforcement":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.4142135623730952},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":9}}}},"h":{"docs":{"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":2.23606797749979},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.4142135623730952},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":4,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}}}}}}}},"r":{"docs":{},"df":0,"s":{"docs":{"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0},"interoperability.html#examples-from-the-standard-library":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0}},"df":1}}}}}}}}}},"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0},"interoperability.html#examples-from-the-standard-library":{"tf":1.0}},"df":2}}}}}}}}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0}},"df":1}}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0}},"df":1}}}}}}}},"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0}},"df":1}}}}}}}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0}},"df":1}}},"t":{"docs":{"dependability.html#dynamic-enforcement":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":3,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0}},"df":7}}}}},"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":2.6457513110645909},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":3}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":2.23606797749979}},"df":3}}}}}}},"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.7320508075688773},"flexibility.html#disadvantages-of-generics":{"tf":1.0},"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.4142135623730952}},"df":8}}}}},"y":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0}},"df":3}},"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"interoperability.html#examples-from-the-standard-library":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":10}}}},"i":{"docs":{},"df":0,"t":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0}},"df":2}}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":4,"e":{"docs":{},"df":0,"r":{"docs":{"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.4142135623730952},"predictability.html#examples-from-the-standard-library":{"tf":1.0},"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.4142135623730952},"flexibility.html#disadvantages-of-trait-objects":{"tf":1.0},"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"tf":1.4142135623730952}},"df":7}}}}},"o":{"docs":{},"df":0,"r":{"docs":{"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"flexibility.html#functions-expose-intermediate-results-to-avoid-duplicate-work-c-intermediate":{"tf":1.0}},"df":2}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0}},"df":1,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":2.449489742783178},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952}},"df":2}}}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0}},"df":1,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.0}},"df":2}}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.0}},"df":1}}}}}}}}},"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0},"flexibility.html#disadvantages-of-trait-objects":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.0},"flexibility.html#disadvantages-of-generics":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0}},"df":6}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"flexibility.html#disadvantages-of-trait-objects":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"_":{"docs":{},"df":0,"2":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"c":{"docs":{"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.4142135623730952}},"df":1}},"n":{"docs":{"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0}},"df":1,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.0}},"df":1}}}}}},"2":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":1}}},"t":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0},"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":2.23606797749979},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0},"flexibility.html#disadvantages-of-generics":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":2.0},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":2.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"predictability.html#examples-from-the-standard-library":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":2.449489742783178},"flexibility.html#advantages-of-generics":{"tf":2.449489742783178},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.4142135623730952},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.4142135623730952}},"df":15,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0}},"df":1}}}}}}},"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0}},"df":2}},"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0}},"df":1}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}}}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":1}}}},"_":{"docs":{"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.7320508075688773}},"df":3,"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0}},"df":1}}}}}}}}}}}},"r":{"docs":{},"df":0,"i":{"docs":{"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0}},"df":3},"y":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"tf":1.4142135623730952}},"df":1,"<":{"docs":{},"df":0,"u":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"interoperability.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}}}}}},"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"tf":1.0}},"df":1}}}}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0}},"df":2}},"i":{"docs":{},"df":0,"l":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":1},"t":{"docs":{"flexibility.html#advantages-of-generics":{"tf":2.0},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":3.3166247903554},"predictability.html#operator-overloads-are-unsurprising-c-overload":{"tf":1.4142135623730952},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":3.3166247903554},"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"tf":1.4142135623730952},"flexibility.html#advantages-of-trait-objects":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":2.8284271247461905},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":2.23606797749979},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.4142135623730952},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.4142135623730952},"future-proofing.html#examples-from-the-standard-library":{"tf":1.4142135623730952},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":2.6457513110645909},"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.4142135623730952},"flexibility.html#disadvantages-of-generics":{"tf":1.0},"flexibility.html#disadvantages-of-trait-objects":{"tf":2.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.4142135623730952},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":3.605551275463989},"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"tf":2.23606797749979},"future-proofing.html#exceptions":{"tf":2.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":2.23606797749979}},"df":23,"'":{"docs":{"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0}},"df":1},".":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},">":{"docs":{},"df":0,"(":{"docs":{},"df":0,"x":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.0}},"df":1}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"o":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0}},"df":1}}}}},"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.4142135623730952}},"df":2}}}}}},"u":{"docs":{},"df":0,"e":{"docs":{"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.4142135623730952},"interoperability.html#examples-of-error-messages":{"tf":1.0}},"df":4}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0}},"df":1}}}}}}}},"y":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.0},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0}},"df":3,"p":{"docs":{},"df":0,"e":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":3.605551275463989},"flexibility.html#examples-from-the-standard-library":{"tf":1.4142135623730952},"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.4142135623730952},"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.4142135623730952},"type-safety.html#consuming-builders":{"tf":1.0},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":2.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.7320508075688773},"dependability.html#dynamic-enforcement":{"tf":1.0},"flexibility.html#disadvantages-of-generics":{"tf":2.23606797749979},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":2.23606797749979},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.4142135623730952},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":3.3166247903554},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.4142135623730952},"future-proofing.html#examples-from-the-standard-library":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":3.605551275463989},"predictability.html#examples-from-the-standard-library":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.4142135623730952},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.7320508075688773},"flexibility.html#advantages-of-generics":{"tf":3.4641016151377546},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":2.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"flexibility.html#disadvantages-of-trait-objects":{"tf":1.0},"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":2.0},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.4142135623730952},"future-proofing.html#exceptions":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":2.449489742783178},"interoperability.html#examples-from-the-standard-library":{"tf":1.0},"debuggability.html#all-public-types-implement--debug--c-debug":{"tf":1.0},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.4142135623730952},"type-safety.html#type-safety":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.7320508075688773},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":2.0},"dependability.html#static-enforcement":{"tf":1.4142135623730952},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":2.449489742783178},"predictability.html#operator-overloads-are-unsurprising-c-overload":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.7320508075688773},"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":2.23606797749979},"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.4142135623730952},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":2.449489742783178}},"df":42,"s":{"docs":{},"df":0,")":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}},"a":{"docs":{},"df":0,"f":{"docs":{"dependability.html#static-enforcement":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.4142135623730952}},"df":2}}}},"i":{"docs":{},"df":0,"c":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.4142135623730952},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.4142135623730952}},"df":4}}}},"a":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"predictability.html#examples-from-the-standard-library":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.4142135623730952},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.4142135623730952},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.7320508075688773},"type-safety.html#non-consuming-builders-preferred":{"tf":1.4142135623730952},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.7320508075688773}},"df":15,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"type-safety.html#consuming-builders":{"tf":1.4142135623730952}},"df":1}}}}}}},"n":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"k":{"docs":{"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":2.6457513110645909},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.0}},"df":4,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"m":{"docs":{},"df":0,"y":{"docs":{},"df":0,"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0}},"df":1}}}}}}}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0}},"df":1}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"m":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"k":{"docs":{},"df":0,"_":{"docs":{},"df":0,"2":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"type-safety.html#consuming-builders":{"tf":1.7320508075688773}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"m":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"k":{"docs":{},"df":0,"\"":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"df":0,"l":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}},"g":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":2.6457513110645909}},"df":1}},"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"interoperability.html#examples-of-error-messages":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.0},"dependability.html#static-enforcement":{"tf":1.4142135623730952}},"df":4}},"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0},"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.7320508075688773},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.7320508075688773}},"df":4,"_":{"docs":{},"df":0,"y":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"!":{"docs":{},"df":0,"(":{"docs":{},"df":0,"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0}},"df":1}}}}},"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0}},"df":1}}}}}}},"a":{"docs":{},"df":0,"m":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0}},"df":1},"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"tf":1.0},"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.0}},"df":2}}}}}},"n":{"docs":{},"df":0,"d":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"m":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":2,"i":{"docs":{},"df":0,"n":{"docs":{"type-safety.html#consuming-builders":{"tf":1.4142135623730952},"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.4142135623730952}},"df":4}}}},"l":{"docs":{},"df":0,"l":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":1}},"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.4142135623730952}},"df":1}}}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":1}}}}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":1}}}}}}}}}}}},"w":{"docs":{},"df":0,"o":{"docs":{"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0}},"df":7}},"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"k":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":1},"g":{"docs":{"type-safety.html#consuming-builders":{"tf":1.4142135623730952},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.7320508075688773},"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.4142135623730952}},"df":9}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.4142135623730952},"about.html#rust-api-guidelines":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":4}}},"s":{"docs":{},"df":0,"e":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"tf":1.0},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0}},"df":8}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"documentation.html#crate-level-docs-are-thorough-and-include-examples-c-crate-doc":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2}}}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"dependability.html#static-enforcement":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.0},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.0}},"df":8,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":1}}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.4142135623730952},"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.0}},"df":3,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":1}}}}}}}}},"e":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"future-proofing.html#exceptions":{"tf":1.0}},"df":2}}},"u":{"docs":{"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0}},"df":2},"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":2.0}},"df":1}}}}},"m":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"v":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0}},"df":1}}}}}}},"c":{"docs":{},"df":0,"p":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"i":{"docs":{"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.4142135623730952}},"df":1}}},"]":{"docs":{},"df":0,">":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"naming.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"`":{"docs":{},"df":0,"'":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}},".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}}}}}}},"u":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0}},"df":2}},"r":{"docs":{},"df":0,"n":{"docs":{"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2}}},"l":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.4142135623730952},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.4142135623730952},"external-links.html#external-links":{"tf":1.0},"documentation.html#crate-level-docs-are-thorough-and-include-examples-c-crate-doc":{"tf":1.0},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0}},"df":7}}},"t":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":1,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.7320508075688773}},"df":1}}}},"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"s":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.0}},"df":3}},"a":{"docs":{},"df":0,"v":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1},"d":{"docs":{"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":2}}},"o":{"docs":{},"df":0,"g":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0},"documentation.html#examples":{"tf":1.0}},"df":2,"i":{"docs":{},"df":0,"c":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}}},"t":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":1},"l":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":2}}},"w":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":1,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":3}}}}}},"o":{"docs":{},"df":0,"k":{"docs":{"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.4142135623730952},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":4,"u":{"docs":{},"df":0,"p":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":3}},"n":{"docs":{},"df":0,"k":{"docs":{"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.4142135623730952},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.4142135623730952},"external-links.html#external-links":{"tf":1.0},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.4142135623730952},"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":2.23606797749979}},"df":7,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.4142135623730952}},"df":1}}}}}}}}}},"e":{"docs":{"flexibility.html#disadvantages-of-generics":{"tf":1.0},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0}},"df":2,"r":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.4142135623730952},"type-safety.html#consuming-builders":{"tf":2.0}},"df":2}}},"s":{"docs":{},"df":0,"t":{"docs":{"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.0}},"df":1}},"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":1}}}}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":5.385164807134504},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952}},"df":3}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"l":{"docs":{"dependability.html#static-enforcement":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.4142135623730952}},"df":1}}}}}}}}}},"b":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"predictability.html#examples-from-the-standard-library":{"tf":1.0},"interoperability.html#examples-from-the-standard-library":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.4142135623730952},"future-proofing.html#examples-from-the-standard-library":{"tf":1.0},"naming.html#examples-from-the-standard-library":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.7320508075688773},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.7320508075688773},"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.4142135623730952},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.7320508075688773},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.4142135623730952},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0},"external-links.html#external-links":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":17}}}},"e":{"docs":{},"df":0,"r":{"docs":{"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.0}},"df":1}},".":{"docs":{},"df":0,"r":{"docs":{"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0}},"df":1}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":2}}}},"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"interoperability.html#examples-of-error-messages":{"tf":1.0}},"df":3}}},"y":{"docs":{"flexibility.html#disadvantages-of-generics":{"tf":1.0}},"df":1,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"d":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"g":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.4142135623730952}},"df":2}}}},"c":{"docs":{"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.4142135623730952},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0},"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.0},"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.0},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":7.416198487095663},"debuggability.html#debug--representation-is-never-empty-c-debug-nonempty":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"tf":1.0},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.0},"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"tf":1.0},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0},"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.4142135623730952},"dependability.html#static-enforcement":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.7320508075688773},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.0},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.0},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.4142135623730952},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.4142135623730952},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.4142135623730952},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.7320508075688773},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"documentation.html#crate-level-docs-are-thorough-and-include-examples-c-crate-doc":{"tf":1.0},"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.0},"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0},"interoperability.html#collections-implement--fromiterator--and--extend--c-collect":{"tf":1.0},"flexibility.html#functions-expose-intermediate-results-to-avoid-duplicate-work-c-intermediate":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.4142135623730952},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0},"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.0},"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0},"debuggability.html#all-public-types-implement--debug--c-debug":{"tf":1.0},"predictability.html#operator-overloads-are-unsurprising-c-overload":{"tf":1.0},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0}},"df":57,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":4}}}},"t":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0}},"df":3},"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.4142135623730952},"future-proofing.html#exceptions":{"tf":1.0},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.4142135623730952},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0},"flexibility.html#disadvantages-of-trait-objects":{"tf":1.0}},"df":6,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":1}}},"d":{"docs":{},"df":0,"e":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.4142135623730952},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.7320508075688773},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.0},"flexibility.html#disadvantages-of-generics":{"tf":1.4142135623730952},"predictability.html#examples-from-the-standard-library":{"tf":1.0},"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0},"flexibility.html#advantages-of-trait-objects":{"tf":1.7320508075688773},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0}},"df":15}},"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":3}}},"u":{"docs":{},"df":0,"s":{"docs":{"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.0},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0}},"df":2}},"i":{"docs":{},"df":0,"d":{"docs":{"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":1},"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"type-safety.html#consuming-builders":{"tf":2.449489742783178},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.7320508075688773},"type-safety.html#non-consuming-builders-preferred":{"tf":2.0}},"df":3}}}}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0}},"df":1}}}},"t":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":2.449489742783178},"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":2.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.7320508075688773},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":2.0}},"df":4,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":2.23606797749979},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.4142135623730952},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.4142135623730952},"type-safety.html#non-consuming-builders-preferred":{"tf":1.4142135623730952},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.7320508075688773}},"df":7,"o":{"docs":{},"df":0,"r":{"docs":{"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.4142135623730952},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"predictability.html#examples-from-the-standard-library":{"tf":1.4142135623730952},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.4142135623730952},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.7320508075688773},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":3.872983346207417},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":7}}}}}},"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.7320508075688773},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":2,"l":{"docs":{},"df":0,"i":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"m":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.7320508075688773},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.4142135623730952}},"df":6}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.0}},"df":1}},"q":{"docs":{},"df":0,"u":{"docs":{"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"d":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.0},"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"tf":1.0},"flexibility.html#functions-expose-intermediate-results-to-avoid-duplicate-work-c-intermediate":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0},"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.4142135623730952},"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0}},"df":13,"e":{"docs":{},"df":0,"r":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":3}}},"s":{"docs":{},"df":0,"t":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":2.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":4}}}},"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0}},"df":6}},"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"n":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{"debuggability.html#debug--representation-is-never-empty-c-debug-nonempty":{"tf":1.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.4142135623730952}},"df":2}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"flexibility.html#disadvantages-of-generics":{"tf":1.0}},"df":2}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.4142135623730952},"about.html#rust-api-guidelines":{"tf":1.0}},"df":2,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"d":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0}},"df":1}}}}}}}}}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.4142135623730952}},"df":2}}},"o":{"docs":{},"df":0,"l":{"docs":{"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.0},"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":3,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.4142135623730952}},"df":1}}}}}}},"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"t":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0}},"df":2}}},"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0},"flexibility.html#disadvantages-of-generics":{"tf":1.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0},"interoperability.html#collections-implement--fromiterator--and--extend--c-collect":{"tf":1.0},"predictability.html#examples-from-the-standard-library":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0}},"df":11}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0}},"df":1,"u":{"docs":{},"df":0,"m":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":1}}}}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.4142135623730952}},"df":2}},"u":{"docs":{},"df":0,"c":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":1}}},"v":{"docs":{"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.7320508075688773},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":6,"e":{"docs":{},"df":0,"y":{"docs":{"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.7320508075688773},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0}},"df":4},"r":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#examples-from-the-standard-library":{"tf":1.0},"dependability.html#static-enforcement":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":4},"s":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":2.23606797749979},"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"tf":1.7320508075688773},"predictability.html#examples-from-the-standard-library":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0},"interoperability.html#examples-from-the-standard-library":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.7320508075688773},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":2.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.7320508075688773}},"df":11}},"n":{"docs":{},"df":0,"t":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.4142135623730952},"dependability.html#dynamic-enforcement":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":2.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.7320508075688773},"external-links.html#external-links":{"tf":2.23606797749979},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0}},"df":11},"i":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0},"interoperability.html#collections-implement--fromiterator--and--extend--c-collect":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":5}}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0}},"df":1}}}}}}}}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.4142135623730952}},"df":1}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#disadvantages-of-generics":{"tf":1.0},"interoperability.html#collections-implement--fromiterator--and--extend--c-collect":{"tf":2.23606797749979},"checklist.html#rust-api-guidelines-checklist":{"tf":1.7320508075688773},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.7320508075688773},"flexibility.html#advantages-of-generics":{"tf":1.0}},"df":5}}}}},"i":{"docs":{},"df":0,"n":{"docs":{"flexibility.html#disadvantages-of-generics":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"dependability.html#static-enforcement":{"tf":1.4142135623730952},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.4142135623730952}},"df":4}},"p":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}}}}}}}},"i":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.7320508075688773},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":2.0}},"df":6}},"w":{"docs":{},"df":0,"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{"predictability.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}},"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"t":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.4142135623730952},"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0}},"df":2}},"u":{"docs":{},"df":0,"n":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":1}},"a":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":1,"n":{"docs":{},"df":0,"d":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":3.1622776601683797},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0}},"df":3,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"/":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"/":{"docs":{},"df":0,"l":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":1},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"\"":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{},"df":0,"\"":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"n":{"docs":{"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.0},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.7320508075688773},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.4142135623730952},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":2.23606797749979},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":8,"l":{"docs":{},"df":0,"i":{"docs":{"predictability.html#examples-from-the-standard-library":{"tf":1.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0}},"df":2}}}}},"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#functions-expose-intermediate-results-to-avoid-duplicate-work-c-intermediate":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"l":{"docs":{"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0},"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.4142135623730952},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0},"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"tf":1.0},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0},"dependability.html#static-enforcement":{"tf":1.0}},"df":11}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}}}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":1},"x":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.4142135623730952},"type-safety.html#consuming-builders":{"tf":2.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0}},"df":4}}},"a":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.7320508075688773}},"df":2,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":1}}}}}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.4142135623730952},"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0}},"df":5}}},"s":{"docs":{"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2}}},"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":1}}},"e":{"docs":{"predictability.html#operator-overloads-are-unsurprising-c-overload":{"tf":1.0},"dependability.html#static-enforcement":{"tf":1.0}},"df":2}},"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.4142135623730952},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":4,"l":{"docs":{},"df":0,"i":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0}},"df":2}}}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0}},"df":2}}}}}}},"e":{"docs":{"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.7320508075688773},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.4142135623730952},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.4142135623730952},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":5}},"s":{"docs":{},"df":0,"e":{"docs":{"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0}},"df":6,"l":{"docs":{},"df":0,"i":{"docs":{"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.4142135623730952},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.4142135623730952}},"df":4}}},"n":{"docs":{"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":2.23606797749979},"dependability.html#dynamic-enforcement":{"tf":1.4142135623730952},"flexibility.html#functions-expose-intermediate-results-to-avoid-duplicate-work-c-intermediate":{"tf":1.0},"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0}},"df":5,"'":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0}},"df":1}}}}},"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0}},"df":1}}}}}},"w":{"docs":{},"df":0,"d":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.4142135623730952}},"df":1}},"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"tf":1.0}},"df":1}}}}}}},"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.4142135623730952},"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.7320508075688773},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.7320508075688773},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.7320508075688773},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.4142135623730952}},"df":12}},"l":{"docs":{},"df":0,"l":{"docs":{"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.4142135623730952},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.4142135623730952},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.7320508075688773},"flexibility.html#advantages-of-generics":{"tf":1.7320508075688773},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.4142135623730952},"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.4142135623730952},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0}},"df":10,"e":{"docs":{},"df":0,"r":{"docs":{"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.4142135623730952},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.7320508075688773},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952}},"df":6}}}},"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":2.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.4142135623730952}},"df":3,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.4142135623730952},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":6}}}}}}},"r":{"docs":{},"df":0,"i":{"docs":{"flexibility.html#disadvantages-of-trait-objects":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.4142135623730952}},"df":2}},"e":{"docs":{"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":2}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0}},"df":2}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"h":{"docs":{"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0}},"df":1}}}}}}},"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0}},"df":2}}}}},"c":{"docs":{},"df":0,"h":{"docs":{"dependability.html#static-enforcement":{"tf":1.0},"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0}},"df":2}}},"u":{"docs":{},"df":0,"s":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.0}},"df":2}}},"m":{"docs":{},"df":0,"d":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":1,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.4142135623730952}},"df":1}}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":1}}}}}}}},"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":1,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0}},"df":1}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"predictability.html#examples-from-the-standard-library":{"tf":1.0},"dependability.html#static-enforcement":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"interoperability.html#collections-implement--fromiterator--and--extend--c-collect":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":7,"i":{"docs":{},"df":0,"v":{"docs":{"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0}},"df":1}}}}},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"external-links.html#external-links":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.7320508075688773},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":2.23606797749979},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.4142135623730952},"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.4142135623730952},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.7320508075688773},"about.html#rust-api-guidelines":{"tf":2.449489742783178},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":2.6457513110645909},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":3.872983346207417},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":2.449489742783178},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.0},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":2.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":2.0},"documentation.html#crate-level-docs-are-thorough-and-include-examples-c-crate-doc":{"tf":1.4142135623730952},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.7320508075688773},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":3.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":2.23606797749979}},"df":20,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0}},"df":2}}}},"'":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":2}}}}},"f":{"docs":{},"df":0,"g":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.7320508075688773},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.0}},"df":2,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0}},"df":1}}}}}}}}}},"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":1}}}}}}}}}}}},"(":{"docs":{},"df":0,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.0}},"df":1}}}}}},"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":2.0}},"df":1}}}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0}},"df":1}}}}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2}}},"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.4142135623730952},"type-safety.html#consuming-builders":{"tf":1.0},"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0}},"df":4}},"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":2.449489742783178},"about.html#rust-api-guidelines":{"tf":1.0}},"df":5,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2}}}}}},"a":{"docs":{},"df":0,"p":{"docs":{"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":2}}},"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.4142135623730952},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":4}},"r":{"docs":{"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0}},"df":1}}}}}}}}},"n":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0}},"df":2}}},"g":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":2.23606797749979},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":2.0},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.7320508075688773},"documentation.html#examples":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":7}},"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"s":{"docs":{"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"dependability.html#static-enforcement":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":4}},"i":{"docs":{},"df":0,"c":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0}},"df":5}}}}},"f":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.7320508075688773},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.4142135623730952}},"df":3,"o":{"docs":{},"df":0,"o":{"docs":{"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.4142135623730952}},"df":3,"(":{"docs":{},"df":0,"c":{"docs":{"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.7320508075688773}},"df":1},"a":{"docs":{"dependability.html#static-enforcement":{"tf":1.4142135623730952}},"df":1},"b":{"docs":{"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":2.0}},"df":1},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0}},"df":1}}}}}}},"<":{"docs":{},"df":0,"i":{"docs":{"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.7320508075688773},"interoperability.html#collections-implement--fromiterator--and--extend--c-collect":{"tf":1.0},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.4142135623730952},"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.0},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0},"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.4142135623730952},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"tf":1.4142135623730952},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.4142135623730952},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.4142135623730952},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.0}},"df":21}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":2.0}},"df":1}}},"r":{"docs":{},"df":0,"m":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":3,"a":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2}}}}},".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.4142135623730952},"future-proofing.html#future-proofing":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":4}}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.4142135623730952}},"df":2}}},"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0}},"df":1}}}}}},"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.7320508075688773},"flexibility.html#functions-expose-intermediate-results-to-avoid-duplicate-work-c-intermediate":{"tf":1.4142135623730952},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":2.23606797749979},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.7320508075688773},"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":2.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0},"flexibility.html#disadvantages-of-generics":{"tf":1.4142135623730952},"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":2.449489742783178},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.7320508075688773},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.4142135623730952},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":2.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.4142135623730952},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":2.23606797749979},"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.0},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.7320508075688773},"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":2.8284271247461905},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.7320508075688773},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0}},"df":27,"'":{"docs":{"flexibility.html#disadvantages-of-generics":{"tf":1.0}},"df":1}}}}}}}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"l":{"docs":{"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.4142135623730952},"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"interoperability.html#examples-from-the-standard-library":{"tf":1.0},"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":2.0},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.4142135623730952},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":9,"u":{"docs":{},"df":0,"r":{"docs":{"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"dependability.html#static-enforcement":{"tf":1.0}},"df":5}}}},"q":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1},"t":{"docs":{"flexibility.html#disadvantages-of-trait-objects":{"tf":1.0}},"df":1},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":1}}}}}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0}},"df":1}}}},"s":{"docs":{"interoperability.html#examples-of-error-messages":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.4142135623730952}},"df":2}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"v":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0}},"df":1}}},"g":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":2.449489742783178},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.4142135623730952},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":4,"_":{"docs":{},"df":0,"a":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1},"c":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1},"b":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1}}}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"2":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"g":{"docs":{},"df":0,"z":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"interoperability.html#examples":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"g":{"docs":{},"df":0,"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"interoperability.html#examples":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0},"flexibility.html#flexibility":{"tf":1.0}},"df":3}}}}},"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}},"6":{"docs":{},"df":0,"4":{"docs":{"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.7320508075688773},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.7320508075688773}},"df":2,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}}}}}}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":3.7416573867739415},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.4142135623730952},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952}},"df":5,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":2.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.4142135623730952},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0}},"df":4}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0}},"df":1}}}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0}},"df":1}}}}},"m":{"docs":{},"df":0,"(":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0}},"df":2}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"interoperability.html#collections-implement--fromiterator--and--extend--c-collect":{"tf":1.7320508075688773}},"df":2,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"<":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}}}}}}}},"_":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":2.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0}},"df":2,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"f":{"docs":{},"df":0,"8":{"docs":{"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"<":{"docs":{},"df":0,"u":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"interoperability.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}},"1":{"docs":{},"df":0,"6":{"docs":{"interoperability.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}},"t":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":1},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}},"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"v":{"docs":{},"df":0,"6":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"r":{"docs":{"interoperability.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}}}}}}}}},"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.4142135623730952}},"df":3}}}}}}},"n":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":2.0},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.4142135623730952},"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":2.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.4142135623730952},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":2.0},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.4142135623730952},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":2.449489742783178},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.4142135623730952},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":2.0},"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":2.0},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.4142135623730952},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.4142135623730952},"dependability.html#static-enforcement":{"tf":1.4142135623730952},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.4142135623730952},"type-safety.html#non-consuming-builders-preferred":{"tf":2.23606797749979},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.4142135623730952},"type-safety.html#consuming-builders":{"tf":1.7320508075688773},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.7320508075688773},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.7320508075688773},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.7320508075688773}},"df":26,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0}},"df":1}}}},"(":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1}}}}}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#examples-from-the-standard-library":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0}},"df":2},"l":{"docs":{},"df":0,"e":{"docs":{"interoperability.html#examples-of-error-messages":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0},"predictability.html#examples-from-the-standard-library":{"tf":1.4142135623730952},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":5,"s":{"docs":{},"df":0,"y":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":1}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"predictability.html#examples-from-the-standard-library":{"tf":1.0}},"df":2}}}}}}}},"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":2.23606797749979}},"df":4}}},"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"dependability.html#static-enforcement":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":2.0}},"df":2,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":1}}}}}}}}},"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":1}}}}}}}},"m":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"d":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0}},"df":2},"e":{"docs":{"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0}},"df":1},"a":{"docs":{},"df":0,"l":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.0}},"df":2}}}},"m":{"docs":{},"df":0,"t":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0}},"df":2}}},"5":{"docs":{},"df":0,"0":{"docs":{},"df":0,"5":{"docs":{"external-links.html#external-links":{"tf":1.0}},"df":1}}},"1":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":2,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"5":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0}},"df":1}}},"6":{"docs":{},"df":0,"8":{"docs":{},"df":0,"7":{"docs":{"documentation.html#crate-level-docs-are-thorough-and-include-examples-c-crate-doc":{"tf":1.0},"external-links.html#external-links":{"tf":1.0}},"df":2}}},"5":{"docs":{},"df":0,"7":{"docs":{},"df":0,"4":{"docs":{"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0},"external-links.html#external-links":{"tf":1.0}},"df":2}}},"9":{"docs":{},"df":0,"9":{"docs":{"external-links.html#external-links":{"tf":1.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0}},"df":2}},".":{"docs":{},"df":0,"0":{"docs":{"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.4142135623730952}},"df":2,".":{"docs":{},"df":0,"0":{"docs":{"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0},"documentation.html#examples":{"tf":1.0}},"df":2}}}}},"_":{"docs":{},"df":0,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":1}}}}}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"dependability.html#dynamic-enforcement":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":2}}}}}}}},"n":{"docs":{},"df":0,"1":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0}},"df":1},"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"d":{"docs":{"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"e":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.4142135623730952},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.4142135623730952},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.4142135623730952},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"documentation.html#examples":{"tf":1.7320508075688773},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":2.23606797749979}},"df":9},"a":{"docs":{},"df":0,"t":{"docs":{"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0}},"df":1},"b":{"docs":{},"df":0,"l":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":1}}},"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"<":{"docs":{},"df":0,"t":{"docs":{},"df":0,">":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0}},"df":2}},"n":{"docs":{"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.4142135623730952},"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.4142135623730952},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.4142135623730952},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0}},"df":5,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}}},"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"tf":1.0}},"df":1}}}}},"e":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":1,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"debuggability.html#debug--representation-is-never-empty-c-debug-nonempty":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2}}}}}}},"e":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"debuggability.html#debug--representation-is-never-empty-c-debug-nonempty":{"tf":1.4142135623730952},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.4142135623730952},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0},"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":10}}},"e":{"docs":{},"df":0,"d":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.0},"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.4142135623730952},"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"flexibility.html#advantages-of-trait-objects":{"tf":1.4142135623730952},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.4142135623730952},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.4142135623730952},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.4142135623730952}},"df":17}},"x":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0}},"df":1}}}}}}},"g":{"docs":{"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0}},"df":1},"w":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0},"predictability.html#examples-from-the-standard-library":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.7320508075688773},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":2.449489742783178},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"interoperability.html#collections-implement--fromiterator--and--extend--c-collect":{"tf":1.0}},"df":7,"(":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":1}}}}}}}},"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":2.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":2.23606797749979},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":2.0},"dependability.html#static-enforcement":{"tf":1.4142135623730952}},"df":6}}}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"necessities.html#necessities":{"tf":1.0}},"df":2,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":5}}}}}}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0}},"df":1}}},"m":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0}},"df":2}},"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.7320508075688773},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.4142135623730952},"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.4142135623730952}},"df":4}}}}},"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"u":{"docs":{},"df":0,"6":{"docs":{},"df":0,"4":{"docs":{"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0}},"df":1}}}}}}}}}}}}},"m":{"docs":{},"df":0,"e":{"docs":{"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":2.8284271247461905},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.4142135623730952},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":2.6457513110645909},"type-safety.html#consuming-builders":{"tf":1.4142135623730952},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.4142135623730952},"flexibility.html#advantages-of-generics":{"tf":1.0},"external-links.html#external-links":{"tf":1.7320508075688773},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.7320508075688773},"naming.html#naming":{"tf":1.0},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.4142135623730952},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.7320508075688773},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.4142135623730952},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.4142135623730952},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":2.449489742783178},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.4142135623730952},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0}},"df":20,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0}},"df":1}}}}}}}}},"i":{"docs":{},"df":0,"/":{"docs":{},"df":0,"o":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":2}},"o":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"predictability.html#examples-from-the-standard-library":{"tf":1.0}},"df":2,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"<":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0}},"df":1}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":1}}}}}}}}}}}},"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.0}},"df":2}}}}}},"(":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0}},"df":1}}}}}}}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.4142135623730952}},"df":2}}}}}},"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0}},"df":1}}}}}},"p":{"docs":{"interoperability.html#examples-from-the-standard-library":{"tf":1.0},"interoperability.html#examples-of-error-messages":{"tf":1.0}},"df":2,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"r":{"docs":{"interoperability.html#examples-from-the-standard-library":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.4142135623730952}},"df":2}}}},"c":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":1}},"3":{"docs":{},"df":0,"2":{"docs":{"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.4142135623730952}},"df":1}},"6":{"docs":{},"df":0,"4":{"docs":{"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.0}},"df":1,">":{"docs":{},"df":0,">":{"docs":{},"df":0,"(":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.0}},"df":1}}}}}}},"g":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"c":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":1}}}}}},"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.4142135623730952},"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0}},"df":6}},"s":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.4142135623730952}},"df":1,"s":{"docs":{"dependability.html#static-enforcement":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.0}},"df":2}}},"l":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.4142135623730952},"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.7320508075688773},"type-safety.html#consuming-builders":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.7320508075688773},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.4142135623730952},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.4142135623730952},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.4142135623730952},"future-proofing.html#exceptions":{"tf":1.4142135623730952},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.7320508075688773},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":2.0},"future-proofing.html#examples-from-the-standard-library":{"tf":1.0}},"df":19,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"future-proofing.html#examples-from-the-standard-library":{"tf":1.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.4142135623730952}},"df":2,"l":{"docs":{},"df":0,"i":{"docs":{"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"tf":1.0},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.0}},"df":2}}}}}},"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":2.0},"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"tf":1.7320508075688773},"checklist.html#rust-api-guidelines-checklist":{"tf":2.8284271247461905},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.7320508075688773},"interoperability.html#examples-from-the-standard-library":{"tf":1.0},"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.4142135623730952},"predictability.html#operator-overloads-are-unsurprising-c-overload":{"tf":1.4142135623730952},"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.4142135623730952},"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.7320508075688773},"interoperability.html#collections-implement--fromiterator--and--extend--c-collect":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":2.449489742783178},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"debuggability.html#all-public-types-implement--debug--c-debug":{"tf":1.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.7320508075688773},"dependability.html#dynamic-enforcement":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":2.8284271247461905},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":2.449489742783178},"flexibility.html#advantages-of-generics":{"tf":2.0}},"df":21}}}}},"<":{"docs":{},"df":0,"i":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0}},"df":1},"t":{"docs":{"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.4142135623730952},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":2},"'":{"docs":{},"df":0,"a":{"docs":{"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.4142135623730952}},"df":1},"d":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":1}}}}}},"s":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0}},"df":1}}},"_":{"docs":{},"df":0,"x":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":1}}}}}}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.4142135623730952}},"df":1}}}}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":1}}}}}},"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"d":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0},"documentation.html#crate-level-docs-are-thorough-and-include-examples-c-crate-doc":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.7320508075688773},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.4142135623730952},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0}},"df":11},"s":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.4142135623730952}},"df":1}}}},"a":{"docs":{},"df":0,"s":{"docs":{"flexibility.html#disadvantages-of-generics":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.4142135623730952}},"df":2}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.0},"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"tf":1.0},"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0},"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.0},"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.7320508075688773}},"df":10}}},"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":1},"t":{"docs":{},"df":0,"i":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.4142135623730952},"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":2}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}}}},"d":{"docs":{"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0}},"df":3}},"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"flexibility.html#functions-expose-intermediate-results-to-avoid-duplicate-work-c-intermediate":{"tf":1.4142135623730952}},"df":3}}}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"tf":1.0}},"df":2}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"interoperability.html#interoperability":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0}},"df":4}}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.4142135623730952},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.4142135623730952}},"df":3}}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0},"flexibility.html#functions-expose-intermediate-results-to-avoid-duplicate-work-c-intermediate":{"tf":1.4142135623730952}},"df":2}}}},"g":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":2.0},"interoperability.html#examples-from-the-standard-library":{"tf":2.0}},"df":2,"r":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":2}}},"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"_":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.7320508075688773},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":3,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}},"w":{"docs":{},"df":0,"(":{"docs":{},"df":0,"b":{"docs":{"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.0}},"df":1},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.0}},"df":1}}}}}}}},"i":{"docs":{},"df":0,"t":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.7320508075688773},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.0}},"df":3,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0}},"df":1}}}}}}}},"n":{"docs":{},"df":0,"n":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"t":{"docs":{"naming.html#examples-from-the-standard-library":{"tf":1.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.4142135623730952},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.0}},"df":3,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"<":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":3}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#disadvantages-of-trait-objects":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0}},"df":2}}}}},"e":{"docs":{"flexibility.html#disadvantages-of-generics":{"tf":1.0}},"df":1,"x":{"docs":{"interoperability.html#examples-of-error-messages":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.7320508075688773},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.4142135623730952},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":2.0}},"df":4,".":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":1}}}}}}}},"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.7320508075688773},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":2.23606797749979},"dependability.html#static-enforcement":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.7320508075688773},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.7320508075688773},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":2.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.4142135623730952}},"df":12,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"(":{"docs":{},"df":0,"3":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}}}}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.7320508075688773}},"df":1}}},"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.4142135623730952},"flexibility.html#advantages-of-generics":{"tf":1.4142135623730952}},"df":2}},"a":{"docs":{},"df":0,"l":{"docs":{"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"tf":1.0}},"df":1}},"o":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1,"r":{"docs":{},"df":0,"m":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.4142135623730952},"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":3}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"interoperability.html#examples-of-error-messages":{"tf":1.4142135623730952}},"df":1}}},"r":{"docs":{},"df":0,"i":{"docs":{"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0}},"df":4}}},"o":{"docs":{},"df":0,"c":{"docs":{"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0}},"df":3},"k":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.0},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"tf":1.0},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0}},"df":4},"l":{"docs":{},"df":0,"v":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"flexibility.html#disadvantages-of-trait-objects":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.4142135623730952},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":6}}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"flexibility.html#disadvantages-of-trait-objects":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.4142135623730952}},"df":4}}}},"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":2}}}},"'":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":1},"e":{"docs":{},"df":0,"r":{"docs":{"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.4142135623730952},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":2.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":2.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":2.23606797749979},"naming.html#examples-from-the-standard-library":{"tf":1.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":3.4641016151377546},"interoperability.html#collections-implement--fromiterator--and--extend--c-collect":{"tf":1.7320508075688773}},"df":9,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"<":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.7320508075688773},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.4142135623730952}},"df":2}}}}},">":{"docs":{},"df":0,"(":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.7320508075688773}},"df":1}}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"z":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{"interoperability.html#collections-implement--fromiterator--and--extend--c-collect":{"tf":1.0}},"df":1}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#collections-implement--fromiterator--and--extend--c-collect":{"tf":1.0}},"df":1}}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#collections-implement--fromiterator--and--extend--c-collect":{"tf":1.0}},"df":1}}}}}}}}}}}}},"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.7320508075688773},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0}},"df":1}}}}}}}}},"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"naming.html#examples-from-the-standard-library":{"tf":1.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.4142135623730952}},"df":2}}},"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0}},"df":1}}}}}}},"m":{"docs":{"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":2.0},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":2.0},"interoperability.html#collections-implement--fromiterator--and--extend--c-collect":{"tf":1.4142135623730952},"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.4142135623730952},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":2.23606797749979},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":2.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":10}}}},"s":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":2.23606797749979},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.4142135623730952},"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.4142135623730952}},"df":4,"e":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":3}}},"r":{"docs":{},"df":0,"d":{"docs":{"documentation.html#examples":{"tf":1.7320508075688773},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":2.6457513110645909},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":4.0},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0}},"df":5,"e":{"docs":{},"df":0,"'":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":2},"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"d":{"docs":{"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0}},"df":1}}}},"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":1}}}},"j":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"future-proofing.html#examples":{"tf":1.0}},"df":1}}}}}}}}}}}},"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"interoperability.html#examples":{"tf":1.0}},"df":1}}}}}}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#examples":{"tf":1.0}},"df":1}}}}}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":1}}}}}}},"v":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":1},"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.7320508075688773},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":5,"i":{"docs":{},"df":0,"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"interoperability.html#examples-of-error-messages":{"tf":1.0}},"df":2}}}}},"l":{"docs":{},"df":0,"f":{"docs":{"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":2.8284271247461905},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"interoperability.html#examples-of-error-messages":{"tf":1.0},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.7320508075688773},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":2.6457513110645909},"flexibility.html#disadvantages-of-trait-objects":{"tf":1.4142135623730952},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":2.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0}},"df":15,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0}},"df":1}}}}}},"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.4142135623730952}},"df":1}}}}},"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0}},"df":1}}}}}},"c":{"docs":{},"df":0,"w":{"docs":{},"df":0,"d":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":1}}},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"(":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":1}}}}}}}},"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0}},"df":1}}}},"e":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"documentation.html#crate-level-docs-are-thorough-and-include-examples-c-crate-doc":{"tf":1.0},"dependability.html#static-enforcement":{"tf":1.0},"flexibility.html#disadvantages-of-generics":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0}},"df":7,"m":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}},"t":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.4142135623730952},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.7320508075688773}},"df":7,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1},"b":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1},"c":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"df":0,"l":{"docs":{"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":3.3166247903554},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952}},"df":2}},"n":{"docs":{},"df":0,"d":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.4142135623730952},"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":2.23606797749979},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":2.449489742783178}},"df":6},"s":{"docs":{"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"tf":1.0},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.4142135623730952}},"df":2}},"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":2.23606797749979},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0}},"df":2}}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.4142135623730952},"interoperability.html#examples-of-error-messages":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":3,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":1}}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.4142135623730952},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.4142135623730952}},"df":4}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":2.0}},"df":1}}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0},"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0}},"df":5}}}},"r":{"docs":{},"df":0,"c":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":2.6457513110645909}},"df":2}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"flexibility.html#disadvantages-of-generics":{"tf":1.0}},"df":3}},"b":{"docs":{},"df":0,"l":{"docs":{"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":1}},"z":{"docs":{},"df":0,"e":{"docs":{"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.4142135623730952},"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.4142135623730952},"flexibility.html#advantages-of-trait-objects":{"tf":1.4142135623730952},"future-proofing.html#exceptions":{"tf":1.0},"flexibility.html#disadvantages-of-generics":{"tf":1.4142135623730952},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.7320508075688773},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"future-proofing.html#examples-from-the-standard-library":{"tf":1.0}},"df":8,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":1}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.0}},"df":1},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":3}}}},"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"predictability.html#examples-from-the-standard-library":{"tf":1.0},"flexibility.html#disadvantages-of-generics":{"tf":1.4142135623730952},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.7320508075688773}},"df":8}}},"g":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0}},"df":3}}}},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.4142135623730952},"flexibility.html#disadvantages-of-generics":{"tf":1.4142135623730952},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0}},"df":4}}},"l":{"docs":{"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.0}},"df":3}}}},"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0}},"df":2,"i":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":2,"f":{"docs":{},"df":0,"i":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":2}}}}},"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0}},"df":5,"l":{"docs":{},"df":0,"i":{"docs":{"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0},"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"tf":1.0}},"df":3}}}}}}}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0}},"df":1}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"n":{"docs":{"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0}},"df":1},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"<":{"docs":{},"df":0,"i":{"docs":{},"df":0,"6":{"docs":{},"df":0,"4":{"docs":{"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0}},"df":2}}}},"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0}},"df":1}}}}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.4142135623730952},"flexibility.html#disadvantages-of-generics":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0}},"df":5}}}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.4142135623730952},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0}},"df":4}}},"f":{"docs":{},"df":0,"t":{"docs":{},"df":0,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.4142135623730952}},"df":1}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{"type-safety.html#consuming-builders":{"tf":1.4142135623730952},"type-safety.html#non-consuming-builders-preferred":{"tf":2.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0}},"df":3,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":1}}}}}},"<":{"docs":{},"df":0,"f":{"docs":{},"df":0,">":{"docs":{},"df":0,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0}},"df":1}}}}}}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":1}},"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":2.23606797749979},"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":7,"i":{"docs":{"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0},"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":5}},"a":{"docs":{},"df":0,"l":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.0},"flexibility.html#disadvantages-of-generics":{"tf":1.4142135623730952},"flexibility.html#advantages-of-trait-objects":{"tf":1.0}},"df":3}}}}},"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0}},"df":1}}}}},"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.4142135623730952}},"df":1}}},"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":1}},"w":{"docs":{"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.4142135623730952},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":2.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":3}},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{"predictability.html#operator-overloads-are-unsurprising-c-overload":{"tf":1.0},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0}},"df":4}},"l":{"docs":{},"df":0,"l":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"t":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":1}}}}},"c":{"docs":{},"df":0,"e":{"docs":{"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.4142135623730952},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.7320508075688773},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0}},"df":3,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}}}}}}}}}},"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0}},"df":1}}},"d":{"docs":{"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.7320508075688773},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":2.8284271247461905}},"df":2,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"s":{"docs":{},"df":0,"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"naming.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"naming.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"p":{"docs":{"predictability.html#operator-overloads-are-unsurprising-c-overload":{"tf":1.0}},"df":1}},"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{"future-proofing.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}}}}}},"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"future-proofing.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}}}}}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"naming.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.4142135623730952},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0}},"df":2}}}}}}}}}}}},"f":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}}}}}}}}}}},"m":{"docs":{},"df":0,"t":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":1}}}}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0}},"df":1}}}}}}}},"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0}},"df":1}}}}}},"u":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0}},"df":1}}}}}}}},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0}},"df":1}}}}}}}}}},"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}}}}}}}}}},"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"naming.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"f":{"docs":{},"df":0,"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"future-proofing.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{},"df":0,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"predictability.html#examples-from-the-standard-library":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":2}}}}}}}}}}}}}}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"predictability.html#examples-from-the-standard-library":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":2}}}}}}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"{":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"p":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"naming.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}}}}}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.4142135623730952}},"df":1}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#consuming-builders":{"tf":1.7320508075688773}},"df":1,"(":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0}},"df":1}}}}}}}},"e":{"docs":{},"df":0,"p":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0}},"df":1}},"r":{"docs":{"predictability.html#examples-from-the-standard-library":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":2.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.4142135623730952},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0},"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.0}},"df":6,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0},"predictability.html#operator-overloads-are-unsurprising-c-overload":{"tf":1.0}},"df":2}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"predictability.html#examples-from-the-standard-library":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":2.449489742783178},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"interoperability.html#examples-of-error-messages":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":2.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.0},"interoperability.html#examples-from-the-standard-library":{"tf":1.0}},"df":8,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"y":{"docs":{},"df":0,"t":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}}}}}},"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"f":{"docs":{},"df":0,"8":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":2}}}}}}}}}}}}},"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0}},"df":1}}}}}}}}}}}},"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":1}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0}},"df":1}}}},"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"y":{"docs":{},"df":0,"t":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}}}},"b":{"docs":{},"df":0,"y":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}}}}}}}}}}},"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0}},"df":1}}},"c":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.4142135623730952},"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.7320508075688773},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.4142135623730952},"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.4142135623730952},"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.4142135623730952},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.7320508075688773},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":2.449489742783178},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.4142135623730952},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.7320508075688773},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.4142135623730952},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":2.23606797749979},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.4142135623730952}},"df":22,"u":{"docs":{},"df":0,"r":{"docs":{"future-proofing.html#exceptions":{"tf":2.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.4142135623730952},"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":2.8284271247461905},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":2.23606797749979}},"df":8}}}}}},"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.7320508075688773},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":2.8284271247461905}},"df":2}},"c":{"docs":{},"df":0,"k":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"e":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1},"i":{"docs":{},"df":0,"c":{"docs":{"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.7320508075688773},"flexibility.html#advantages-of-generics":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"dependability.html#static-enforcement":{"tf":1.4142135623730952},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.4142135623730952},"flexibility.html#disadvantages-of-generics":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.4142135623730952}},"df":9}},"u":{"docs":{"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0}},"df":1}},"y":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1},"n":{"docs":{},"df":0,"d":{"docs":{"flexibility.html#disadvantages-of-generics":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.4142135623730952},"future-proofing.html#examples-from-the-standard-library":{"tf":1.0},"predictability.html#examples-from-the-standard-library":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"interoperability.html#examples-from-the-standard-library":{"tf":1.0},"naming.html#examples-from-the-standard-library":{"tf":1.0},"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.4142135623730952},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.7320508075688773},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":14}}}}},"r":{"docs":{},"df":0,"t":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0}},"df":3}}}},"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.7320508075688773},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2,"t":{"docs":{},"df":0,"i":{"docs":{"type-safety.html#type-safety":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.7320508075688773},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0}},"df":4}}}},"m":{"docs":{},"df":0,"e":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.4142135623730952},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0}},"df":11}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":1}}}}}},"y":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"predictability.html#examples-from-the-standard-library":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":4,"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1}}}}}}}}}}}},"n":{"docs":{},"df":0,"c":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.7320508075688773},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":2.23606797749979},"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":2.449489742783178},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952}},"df":4},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"x":{"docs":{"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.0},"interoperability.html#examples-of-error-messages":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":2.449489742783178},"predictability.html#operator-overloads-are-unsurprising-c-overload":{"tf":1.0}},"df":5}}}}},"u":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":3},"c":{"docs":{},"df":0,"i":{"docs":{"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":3}}}}},"b":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":2}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":1}}}}}},"c":{"docs":{},"df":0,"h":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.4142135623730952}},"df":5}},"i":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0}},"df":2,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0}},"df":1}}}}},"g":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0}},"df":1}}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0}},"df":1}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0}},"df":1}}}},"u":{"docs":{"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0}},"df":1},"$":{"docs":{},"df":0,"t":{"docs":{"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0}},"df":1}}}}}},"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.4142135623730952},"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.4142135623730952}},"df":4}},"s":{"docs":{"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0}},"df":1}}}},"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0}},"df":1}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{"interoperability.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"t":{"docs":{"predictability.html#examples-from-the-standard-library":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.7320508075688773},"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"tf":1.4142135623730952},"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.7320508075688773}},"df":4}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0}},"df":1}}},"a":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":2.8284271247461905}},"df":1}}}}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":2.23606797749979}},"df":1}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.7320508075688773}},"df":1}}}}}}}}}}}}}}}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}}}}}},"a":{"docs":{},"df":0,"n":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0}},"df":1}}}},"g":{"docs":{"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.4142135623730952}},"df":1,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"about.html#rust-api-guidelines":{"tf":2.6457513110645909},"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0},"naming.html#examples-from-the-standard-library":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.4142135623730952},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.4142135623730952},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0}},"df":9}}}}}},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"dependability.html#static-enforcement":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":6}}}}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"y":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":1},"a":{"docs":{},"df":0,"t":{"docs":{"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0}},"df":3,"l":{"docs":{},"df":0,"i":{"docs":{"flexibility.html#advantages-of-trait-objects":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"n":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1}}},"a":{"docs":{},"df":0,"y":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":1}}},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":2.6457513110645909},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0},"flexibility.html#advantages-of-trait-objects":{"tf":1.4142135623730952},"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.0},"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":2.0},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":2.23606797749979},"checklist.html#rust-api-guidelines-checklist":{"tf":1.7320508075688773},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.4142135623730952},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.7320508075688773},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.4142135623730952},"flexibility.html#disadvantages-of-trait-objects":{"tf":1.4142135623730952},"flexibility.html#disadvantages-of-generics":{"tf":1.7320508075688773}},"df":15}}},"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":1}}}}}},"_":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":1,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":1}}}}},"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":1}}}}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":1}}}},"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":1,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":1}}}}}}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":1}}}}}}}}},"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":2.8284271247461905}},"df":2,"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0}},"df":1}}}}}}}}}},"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.4142135623730952},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":2,"n":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.4142135623730952},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.4142135623730952}},"df":3}}},"t":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":2.23606797749979}},"df":1,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"=":{"docs":{},"df":0,"$":{"docs":{},"df":0,"(":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0}},"df":1}}}}},"z":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0}},"df":2,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"d":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":3,"<":{"docs":{},"df":0,"t":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.4142135623730952}},"df":1}}}}}},"r":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":2.0}},"df":2,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}}}},"c":{"docs":{},"df":0,"<":{"docs":{},"df":0,"t":{"docs":{"predictability.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0},"future-proofing.html#exceptions":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0},"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.4142135623730952},"external-links.html#external-links":{"tf":1.4142135623730952},"about.html#rust-api-guidelines":{"tf":2.6457513110645909},"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.7320508075688773},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":2.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.4142135623730952},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":2.8284271247461905},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.7320508075688773},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.4142135623730952},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":19,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":2.0},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0}},"df":7}}},"'":{"docs":{"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.7320508075688773}},"df":4}}},"n":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"dependability.html#static-enforcement":{"tf":1.4142135623730952}},"df":2,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":5}}}},"l":{"docs":{},"df":0,"e":{"docs":{"dependability.html#static-enforcement":{"tf":1.0},"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"tf":1.0}},"df":2}},"b":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0}},"df":1}}}}},"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"e":{"docs":{"debuggability.html#all-public-types-implement--debug--c-debug":{"tf":1.0}},"df":1}},"w":{"docs":{"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":3}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":1}},"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"t":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.7320508075688773},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2}},"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0}},"df":2}}}},"n":{"docs":{},"df":0,"d":{"docs":{"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.4142135623730952}},"df":1}}}},"e":{"docs":{"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.4142135623730952}},"df":2,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0}},"df":1}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":1},"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.4142135623730952}},"df":4}}}}}},"v":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0}},"df":1}}}}}}}}}}}}},"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0},"predictability.html#examples-from-the-standard-library":{"tf":1.0},"flexibility.html#disadvantages-of-trait-objects":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0}},"df":5}}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"r":{"docs":{"future-proofing.html#examples-from-the-standard-library":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"future-proofing.html#exceptions":{"tf":1.7320508075688773},"type-safety.html#consuming-builders":{"tf":1.4142135623730952},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.4142135623730952},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.4142135623730952},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.4142135623730952},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.4142135623730952},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0}},"df":14}}},"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0},"interoperability.html#examples-from-the-standard-library":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":5,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0},"debuggability.html#debug--representation-is-never-empty-c-debug-nonempty":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.4142135623730952},"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.4142135623730952},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.7320508075688773},"flexibility.html#disadvantages-of-generics":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":9}}}}}},"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.7320508075688773}},"df":3}}}}}}}},"a":{"docs":{},"df":0,"d":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":2.449489742783178},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0},"flexibility.html#disadvantages-of-generics":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.7320508075688773},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":7,"_":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.4142135623730952},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.4142135623730952}},"df":4,"/":{"docs":{},"df":0,"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0}},"df":2}}}}}}},"m":{"docs":{"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"d":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}}}}},"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0}},"df":1}}}}}},"l":{"docs":{"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2,"l":{"docs":{},"df":0,"i":{"docs":{"flexibility.html#advantages-of-trait-objects":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2}}},"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.4142135623730952}},"df":4}}}},"s":{"docs":{},"df":0,"t":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":1,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.7320508075688773}},"df":1}}}}},"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"predictability.html#operator-overloads-are-unsurprising-c-overload":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"predictability.html#examples-from-the-standard-library":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":2}}},"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":2}}}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.0},"flexibility.html#functions-expose-intermediate-results-to-avoid-duplicate-work-c-intermediate":{"tf":1.0},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":7,"<":{"docs":{},"df":0,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.4142135623730952}},"df":1}}},"t":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":1}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}}}}}}}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0}},"df":1}}}},"l":{"docs":{"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.7320508075688773}},"df":1,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0}},"df":2}}},"a":{"docs":{},"df":0,"t":{"docs":{"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0},"flexibility.html#functions-expose-intermediate-results-to-avoid-duplicate-work-c-intermediate":{"tf":1.0}},"df":2}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"documentation.html#examples":{"tf":1.7320508075688773},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":2.6457513110645909}},"df":4}},"v":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.4142135623730952},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0}},"df":5}}},"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0}},"df":1}}}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}}}}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.4142135623730952},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.4142135623730952},"future-proofing.html#exceptions":{"tf":1.0},"future-proofing.html#examples-from-the-standard-library":{"tf":1.0}},"df":6}}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0}},"df":3}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.4142135623730952},"interoperability.html#examples-from-the-standard-library":{"tf":1.0},"naming.html#examples-from-the-standard-library":{"tf":2.23606797749979},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.4142135623730952},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.7320508075688773},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":2.23606797749979},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.7320508075688773},"flexibility.html#examples-from-the-standard-library":{"tf":2.449489742783178},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.4142135623730952},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.7320508075688773},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.0},"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":2.0}},"df":17}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0}},"df":1}}}},"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0}},"df":2}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0}},"df":4}}},"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":1}}}},"d":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1,"u":{"docs":{},"df":0,"c":{"docs":{"flexibility.html#advantages-of-trait-objects":{"tf":1.0}},"df":1},"n":{"docs":{},"df":0,"d":{"docs":{"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0}},"df":1}}}}}}},"w":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0}},"df":2},"f":{"docs":{},"df":0,"c":{"docs":{"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"documentation.html#crate-level-docs-are-thorough-and-include-examples-c-crate-doc":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.4142135623730952},"external-links.html#external-links":{"tf":2.449489742783178},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0}},"df":7}},"s":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":1}},"4":{"docs":{},"df":0,"3":{"docs":{},"df":0,"0":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.4142135623730952},"external-links.html#external-links":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":3}}},"o":{"docs":{"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0}},"df":1,"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2}}}},"n":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.4142135623730952},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.7320508075688773},"type-safety.html#consuming-builders":{"tf":2.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.7320508075688773},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.4142135623730952},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0}},"df":15,"t":{"docs":{},"df":0,"o":{"docs":{"interoperability.html#collections-implement--fromiterator--and--extend--c-collect":{"tf":1.0}},"df":1}},"c":{"docs":{"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0}},"df":1}},"w":{"docs":{},"df":0,"n":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":2.449489742783178},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.4142135623730952},"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.4142135623730952},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.0}},"df":6,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{"type-safety.html#consuming-builders":{"tf":2.23606797749979},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":2.0},"external-links.html#external-links":{"tf":1.0},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":2.0}},"df":8}}}}}}}},"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0}},"df":1}}},"d":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.0},"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":2.23606797749979}},"df":4}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0}},"df":2,"l":{"docs":{},"df":0,"i":{"docs":{"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0}},"df":1}}}}}}}},"p":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0}},"df":1}}}}},"k":{"docs":{"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"y":{"docs":{"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.4142135623730952},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0}},"df":3}}},"b":{"docs":{},"df":0,"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.4142135623730952},"flexibility.html#advantages-of-trait-objects":{"tf":1.4142135623730952},"flexibility.html#disadvantages-of-trait-objects":{"tf":2.0},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":3.4641016151377546},"checklist.html#rust-api-guidelines-checklist":{"tf":1.7320508075688773},"flexibility.html#disadvantages-of-generics":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.4142135623730952},"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.4142135623730952}},"df":8,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":1}}}}},"p":{"docs":{},"df":0,"t":{"docs":{"future-proofing.html#examples-from-the-standard-library":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.7320508075688773}},"df":2,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.7320508075688773},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0},"predictability.html#examples-from-the-standard-library":{"tf":1.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":2.6457513110645909},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.7320508075688773},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":10,"<":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":1},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0}},"df":1}}}}}}}}}},"&":{"docs":{},"df":0,"v":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":1},"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"s":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}}}}}}}}},"m":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.4142135623730952}},"df":2}}},"e":{"docs":{},"df":0,"n":{"docs":{"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0},"predictability.html#examples-from-the-standard-library":{"tf":1.4142135623730952}},"df":4},"r":{"docs":{"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"predictability.html#operator-overloads-are-unsurprising-c-overload":{"tf":2.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"tf":1.0},"predictability.html#examples-from-the-standard-library":{"tf":1.0}},"df":9}}},"h":{"docs":{"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0}},"df":1},"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.4142135623730952},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"dependability.html#static-enforcement":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.4142135623730952},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.4142135623730952},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.4142135623730952}},"df":14,"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}}}}}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"predictability.html#operator-overloads-are-unsurprising-c-overload":{"tf":1.4142135623730952}},"df":2}}}}}}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0}},"df":3,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.7320508075688773}},"df":1,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0}},"df":1}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0}},"df":1}}}}}}}}}}}}},"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0}},"df":6}}}}}}},"u":{"docs":{},"df":0,"t":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.4142135623730952},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.4142135623730952},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.4142135623730952},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.7320508075688773},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"flexibility.html#disadvantages-of-generics":{"tf":1.0},"dependability.html#static-enforcement":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0},"future-proofing.html#examples-from-the-standard-library":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0}},"df":12,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.4142135623730952},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.4142135623730952},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":3}}},"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.4142135623730952},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.7320508075688773},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.7320508075688773}},"df":5}}}}},"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}}},"6":{"docs":{},"df":0,"4":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1}},"b":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":2.23606797749979},"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.0}},"df":5,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{"naming.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"t":{"docs":{"naming.html#examples-from-the-standard-library":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"naming.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}}}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"naming.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}}}}}}},"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":1}}}}}}}},".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.0}},"df":1}}}}}},"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":1}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":2.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":2.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":5}}},"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0}},"df":2,"!":{"docs":{},"df":0,"(":{"docs":{},"df":0,"c":{"docs":{"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0}},"df":1},"m":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"u":{"docs":{"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0}},"df":1},"t":{"docs":{"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0}},"df":1}}}},"b":{"docs":{"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0}},"df":1},"a":{"docs":{"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0}},"df":1}}}}}}},"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0}},"df":1}}}}}},"y":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.7320508075688773},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"interoperability.html#examples-of-error-messages":{"tf":1.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.4142135623730952},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.4142135623730952},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.7320508075688773},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":7,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"b":{"docs":{},"df":0,"y":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"future-proofing.html#examples":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"d":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.4142135623730952}},"df":1}},"e":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.0},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":6,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"v":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":3,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":2}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.0}},"df":2}}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.0}},"df":3}}},"y":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":2}}}},"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":2}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0}},"df":2}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.0}},"df":2}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":2}}},"a":{"docs":{},"df":0,"r":{"docs":{"predictability.html#operator-overloads-are-unsurprising-c-overload":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.4142135623730952},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0}},"df":6}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0}},"df":3}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"flexibility.html#disadvantages-of-generics":{"tf":1.0}},"df":2}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.4142135623730952},"future-proofing.html#examples-from-the-standard-library":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":2.6457513110645909},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":2.0}},"df":6,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}}}}}}}}}},"o":{"docs":{},"df":0,"k":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0}},"df":1},"l":{"docs":{"interoperability.html#examples-from-the-standard-library":{"tf":1.0},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.4142135623730952}},"df":5}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"future-proofing.html#exceptions":{"tf":2.0},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"future-proofing.html#examples-from-the-standard-library":{"tf":1.4142135623730952},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":3.1622776601683797},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952}},"df":10,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"dependability.html#static-enforcement":{"tf":1.0}},"df":1}}}}}},"d":{"docs":{},"df":0,"i":{"docs":{"flexibility.html#disadvantages-of-generics":{"tf":1.0}},"df":1}},"x":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.4142135623730952}},"df":1,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"<":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0}},"df":1}}}}},"t":{"docs":{"predictability.html#examples-from-the-standard-library":{"tf":1.0},"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":2.0}},"df":2},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.7320508075688773}},"df":1}}},"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0}},"df":1}}}}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":1}}}}}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"predictability.html#examples-from-the-standard-library":{"tf":1.0}},"df":2}}}}}},"t":{"docs":{},"df":0,"h":{"docs":{"interoperability.html#examples-from-the-standard-library":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.4142135623730952},"flexibility.html#advantages-of-generics":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.4142135623730952},"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":7}}},"i":{"docs":{},"df":0,"t":{"docs":{"dependability.html#static-enforcement":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":3,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0}},"df":1}}},"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.4142135623730952},"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":2.23606797749979},"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.4142135623730952},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":2.23606797749979}},"df":6}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952}},"df":2},"y":{"docs":{},"df":0,"<":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.0}},"df":1}}}}}},"g":{"docs":{"interoperability.html#examples-from-the-standard-library":{"tf":1.4142135623730952}},"df":1,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"interoperability.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":1,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":1}}}}}},"d":{"docs":{"dependability.html#static-enforcement":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":2,"<":{"docs":{},"df":0,"t":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.4142135623730952}},"df":1}}},"r":{"docs":{"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":2.0},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":2.23606797749979}},"df":2},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0}},"df":5}},"e":{"docs":{"predictability.html#examples-from-the-standard-library":{"tf":1.0},"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0}},"df":4,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0}},"df":1}}}}}}}},"g":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"e":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"tf":1.7320508075688773},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952}},"df":3}}}},"u":{"docs":{},"df":0,"f":{"docs":{"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0}},"df":1,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"n":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":2.23606797749979}},"df":3}}},"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"n":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"g":{"docs":{"dependability.html#static-enforcement":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.0},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0}},"df":3},"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"dependability.html#dynamic-enforcement":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.4142135623730952},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0}},"df":5,"e":{"docs":{},"df":0,"r":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":3.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.4142135623730952},"type-safety.html#non-consuming-builders-preferred":{"tf":2.0},"type-safety.html#consuming-builders":{"tf":3.0}},"df":5}}},"t":{"docs":{"predictability.html#operator-overloads-are-unsurprising-c-overload":{"tf":1.0}},"df":1}}}}},"2":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":2,".":{"docs":{},"df":0,"0":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":2.449489742783178}},"df":1}}},"8":{"docs":{"interoperability.html#examples-of-error-messages":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.4142135623730952},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.4142135623730952}},"df":5},"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.4142135623730952},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0},"dependability.html#static-enforcement":{"tf":1.0}},"df":3,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}}}}}}}}}}},"u":{"docs":{"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":2.0}},"df":1,"t":{"docs":{},"df":0,"f":{"docs":{"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"interoperability.html#examples-of-error-messages":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.4142135623730952},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.4142135623730952}},"df":5}},"3":{"docs":{},"df":0,"2":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":2.6457513110645909},"interoperability.html#examples-from-the-standard-library":{"tf":1.0}},"df":3}},"n":{"docs":{},"df":0,"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":3}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.4142135623730952},"type-safety.html#consuming-builders":{"tf":1.0},"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0}},"df":4,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":1}}},"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"flexibility.html#disadvantages-of-generics":{"tf":1.0}},"df":2}}}}},"l":{"docs":{},"df":0,"i":{"docs":{"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":2.23606797749979}},"df":2}}}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"p":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":3}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"k":{"docs":{"flexibility.html#advantages-of-trait-objects":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.0},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0}},"df":4}}}},"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"interoperability.html#examples-of-error-messages":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":2}}},"t":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":1},"q":{"docs":{},"df":0,"u":{"docs":{"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0}},"df":1}}}}}},"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"predictability.html#operator-overloads-are-unsurprising-c-overload":{"tf":1.0}},"df":2}}}}}},"a":{"docs":{},"df":0,"f":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.7320508075688773},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.7320508075688773}},"df":3}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0},"interoperability.html#examples-of-error-messages":{"tf":1.0}},"df":2}}}}}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":1}}},"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.4142135623730952}},"df":1}}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":1}}}}}}}}}},"p":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0}},"df":4,"d":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":1}}}}}}}}}}}},"a":{"docs":{},"df":0,"t":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.4142135623730952}},"df":1}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":2.449489742783178}},"df":1}}}}}},"s":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":1}}}}}},"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"n":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0}},"df":1}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.4142135623730952}},"df":1}}},"1":{"docs":{},"df":0,"6":{"docs":{"interoperability.html#examples-from-the-standard-library":{"tf":1.7320508075688773}},"df":1}},"8":{"docs":{"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.4142135623730952},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.4142135623730952},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.4142135623730952},"dependability.html#static-enforcement":{"tf":1.7320508075688773},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.7320508075688773},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":8},"6":{"docs":{},"df":0,"4":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":1},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"l":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.4142135623730952},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":2.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0}},"df":5}},"s":{"docs":{"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":2.23606797749979},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.4142135623730952},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":2.23606797749979},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":3.7416573867739415},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.7320508075688773},"about.html#rust-api-guidelines":{"tf":1.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.7320508075688773},"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"tf":1.4142135623730952},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.4142135623730952},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":2.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.4142135623730952},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.7320508075688773},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.4142135623730952},"type-safety.html#non-consuming-builders-preferred":{"tf":2.0},"dependability.html#dynamic-enforcement":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":2.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.4142135623730952},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.4142135623730952},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":2.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.7320508075688773},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.4142135623730952},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"tf":1.0},"interoperability.html#collections-implement--fromiterator--and--extend--c-collect":{"tf":1.0},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":2.6457513110645909},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":2.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.4142135623730952},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.4142135623730952},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":2.0},"flexibility.html#disadvantages-of-trait-objects":{"tf":1.0},"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.4142135623730952},"flexibility.html#disadvantages-of-generics":{"tf":1.4142135623730952},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":2.449489742783178},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0},"predictability.html#examples-from-the-standard-library":{"tf":1.0},"dependability.html#static-enforcement":{"tf":1.0}},"df":44,"i":{"docs":{},"df":0,"z":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.4142135623730952},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.7320508075688773},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.4142135623730952}},"df":3}},"e":{"docs":{},"df":0,"r":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.7320508075688773},"flexibility.html#examples-from-the-standard-library":{"tf":1.4142135623730952},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.7320508075688773},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":2.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.7320508075688773},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.4142135623730952}},"df":11}},"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0},"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.0}},"df":2}},"g":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.4142135623730952},"dependability.html#static-enforcement":{"tf":1.0},"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.4142135623730952},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.4142135623730952}},"df":4}}}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0}},"df":3}}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":2}}}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0},"flexibility.html#functions-expose-intermediate-results-to-avoid-duplicate-work-c-intermediate":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0}},"df":4}}}}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0}},"df":1}},"t":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":1}}}},"d":{"docs":{"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":2,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"documentation.html#examples":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":2.23606797749979},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":2.0}},"df":5,">":{"docs":{},"df":0,"(":{"docs":{},"df":0,"t":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}}}}}},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.0},"flexibility.html#disadvantages-of-trait-objects":{"tf":1.4142135623730952},"flexibility.html#disadvantages-of-generics":{"tf":1.0}},"df":3}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.4142135623730952}},"df":1}}}}},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}},"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":1}}}}},"d":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"flexibility.html#disadvantages-of-trait-objects":{"tf":1.0},"flexibility.html#disadvantages-of-generics":{"tf":1.0}},"df":2}}}}}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.7320508075688773},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0}},"df":5}},"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0}},"df":2}}}}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}}}}}}},"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":1}}}},"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#disadvantages-of-generics":{"tf":1.0},"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"tf":1.0},"dependability.html#static-enforcement":{"tf":1.0}},"df":3}}}}},"e":{"docs":{},"df":0,"r":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":8}}}},"r":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.0}},"df":1,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.4142135623730952}},"df":2}}},"l":{"docs":{},"df":0,"i":{"docs":{"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.0}},"df":2}}}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":2}}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"tf":1.0}},"df":3}}},"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"flexibility.html#disadvantages-of-trait-objects":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":2.449489742783178}},"df":2}}}},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.7320508075688773},"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.7320508075688773},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":2.23606797749979},"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":2.23606797749979},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.7320508075688773},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0},"future-proofing.html#exceptions":{"tf":1.7320508075688773},"flexibility.html#functions-expose-intermediate-results-to-avoid-duplicate-work-c-intermediate":{"tf":1.4142135623730952},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":2.449489742783178}},"df":16}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"p":{"docs":{"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.4142135623730952},"future-proofing.html#exceptions":{"tf":1.4142135623730952},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"future-proofing.html#examples-from-the-standard-library":{"tf":1.0}},"df":4}}},"o":{"docs":{"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0}},"df":1,"w":{"docs":{},"df":0,"n":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.0},"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0}},"df":2,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.4142135623730952},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":5}}}}},"i":{"docs":{},"df":0,"d":{"docs":{"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":2.0}},"df":1}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":1}}}},"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"(":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0}},"df":1}}}}}}}}}}}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.4142135623730952}},"df":1}}}}}}},"c":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"external-links.html#external-links":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.7320508075688773},"documentation.html#crate-level-docs-are-thorough-and-include-examples-c-crate-doc":{"tf":1.4142135623730952}},"df":4,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.7320508075688773},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.4142135623730952}},"df":2}}},"(":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"l":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":1}}}}}}}}}}}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.4142135623730952}},"df":2}}}}}}},"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0},"external-links.html#external-links":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":2.0},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.4142135623730952},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":2.8284271247461905},"documentation.html#documentation":{"tf":1.0},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":2.449489742783178},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.4142135623730952},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":2.23606797749979}},"df":10}}}}}},"n":{"docs":{},"df":0,"e":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":2}},"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"t":{"docs":{"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":2}}}},"u":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"flexibility.html#functions-expose-intermediate-results-to-avoid-duplicate-work-c-intermediate":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"flexibility.html#disadvantages-of-generics":{"tf":1.0}},"df":4}}}},"r":{"docs":{},"df":0,"e":{"docs":{"dependability.html#static-enforcement":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0}},"df":2}},"a":{"docs":{},"df":0,"l":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.7320508075688773}},"df":1}},"e":{"docs":{"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0}},"df":2}},"e":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":1,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.7320508075688773},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":3.0}},"df":4,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":1}}},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.0}},"df":1}}}}}}},"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":2.0}},"df":1}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":1}}}}}}}},"e":{"docs":{},"df":0,"f":{"docs":{"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"tf":1.7320508075688773}},"df":3,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"tf":1.0}},"df":2}}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1},"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.7320508075688773}},"df":1}}},"i":{"docs":{},"df":0,"s":{"docs":{"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0}},"df":1},"d":{"docs":{"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":4}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0}},"df":1}}},"/":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,".":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{"debuggability.html#debug--representation-is-never-empty-c-debug-nonempty":{"tf":1.7320508075688773},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"debuggability.html#all-public-types-implement--debug--c-debug":{"tf":1.4142135623730952},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":2.449489742783178},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":2.6457513110645909}},"df":7,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":1}}}}}}},"g":{"docs":{"debuggability.html#debuggability":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":2.0},"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"tf":1.4142135623730952}},"df":3}}}}}}},"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.4142135623730952},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":3},"p":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.4142135623730952},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":3}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.7320508075688773},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":4,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0}},"df":2}}},"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"d":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":1}}}}}}}}}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0},"external-links.html#external-links":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0},"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"tf":1.0}},"df":4}},"r":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":2}}}},"c":{"docs":{},"df":0,"t":{"docs":{"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":1}}},"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"dependability.html#static-enforcement":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.7320508075688773},"about.html#rust-api-guidelines":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.4142135623730952}},"df":6}}}},"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0},"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.4142135623730952},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.4142135623730952},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":2.23606797749979},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":6,"i":{"docs":{},"df":0,"t":{"docs":{"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.4142135623730952}},"df":2}}}},"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.7320508075688773}},"df":8}}}}},"p":{"docs":{},"df":0,"(":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":2.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.7320508075688773},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.7320508075688773},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.7320508075688773},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"dependability.html#dependability":{"tf":1.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":2.8284271247461905}},"df":7}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"t":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":1}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"about.html#rust-api-guidelines":{"tf":1.4142135623730952}},"df":1}}}}},"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}},"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":1}}}}},"3":{"docs":{},"df":0,"2":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1},"4":{"docs":{},"df":0,"4":{"docs":{"external-links.html#external-links":{"tf":1.0}},"df":1}}},"m":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0}},"df":3,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0}},"df":2}}}}},":":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0}},"df":1}}}},"t":{"docs":{"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0}},"df":1}}},"y":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.4142135623730952}},"df":1}},"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"(":{"docs":{},"df":0,"3":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}},"<":{"docs":{},"df":0,"i":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.4142135623730952}},"df":1,">":{"docs":{},"df":0,"(":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"<":{"docs":{},"df":0,"s":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"<":{"docs":{},"df":0,"i":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0}},"df":1,"<":{"docs":{},"df":0,"i":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.7320508075688773}},"df":1}}}}}}}}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.4142135623730952},"flexibility.html#disadvantages-of-generics":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.0}},"df":9,"t":{"docs":{"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.4142135623730952}},"df":3},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.7320508075688773}},"df":2}}}}},"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.7320508075688773},"interoperability.html#examples-of-error-messages":{"tf":1.0}},"df":2}}}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.4142135623730952},"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0},"interoperability.html#collections-implement--fromiterator--and--extend--c-collect":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.7320508075688773},"flexibility.html#disadvantages-of-trait-objects":{"tf":2.0},"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":2.6457513110645909},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":2.449489742783178},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.7320508075688773},"type-safety.html#consuming-builders":{"tf":2.449489742783178},"checklist.html#rust-api-guidelines-checklist":{"tf":2.449489742783178},"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"tf":1.0},"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":2.23606797749979},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":2.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.7320508075688773},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":2.449489742783178},"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"tf":1.0},"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.4142135623730952},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":2.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":2.0},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":2.23606797749979},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.7320508075688773}},"df":25,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":2.23606797749979}},"df":2}}}}}},"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"predictability.html#examples-from-the-standard-library":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":3}}}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0}},"df":4}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":1,"_":{"docs":{},"df":0,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"predictability.html#examples-from-the-standard-library":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":2}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"t":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":2.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.4142135623730952},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.7320508075688773},"type-safety.html#consuming-builders":{"tf":1.0},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.4142135623730952},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":2.23606797749979},"type-safety.html#non-consuming-builders-preferred":{"tf":2.0}},"df":8,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":1}}}}}},"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0}},"df":3}},"t":{"docs":{"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0}},"df":1}}},"l":{"docs":{"predictability.html#operator-overloads-are-unsurprising-c-overload":{"tf":1.0}},"df":1,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":1}}}}}},"p":{"docs":{},"df":0,"l":{"docs":{"predictability.html#operator-overloads-are-unsurprising-c-overload":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.4142135623730952},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.4142135623730952}},"df":5}}}}},"c":{"docs":{},"df":0,"h":{"docs":{"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.0}},"df":3}}},"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":1}}}},"t":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":2.6457513110645909}},"df":1,"/":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}}}}}},"]":{"docs":{},"df":0,"(":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}}}}}}}}},"s":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}}},"l":{"docs":{},"df":0,"e":{"docs":{"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":2.0}},"df":1,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0}},"df":1}}}}}}}},"o":{"docs":{},"df":0,"d":{"docs":{"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.4142135623730952},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0}},"df":3,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"l":{"docs":{"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":2.0},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.4142135623730952},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.0},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":7}}},"v":{"docs":{},"df":0,"e":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.4142135623730952}},"df":1}},"r":{"docs":{},"df":0,"e":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":2.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.4142135623730952},"type-safety.html#consuming-builders":{"tf":1.0},"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"flexibility.html#disadvantages-of-generics":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.4142135623730952},"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.4142135623730952},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.4142135623730952},"about.html#rust-api-guidelines":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"dependability.html#static-enforcement":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0}},"df":21}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"h":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.0},"flexibility.html#advantages-of-trait-objects":{"tf":1.0}},"df":2}}}}}}}},"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0}},"df":1}}},"i":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"flexibility.html#functions-expose-intermediate-results-to-avoid-duplicate-work-c-intermediate":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0}},"df":7,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0},"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0}},"df":2}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}}}},"k":{"docs":{},"df":0,"e":{"docs":{"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0},"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.0},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0},"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.4142135623730952},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0},"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"tf":1.0},"flexibility.html#disadvantages-of-generics":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.4142135623730952}},"df":16}},"r":{"docs":{},"df":0,"k":{"docs":{"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":4,"e":{"docs":{},"df":0,"r":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":1}}}},"x":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}}}}},"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{"macros.html#macros":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":2.23606797749979},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":2.0},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.7320508075688773},"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.7320508075688773},"checklist.html#rust-api-guidelines-checklist":{"tf":2.8284271247461905},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":2.0}},"df":9,"_":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":2}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0}},"df":2}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0}},"df":3,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.0}},"df":3}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":3}}}},"p":{"docs":{"predictability.html#examples-from-the-standard-library":{"tf":1.0}},"df":1},"y":{"docs":{},"df":0,"b":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}},"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":3},"s":{"docs":{},"df":0,"t":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0}},"df":2}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":2.0}},"df":2}}}},"o":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.4142135623730952},"flexibility.html#disadvantages-of-generics":{"tf":1.0}},"df":2}}}}}},"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"l":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":2.449489742783178}},"df":2}}}}}}}}}}},"t":{"docs":{},"df":0,"p":{"docs":{},"df":0,":":{"docs":{},"df":0,"/":{"docs":{},"df":0,"/":{"docs":{},"df":0,"w":{"docs":{},"df":0,"w":{"docs":{},"df":0,"w":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,":":{"docs":{},"df":0,"/":{"docs":{},"df":0,"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0}},"df":1}}}}}}},"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":1,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"/":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,".":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{},"df":0,"/":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"3":{"docs":{},"df":0,".":{"docs":{},"df":0,"8":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":1}}}}}}}}},"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"j":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"x":{"docs":{},"df":0,".":{"docs":{},"df":0,"y":{"docs":{},"df":0,".":{"docs":{},"df":0,"z":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.7320508075688773}},"df":4},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0}},"df":2}}}},"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"dependability.html#static-enforcement":{"tf":1.0}},"df":1}},"r":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"flexibility.html#advantages-of-trait-objects":{"tf":1.0},"flexibility.html#disadvantages-of-generics":{"tf":1.0}},"df":2}}}}}}},"l":{"docs":{},"df":0,"p":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0}},"df":4,"e":{"docs":{},"df":0,"r":{"docs":{"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"o":{"docs":{"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.4142135623730952}},"df":1,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0}},"df":1}}}}}}}},"x":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0}},"df":2},"r":{"docs":{},"df":0,"e":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0},"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0}},"df":2,"i":{"docs":{},"df":0,"n":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}}}},"a":{"docs":{},"df":0,"d":{"docs":{"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0}},"df":1},"v":{"docs":{},"df":0,"i":{"docs":{"flexibility.html#disadvantages-of-generics":{"tf":1.0}},"df":1}},"p":{"docs":{"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0}},"df":1}}},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"d":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"dependability.html#static-enforcement":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":3,"l":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.7320508075688773}},"df":1}}},"v":{"docs":{},"df":0,"e":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.4142135623730952}},"df":2}},"s":{"docs":{},"df":0,"h":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":3,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}}}}}}}}}}},"z":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":1}}}}},"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"k":{"docs":{"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2}}}}}}}}},"w":{"docs":{"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.4142135623730952},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":2.0}},"df":4,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":2.0}},"df":6,"r":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.4142135623730952}},"df":1}}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0}},"df":3}}},"a":{"docs":{},"df":0,"p":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.4142135623730952},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0}},"df":2,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"dependability.html#static-enforcement":{"tf":1.4142135623730952},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":2,"(":{"docs":{},"df":0,"$":{"docs":{},"df":0,"t":{"docs":{"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0}},"df":1}}}}}}}}},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":2}},"d":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.4142135623730952}},"df":1,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0}},"df":1}}}}}}}}}}}},"e":{"docs":{"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":1}}}}}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0},"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0}},"df":6}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.4142135623730952},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":10}}}}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0},"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0}},"df":5}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{"naming.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.7320508075688773},"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":2.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.4142135623730952},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":2.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":5},"k":{"docs":{"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":2.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"flexibility.html#functions-expose-intermediate-results-to-avoid-duplicate-work-c-intermediate":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.7320508075688773}},"df":8,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0}},"df":1}}}}}}},"l":{"docs":{},"df":0,"d":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.4142135623730952}},"df":1}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.4142135623730952}},"df":1}}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"flexibility.html#disadvantages-of-generics":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"l":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.4142135623730952},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.0},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.7320508075688773},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0}},"df":11}}},"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.4142135623730952},"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":6}},"y":{"docs":{"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.0},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.4142135623730952},"about.html#rust-api-guidelines":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":10},"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}}}}}}},"title":{"root":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"m":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0}},"df":1}}}}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"dependability.html#static-enforcement":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":2}}}}},"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"debuggability.html#debug--representation-is-never-empty-c-debug-nonempty":{"tf":1.0}},"df":1}}}},"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{"flexibility.html#functions-expose-intermediate-results-to-avoid-duplicate-work-c-intermediate":{"tf":1.0}},"df":1}}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"future-proofing.html#exceptions":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"external-links.html#external-links":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"d":{"docs":{"interoperability.html#collections-implement--fromiterator--and--extend--c-collect":{"tf":1.0}},"df":1}}}},"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"documentation.html#crate-level-docs-are-thorough-and-include-examples-c-crate-doc":{"tf":1.0},"interoperability.html#examples-of-error-messages":{"tf":1.0},"naming.html#examples-from-the-standard-library":{"tf":1.0},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.4142135623730952},"future-proofing.html#examples":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"future-proofing.html#examples-from-the-standard-library":{"tf":1.0},"interoperability.html#examples-from-the-standard-library":{"tf":1.0},"predictability.html#examples-from-the-standard-library":{"tf":1.0},"documentation.html#examples":{"tf":1.0},"interoperability.html#examples":{"tf":1.0}},"df":12}}}}},"v":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.4142135623730952}},"df":1}}},"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0}},"df":1}}}}}},"r":{"docs":{},"df":0,"r":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":1,"o":{"docs":{},"df":0,"r":{"docs":{"interoperability.html#examples-of-error-messages":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":3}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.4142135623730952}},"df":1}}}},"b":{"docs":{},"df":0,"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.7320508075688773},"flexibility.html#advantages-of-trait-objects":{"tf":1.0},"flexibility.html#disadvantages-of-trait-objects":{"tf":1.0}},"df":3}}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"predictability.html#operator-overloads-are-unsurprising-c-overload":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0}},"df":1}}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"predictability.html#operator-overloads-are-unsurprising-c-overload":{"tf":1.4142135623730952}},"df":1}}}}}}},"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"t":{"docs":{"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.4142135623730952}},"df":1,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":1}}}}}},"n":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0}},"df":1,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0}},"df":1}}}}},"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0},"naming.html#naming":{"tf":1.0},"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.0}},"df":5}}},"o":{"docs":{},"df":0,"n":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"debuggability.html#debug--representation-is-never-empty-c-debug-nonempty":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.0},"debuggability.html#debug--representation-is-never-empty-c-debug-nonempty":{"tf":1.0}},"df":2}}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"necessities.html#necessities":{"tf":1.0}},"df":1}}}},"w":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.4142135623730952},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.4142135623730952}},"df":2}}}}}},"u":{"docs":{},"df":0,"s":{"docs":{"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0},"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"tf":1.0},"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0},"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.0},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0}},"df":5},"n":{"docs":{},"df":0,"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0}},"df":1}}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"p":{"docs":{"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"predictability.html#operator-overloads-are-unsurprising-c-overload":{"tf":1.0}},"df":1}}}}}}}}},"w":{"docs":{"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.0}},"df":2}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0},"flexibility.html#functions-expose-intermediate-results-to-avoid-duplicate-work-c-intermediate":{"tf":1.0}},"df":2},"d":{"docs":{"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0},"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.4142135623730952}},"df":2}}}},"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"tf":1.4142135623730952}},"df":1}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.4142135623730952}},"df":1}}}},"t":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.4142135623730952}},"df":1}}}}}},"e":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"v":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.4142135623730952},"type-safety.html#consuming-builders":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":3}}}}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.4142135623730952}},"df":1}}},"o":{"docs":{},"df":0,"l":{"docs":{"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0}},"df":1}}}},"4":{"docs":{},"df":0,"3":{"docs":{},"df":0,"0":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":1}}},"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":1,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"l":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":1}}}}}}}}}}}},"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"k":{"docs":{"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0}},"df":1}}}}}}}},"e":{"docs":{},"df":0,"x":{"docs":{"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"c":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0}},"df":1}}},"e":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0}},"df":1}}}},"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"flexibility.html#functions-expose-intermediate-results-to-avoid-duplicate-work-c-intermediate":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":2}}}}},"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"flexibility.html#disadvantages-of-generics":{"tf":1.0},"flexibility.html#disadvantages-of-trait-objects":{"tf":1.0}},"df":2}}}}}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0}},"df":1}}}}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.0},"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"tf":1.0}},"df":2}}},"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0}},"df":1}}}}}}}},"c":{"docs":{"documentation.html#crate-level-docs-are-thorough-and-include-examples-c-crate-doc":{"tf":1.4142135623730952},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":2,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"documentation.html#documentation":{"tf":1.0},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0}},"df":2}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"tf":1.4142135623730952}},"df":1,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"v":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0}},"df":2}}}},"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{"debuggability.html#all-public-types-implement--debug--c-debug":{"tf":1.4142135623730952},"debuggability.html#debug--representation-is-never-empty-c-debug-nonempty":{"tf":1.4142135623730952}},"df":2,"g":{"docs":{"debuggability.html#debuggability":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.0},"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"tf":1.0}},"df":2}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":1}}}},"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"dependability.html#dependability":{"tf":1.0}},"df":3}}}}},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.0}},"df":3}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.4142135623730952}},"df":1}},"u":{"docs":{"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.4142135623730952}},"df":2}}},"i":{"docs":{"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.0}},"df":1,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.0}},"df":1}}}}}},"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.4142135623730952}},"df":1}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"interoperability.html#collections-implement--fromiterator--and--extend--c-collect":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"e":{"docs":{"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"flexibility.html#flexibility":{"tf":1.0},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0}},"df":2}}}}}},"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"future-proofing.html#future-proofing":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"flexibility.html#functions-expose-intermediate-results-to-avoid-duplicate-work-c-intermediate":{"tf":1.0},"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0},"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.0},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0}},"df":7}}}}}}},"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.4142135623730952}},"df":1,"u":{"docs":{},"df":0,"r":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}}}}},"m":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":3}}}},"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0}},"df":1}}}}}},"c":{"docs":{"flexibility.html#functions-expose-intermediate-results-to-avoid-duplicate-work-c-intermediate":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.0},"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.0},"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0},"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0},"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.0},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"interoperability.html#collections-implement--fromiterator--and--extend--c-collect":{"tf":1.0},"documentation.html#crate-level-docs-are-thorough-and-include-examples-c-crate-doc":{"tf":1.0},"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"tf":1.0},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"debuggability.html#debug--representation-is-never-empty-c-debug-nonempty":{"tf":1.0},"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.0},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0},"predictability.html#operator-overloads-are-unsurprising-c-overload":{"tf":1.0},"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0},"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0},"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"tf":1.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0},"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"tf":1.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.0},"debuggability.html#all-public-types-implement--debug--c-debug":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":55,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":1}}}}}}}},"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.4142135623730952}},"df":2}}},"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0}},"df":1}}}}},"p":{"docs":{},"df":0,"i":{"docs":{"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"interoperability.html#collections-implement--fromiterator--and--extend--c-collect":{"tf":1.4142135623730952}},"df":2}}}}},"n":{"docs":{},"df":0,"v":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0}},"df":3,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0}},"df":3}},"n":{"docs":{},"df":0,"t":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":2}},"y":{"docs":{"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0}},"df":1,"o":{"docs":{},"df":0,"r":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":1}}}}}}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"t":{"docs":{"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"m":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.0}},"df":2}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.0}},"df":1}}},"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0}},"df":1}}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0}},"df":1}}}},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0}},"df":1}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.4142135623730952}},"df":1}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.4142135623730952}},"df":1}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"documentation.html#crate-level-docs-are-thorough-and-include-examples-c-crate-doc":{"tf":1.4142135623730952},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":4}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0}},"df":1}},"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{"macros.html#macros":{"tf":1.0},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.4142135623730952},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0},"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.4142135623730952}},"df":5}}},"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"interoperability.html#examples-of-error-messages":{"tf":1.0}},"df":1}}}},"a":{"docs":{},"df":0,"n":{"docs":{"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.0},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.4142135623730952}},"df":5}}},"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.4142135623730952}},"df":1}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.0}},"df":1}}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"documentation.html#crate-level-docs-are-thorough-and-include-examples-c-crate-doc":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"naming.html#examples-from-the-standard-library":{"tf":1.0},"interoperability.html#examples-from-the-standard-library":{"tf":1.0},"predictability.html#examples-from-the-standard-library":{"tf":1.0},"future-proofing.html#examples-from-the-standard-library":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":5}}}}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"k":{"docs":{"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0},"external-links.html#external-links":{"tf":1.0}},"df":2}},"v":{"docs":{},"df":0,"e":{"docs":{"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0}},"df":1}}}},"r":{"docs":{"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0}},"df":1,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0}},"df":3,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0}},"df":2}}}}}},"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"debuggability.html#debug--representation-is-never-empty-c-debug-nonempty":{"tf":1.0}},"df":1}}}}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0}},"df":1},"a":{"docs":{},"df":0,"s":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#functions-expose-intermediate-results-to-avoid-duplicate-work-c-intermediate":{"tf":1.0}},"df":1}}}},"a":{"docs":{},"df":0,"d":{"docs":{"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"/":{"docs":{},"df":0,"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0}},"df":1}}}}}}}}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0}},"df":1}}}}},"w":{"docs":{"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0}},"df":1},"f":{"docs":{},"df":0,"c":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0}},"df":2}}},"o":{"docs":{},"df":0,"_":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"i":{"docs":{"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0}},"df":1},"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.4142135623730952},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"tf":1.4142135623730952},"flexibility.html#disadvantages-of-trait-objects":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.4142135623730952},"flexibility.html#advantages-of-trait-objects":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0}},"df":7}}}},"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"documentation.html#crate-level-docs-are-thorough-and-include-examples-c-crate-doc":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0}},"df":1}}}}}},"y":{"docs":{"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.0},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0}},"df":2,"p":{"docs":{},"df":0,"e":{"docs":{"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0},"debuggability.html#all-public-types-implement--debug--c-debug":{"tf":1.0},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0},"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"type-safety.html#type-safety":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.4142135623730952}},"df":11}}}},"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.0},"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"tf":1.0}},"df":2}}}}},"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0}},"df":1}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":1}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"predictability.html#predictability":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0}},"df":2}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0}},"df":1}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0},"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0}},"df":2}}},"o":{"docs":{},"df":0,"f":{"docs":{"future-proofing.html#future-proofing":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"e":{"docs":{"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.4142135623730952}},"df":1}}}}},"t":{"docs":{},"df":0,"r":{"docs":{"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.0}},"df":1}},"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.0},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0}},"df":2}}}}}},"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"debuggability.html#all-public-types-implement--debug--c-debug":{"tf":1.0},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0}},"df":2}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.4142135623730952}},"df":1}}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.0}},"df":1,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0}},"df":1}}}}}}}}},"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"debuggability.html#all-public-types-implement--debug--c-debug":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"interoperability.html#collections-implement--fromiterator--and--extend--c-collect":{"tf":1.0},"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"tf":1.0}},"df":8}}}}}}}},"n":{"docs":{},"df":0,"v":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"v":{"docs":{"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"t":{"docs":{"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"flexibility.html#functions-expose-intermediate-results-to-avoid-duplicate-work-c-intermediate":{"tf":1.4142135623730952}},"df":1}}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"interoperability.html#interoperability":{"tf":1.0}},"df":1}}}}}}},"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"d":{"docs":{"documentation.html#crate-level-docs-are-thorough-and-include-examples-c-crate-doc":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0}},"df":3}}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":2}}},"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.0},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.4142135623730952},"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.0},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0}},"df":4},"r":{"docs":{"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.7320508075688773},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.4142135623730952}},"df":2,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0}},"df":1}}}}}}}},"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.4142135623730952}},"df":1}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.4142135623730952},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0},"flexibility.html#disadvantages-of-generics":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0}},"df":4}}}},"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2}}}}}}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0}},"df":1}}}}}}}},"a":{"docs":{},"df":0,"d":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"flexibility.html#advantages-of-trait-objects":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0}},"df":2}}}}}},"d":{"docs":{"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"y":{"docs":{},"df":0,"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.4142135623730952}},"df":1}}}}}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.0}},"df":2}}}}}}},"p":{"docs":{},"df":0,"i":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0}},"df":2}},"s":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"tf":1.0}},"df":1}}},"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.0}},"df":1}}}}},"_":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.0}},"df":2}}}}}}},"v":{"docs":{},"df":0,"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"flexibility.html#functions-expose-intermediate-results-to-avoid-duplicate-work-c-intermediate":{"tf":1.0}},"df":1}}}},"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0}},"df":1}}}}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0}},"df":1}}}}}}},"u":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.0}},"df":1}}}}}},"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0}},"df":1,"t":{"docs":{},"df":0,"i":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"type-safety.html#type-safety":{"tf":1.0}},"df":2}}}}},"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0}},"df":1}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.4142135623730952},"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"tf":1.0}},"df":2}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"dependability.html#static-enforcement":{"tf":1.0}},"df":3}}},"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"predictability.html#examples-from-the-standard-library":{"tf":1.0},"future-proofing.html#examples-from-the-standard-library":{"tf":1.0},"interoperability.html#examples-from-the-standard-library":{"tf":1.0},"naming.html#examples-from-the-standard-library":{"tf":1.0},"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"tf":1.0}},"df":6}}}}},"b":{"docs":{},"df":0,"l":{"docs":{"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.7320508075688773}},"df":1}}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.4142135623730952}},"df":2,"u":{"docs":{},"df":0,"r":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":2}}}}}}},"e":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":2},"a":{"docs":{},"df":0,"l":{"docs":{"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.4142135623730952}},"df":1}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":1}}},"d":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"'":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"d":{"docs":{"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.4142135623730952}},"df":1}}},"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"x":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":1}}},"c":{"docs":{"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.4142135623730952}},"df":1}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.4142135623730952}},"df":1,"i":{"docs":{"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.0}},"df":1}}}}}}}}},"breadcrumbs":{"root":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.7320508075688773}},"df":2}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":1},"c":{"docs":{},"df":0,"e":{"docs":{"dependability.html#dynamic-enforcement":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.4142135623730952},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.4142135623730952},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":8,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":1}}}},"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2}}}}}}}},"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"flexibility.html#functions-expose-intermediate-results-to-avoid-duplicate-work-c-intermediate":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":2}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0}},"df":4,"e":{"docs":{},"df":0,"r":{"docs":{"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0},"predictability.html#examples-from-the-standard-library":{"tf":1.0},"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"tf":1.7320508075688773},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.4142135623730952},"flexibility.html#disadvantages-of-trait-objects":{"tf":1.0},"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.7320508075688773}},"df":7}}}}},"o":{"docs":{},"df":0,"r":{"docs":{"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"interoperability.html#examples-from-the-standard-library":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.4142135623730952},"flexibility.html#advantages-of-generics":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0}},"df":10}}}},"i":{"docs":{},"df":0,"t":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0}},"df":2}}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"n":{"docs":{"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0}},"df":1,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.0}},"df":1}}}}}},"_":{"docs":{},"df":0,"2":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"c":{"docs":{"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.4142135623730952}},"df":1}},"2":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"predictability.html#predictability":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2}}}},"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.4142135623730952},"flexibility.html#disadvantages-of-generics":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0}},"df":4}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1},"t":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"future-proofing.html#exceptions":{"tf":1.0}},"df":4}}}},"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}}},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"r":{"docs":{"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.4142135623730952},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.4142135623730952},"type-safety.html#non-consuming-builders-preferred":{"tf":1.4142135623730952},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"dependability.html#static-enforcement":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.0},"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":14}},"i":{"docs":{},"df":0,"x":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":2.0},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":5}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":1,"s":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":3}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"=":{"docs":{},"df":0,"%":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0}},"df":1}}}}}}}},"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"t":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":1}}}}},"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"e":{"docs":{"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0}},"df":3}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"predictability.html#operator-overloads-are-unsurprising-c-overload":{"tf":1.0},"dependability.html#static-enforcement":{"tf":1.0}},"df":2}}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.4142135623730952}},"df":1}}},"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.4142135623730952}},"df":1}}}},"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.0},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.4142135623730952},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.4142135623730952},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.4142135623730952},"flexibility.html#advantages-of-generics":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":9,"t":{"docs":{"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":1}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0},"flexibility.html#disadvantages-of-trait-objects":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.4142135623730952},"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.4142135623730952},"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.4142135623730952},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"tf":1.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.4142135623730952},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.7320508075688773},"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.0},"interoperability.html#examples-of-error-messages":{"tf":1.4142135623730952},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"predictability.html#operator-overloads-are-unsurprising-c-overload":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.4142135623730952},"flexibility.html#advantages-of-generics":{"tf":1.0}},"df":20}}},"o":{"docs":{},"df":0,"f":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"future-proofing.html#future-proofing":{"tf":1.4142135623730952}},"df":2}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.4142135623730952},"dependability.html#dynamic-enforcement":{"tf":1.4142135623730952},"type-safety.html#non-consuming-builders-preferred":{"tf":2.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":5}}}},"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":2.23606797749979},"about.html#rust-api-guidelines":{"tf":1.0}},"df":3}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2}}}}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":4}}}}},"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":2.0},"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.7320508075688773},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.7320508075688773},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0}},"df":6,"e":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"s":{"docs":{"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.7320508075688773}},"df":1}}}}},"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.0}},"df":1}}}}}}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.0}},"df":2}}}},"t":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":1,"<":{"docs":{},"df":0,"t":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"n":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1,"!":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.7320508075688773}},"df":1}}}}}}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.4142135623730952}},"df":1}},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":3}}}}}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0}},"df":4}}}},"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"dependability.html#dynamic-enforcement":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":4.0}},"df":3}}},"s":{"docs":{},"df":0,"s":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.4142135623730952},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.4142135623730952}},"df":6,"i":{"docs":{},"df":0,"v":{"docs":{"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0}},"df":1}}}},"y":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":3},"t":{"docs":{},"df":0,"h":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.4142135623730952},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":2.23606797749979},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":4,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"dependability.html#static-enforcement":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.4142135623730952},"external-links.html#external-links":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":9}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.7320508075688773},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"flexibility.html#disadvantages-of-generics":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.4142135623730952},"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.4142135623730952}},"df":8}}}},"t":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":3,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":2.6457513110645909},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":3}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":2.23606797749979}},"df":3}}}}},"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0},"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0}},"df":7}}}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0}},"df":1}}},"s":{"docs":{"interoperability.html#examples-from-the-standard-library":{"tf":1.0},"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0}},"df":1}}}}}}}}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0}},"df":1}}},"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0}},"df":1}}}}}}}}},"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0},"interoperability.html#examples-from-the-standard-library":{"tf":1.0}},"df":2}}}}}}}}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0}},"df":1}}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0}},"df":1}}}}}}}}}}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":3}}}},"s":{"docs":{},"df":0,"h":{"docs":{"dependability.html#static-enforcement":{"tf":1.0},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0}},"df":2}},"t":{"docs":{"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.0},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0}},"df":2},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.4142135623730952}},"df":2}}}}}},"b":{"docs":{"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.7320508075688773},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.4142135623730952},"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.4142135623730952},"type-safety.html#non-consuming-builders-preferred":{"tf":2.449489742783178},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.7320508075688773},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.7320508075688773},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.4142135623730952},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.4142135623730952},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.4142135623730952},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":2.0}},"df":13,"(":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0}},"df":1}}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.7320508075688773}},"df":1}},"c":{"docs":{"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"debuggability.html#all-public-types-implement--debug--c-debug":{"tf":1.4142135623730952},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.4142135623730952},"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.0},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":2.6457513110645909}},"df":9,"l":{"docs":{},"df":0,"i":{"docs":{"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0}},"df":1}},"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":2.0}},"df":1}}}}}}}}},"l":{"docs":{},"df":0,"l":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"r":{"docs":{"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0}},"df":1,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0},"flexibility.html#disadvantages-of-generics":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.0},"flexibility.html#disadvantages-of-trait-objects":{"tf":1.0}},"df":6}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":2.8284271247461905}},"df":2}}}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0}},"df":1,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.0}},"df":2}}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.0}},"df":1}}}}}}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"flexibility.html#disadvantages-of-trait-objects":{"tf":1.0}},"df":1}}}}}}},"6":{"docs":{},"df":0,"4":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1}},"f":{"docs":{"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.4142135623730952},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.7320508075688773}},"df":3,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"e":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.4142135623730952},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":2.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.4142135623730952}},"df":4}},"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.7320508075688773}},"df":3}}}}}},"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0}},"df":1}}}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0}},"df":1}}}}},"m":{"docs":{},"df":0,"(":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0}},"df":2}}}},"<":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}},"u":{"docs":{},"df":0,"1":{"docs":{},"df":0,"6":{"docs":{"interoperability.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}},"3":{"docs":{},"df":0,"2":{"docs":{"interoperability.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"v":{"docs":{},"df":0,"6":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"r":{"docs":{"interoperability.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}}}}}},"t":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":1},"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"interoperability.html#collections-implement--fromiterator--and--extend--c-collect":{"tf":2.0}},"df":2,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"<":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}}}}}}}},"_":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":2.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0}},"df":2,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"f":{"docs":{},"df":0,"8":{"docs":{"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1}}},"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":2.0}},"df":1}}},"r":{"docs":{},"df":0,"m":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":3,"a":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.7320508075688773},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2}}}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.7320508075688773},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.7320508075688773},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.4142135623730952},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.7320508075688773},"type-safety.html#consuming-builders":{"tf":1.0},"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.4142135623730952},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.4142135623730952},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0},"interoperability.html#collections-implement--fromiterator--and--extend--c-collect":{"tf":1.0},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0},"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"tf":1.4142135623730952},"about.html#rust-api-guidelines":{"tf":1.0},"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.4142135623730952}},"df":21}}}},"o":{"docs":{"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.4142135623730952},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":3,"<":{"docs":{},"df":0,"i":{"docs":{"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.0}},"df":1}},"(":{"docs":{},"df":0,"b":{"docs":{"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":2.0}},"df":1},"c":{"docs":{"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.7320508075688773}},"df":1},"a":{"docs":{"dependability.html#static-enforcement":{"tf":1.4142135623730952}},"df":1},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0}},"df":1}}}}}}}}},"e":{"docs":{},"df":0,"w":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.0}},"df":1}}},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.4142135623730952},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":4.0}},"df":5,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.4142135623730952},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":2}}},"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"future-proofing.html#future-proofing":{"tf":1.4142135623730952},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.4142135623730952}},"df":4}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.7320508075688773},"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.4142135623730952},"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":2.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"flexibility.html#disadvantages-of-generics":{"tf":1.4142135623730952},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0},"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":2.23606797749979},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":2.8284271247461905},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":2.23606797749979},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":2.23606797749979},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.7320508075688773},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.7320508075688773},"flexibility.html#functions-expose-intermediate-results-to-avoid-duplicate-work-c-intermediate":{"tf":1.7320508075688773},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.7320508075688773},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.7320508075688773},"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":2.449489742783178},"flexibility.html#advantages-of-generics":{"tf":2.449489742783178},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.4142135623730952}},"df":27,"'":{"docs":{"flexibility.html#disadvantages-of-generics":{"tf":1.0}},"df":1}}}}}},"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}}}}}},"6":{"docs":{},"df":0,"4":{"docs":{"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.7320508075688773},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.7320508075688773}},"df":2,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}}}}}}}}}}},"m":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2}},".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":2.0},"dependability.html#static-enforcement":{"tf":1.0}},"df":2,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":1}}}}}}}}},"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":1}}}}}}}},"m":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"d":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0}},"df":2},"a":{"docs":{},"df":0,"l":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.0}},"df":2}},"e":{"docs":{"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":2.449489742783178},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":4}}},"l":{"docs":{},"df":0,"e":{"docs":{"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"interoperability.html#examples-of-error-messages":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"predictability.html#examples-from-the-standard-library":{"tf":1.4142135623730952}},"df":5,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"predictability.html#examples-from-the-standard-library":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":2}}}}}},"s":{"docs":{},"df":0,"y":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":1}}}}}}}},"t":{"docs":{"interoperability.html#examples-from-the-standard-library":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0}},"df":2}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"s":{"docs":{"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.4142135623730952},"interoperability.html#examples-of-error-messages":{"tf":1.0}},"df":2},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0}},"df":1}}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":1}}}}}},"q":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1},"i":{"docs":{},"df":0,"l":{"docs":{"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.4142135623730952},"interoperability.html#examples-from-the-standard-library":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":2.449489742783178},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.4142135623730952},"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":9,"u":{"docs":{},"df":0,"r":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.4142135623730952},"dependability.html#static-enforcement":{"tf":1.0},"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":5}}}},"t":{"docs":{"flexibility.html#disadvantages-of-trait-objects":{"tf":1.0}},"df":1}},"n":{"docs":{"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":2.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.4142135623730952},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.7320508075688773},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.4142135623730952},"type-safety.html#consuming-builders":{"tf":1.7320508075688773},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.7320508075688773},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0},"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.4142135623730952},"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":2.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":2.23606797749979},"dependability.html#static-enforcement":{"tf":1.4142135623730952},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.7320508075688773},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":2.449489742783178},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.4142135623730952},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.4142135623730952},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":2.0},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.4142135623730952},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.4142135623730952},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.4142135623730952},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":2.0},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":2.0}},"df":26,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.4142135623730952},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":2.6457513110645909},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":4,"_":{"docs":{},"df":0,"a":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1},"c":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1},"b":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1}}}}}}}}}},"v":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"2":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"g":{"docs":{},"df":0,"z":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"interoperability.html#examples":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"g":{"docs":{},"df":0,"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"interoperability.html#examples":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.4142135623730952},"flexibility.html#flexibility":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952}},"df":3}}}}},"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}}},"w":{"docs":{"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.4142135623730952},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.4142135623730952},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":2.23606797749979},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":4,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}}},"y":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.4142135623730952}},"df":10},"n":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.4142135623730952},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0}},"df":6}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.4142135623730952}},"df":2,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"dependability.html#static-enforcement":{"tf":1.4142135623730952},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":2,"(":{"docs":{},"df":0,"$":{"docs":{},"df":0,"t":{"docs":{"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0}},"df":1}}}}}}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":3}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":2.23606797749979},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":6,"r":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.4142135623730952}},"df":1}}}}},"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"flexibility.html#disadvantages-of-generics":{"tf":1.0}},"df":1}}},"b":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.4142135623730952}},"df":1}}},"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.4142135623730952}},"df":1}}}},"l":{"docs":{},"df":0,"l":{"docs":{"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.7320508075688773},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.4142135623730952},"about.html#rust-api-guidelines":{"tf":1.0},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.4142135623730952},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.4142135623730952},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.4142135623730952},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0}},"df":11}}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.0}},"df":1},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.4142135623730952}},"df":1,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0}},"df":1}}}}}}}}}}}}},"s":{"docs":{},"df":0,"h":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":2}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":1}}}}}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0}},"df":6}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.4142135623730952},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0}},"df":10}}}}}},"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{"naming.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.0},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0},"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0}},"df":5}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":1}},"k":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"flexibility.html#functions-expose-intermediate-results-to-avoid-duplicate-work-c-intermediate":{"tf":1.4142135623730952},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":2.0},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":2.0},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":8,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0}},"df":1}}}}}}},"d":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.7320508075688773},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":2.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.7320508075688773},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":2.449489742783178}},"df":5}},"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":1}}}}},"c":{"docs":{"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.4142135623730952},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":2.0},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.4142135623730952},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.4142135623730952},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.4142135623730952},"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.7320508075688773},"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.4142135623730952},"interoperability.html#collections-implement--fromiterator--and--extend--c-collect":{"tf":1.4142135623730952},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.7320508075688773},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.4142135623730952},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.4142135623730952},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.4142135623730952},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.4142135623730952},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.4142135623730952},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.4142135623730952},"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"tf":1.4142135623730952},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":2.0},"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.4142135623730952},"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"tf":1.4142135623730952},"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.4142135623730952},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.4142135623730952},"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.4142135623730952},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.4142135623730952},"documentation.html#crate-level-docs-are-thorough-and-include-examples-c-crate-doc":{"tf":1.4142135623730952},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.4142135623730952},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.4142135623730952},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.4142135623730952},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.7320508075688773},"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.4142135623730952},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.4142135623730952},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.4142135623730952},"dependability.html#static-enforcement":{"tf":1.0},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.4142135623730952},"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.7320508075688773},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.4142135623730952},"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.4142135623730952},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.4142135623730952},"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.4142135623730952},"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"tf":1.4142135623730952},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.4142135623730952},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.4142135623730952},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.4142135623730952},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.4142135623730952},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.7320508075688773},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.4142135623730952},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.4142135623730952},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":7.416198487095663},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.4142135623730952},"debuggability.html#debug--representation-is-never-empty-c-debug-nonempty":{"tf":1.4142135623730952},"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.4142135623730952},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.4142135623730952},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.7320508075688773},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.4142135623730952},"flexibility.html#functions-expose-intermediate-results-to-avoid-duplicate-work-c-intermediate":{"tf":1.4142135623730952},"debuggability.html#all-public-types-implement--debug--c-debug":{"tf":1.4142135623730952},"predictability.html#operator-overloads-are-unsurprising-c-overload":{"tf":1.4142135623730952}},"df":57,"f":{"docs":{},"df":0,"g":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.7320508075688773},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.0}},"df":2,"(":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":2.0}},"df":1}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.0}},"df":1}}}},"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.0}},"df":1}}}}}}},"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":1}}}}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"w":{"docs":{},"df":0,"d":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.4142135623730952}},"df":1}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"interoperability.html#collections-implement--fromiterator--and--extend--c-collect":{"tf":1.0},"predictability.html#examples-from-the-standard-library":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.0},"dependability.html#static-enforcement":{"tf":1.0},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":7,"i":{"docs":{},"df":0,"v":{"docs":{"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0}},"df":1}}}}},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.0},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.7320508075688773},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.4142135623730952},"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":2.0},"documentation.html#crate-level-docs-are-thorough-and-include-examples-c-crate-doc":{"tf":2.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":2.23606797749979},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":2.6457513110645909},"about.html#rust-api-guidelines":{"tf":2.449489742783178},"checklist.html#rust-api-guidelines-checklist":{"tf":3.872983346207417},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.4142135623730952},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.7320508075688773},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":2.0},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":3.1622776601683797},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":2.8284271247461905},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.4142135623730952},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.7320508075688773},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":2.23606797749979},"external-links.html#external-links":{"tf":1.0}},"df":20,"'":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":2},"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0}},"df":2}}}}}}}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.4142135623730952}},"df":1}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.7320508075688773},"flexibility.html#disadvantages-of-generics":{"tf":1.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":2.0},"interoperability.html#collections-implement--fromiterator--and--extend--c-collect":{"tf":2.6457513110645909},"flexibility.html#advantages-of-generics":{"tf":1.0}},"df":5}}}}},"d":{"docs":{},"df":0,"e":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.0},"flexibility.html#advantages-of-trait-objects":{"tf":1.7320508075688773},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"flexibility.html#disadvantages-of-generics":{"tf":1.4142135623730952},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.0},"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"predictability.html#examples-from-the-standard-library":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.4142135623730952},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.7320508075688773}},"df":15}},"i":{"docs":{},"df":0,"n":{"docs":{"flexibility.html#disadvantages-of-generics":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}}}}}}}},"i":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":2.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":2.0},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0}},"df":6}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":1}}},"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0},"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.4142135623730952},"flexibility.html#advantages-of-generics":{"tf":1.0},"dependability.html#static-enforcement":{"tf":1.0},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"tf":1.0}},"df":11}},"o":{"docs":{},"df":0,"s":{"docs":{"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.4142135623730952},"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0}},"df":5}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.4142135623730952},"type-safety.html#consuming-builders":{"tf":2.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.4142135623730952}},"df":4},"t":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"c":{"docs":{"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}}}}}},"u":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#functions-expose-intermediate-results-to-avoid-duplicate-work-c-intermediate":{"tf":1.0}},"df":1}},"a":{"docs":{},"df":0,"t":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.7320508075688773},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":2,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":1}}}}}}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"n":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.4142135623730952},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.4142135623730952},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":2.6457513110645909},"checklist.html#rust-api-guidelines-checklist":{"tf":1.7320508075688773},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":8,"l":{"docs":{},"df":0,"i":{"docs":{"predictability.html#examples-from-the-standard-library":{"tf":1.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0}},"df":2}}}},"u":{"docs":{},"df":0,"n":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":1}},"a":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":1,"n":{"docs":{},"df":0,"d":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":3.1622776601683797},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0}},"df":3,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"/":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"\"":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{},"df":0,"\"":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"t":{"docs":{"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.4142135623730952}},"df":2}}},"e":{"docs":{"dependability.html#static-enforcement":{"tf":1.0},"predictability.html#operator-overloads-are-unsurprising-c-overload":{"tf":1.0}},"df":2},"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"dependability.html#static-enforcement":{"tf":1.4142135623730952},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.4142135623730952},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0}},"df":4}},"w":{"docs":{},"df":0,"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{"predictability.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"v":{"docs":{"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"tf":1.4142135623730952},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.7320508075688773},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.4142135623730952},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.4142135623730952}},"df":6,"e":{"docs":{},"df":0,"y":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":2.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0}},"df":4},"n":{"docs":{},"df":0,"i":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.0},"interoperability.html#collections-implement--fromiterator--and--extend--c-collect":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0}},"df":5},"t":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.4142135623730952},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":2.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.7320508075688773},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"external-links.html#external-links":{"tf":2.23606797749979},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.4142135623730952}},"df":11}},"r":{"docs":{},"df":0,"s":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.0},"interoperability.html#examples-from-the-standard-library":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.7320508075688773},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":2.449489742783178},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":2.23606797749979},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.7320508075688773},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.4142135623730952},"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"tf":2.0},"predictability.html#examples-from-the-standard-library":{"tf":1.0},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0}},"df":11},"t":{"docs":{"dependability.html#static-enforcement":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"interoperability.html#examples-from-the-standard-library":{"tf":1.0}},"df":4}}}},"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0},"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.0}},"df":2}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.4142135623730952}},"df":3}}},"i":{"docs":{},"df":0,"d":{"docs":{"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":1},"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"type-safety.html#consuming-builders":{"tf":2.449489742783178},"type-safety.html#non-consuming-builders-preferred":{"tf":2.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.7320508075688773}},"df":3}}}}},"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"t":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.4142135623730952},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":2}}},"s":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.7320508075688773},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":2.449489742783178},"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":2.0},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":2.0}},"df":4,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.4142135623730952},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":2.0},"type-safety.html#consuming-builders":{"tf":1.4142135623730952},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":2.23606797749979},"type-safety.html#non-consuming-builders-preferred":{"tf":1.4142135623730952},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":7,"o":{"docs":{},"df":0,"r":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.4142135623730952},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.7320508075688773},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":4.0},"predictability.html#examples-from-the-standard-library":{"tf":1.4142135623730952},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0}},"df":7}}}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}},"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.7320508075688773},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":2,"l":{"docs":{},"df":0,"i":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.0}},"df":1}},"q":{"docs":{},"df":0,"u":{"docs":{"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"m":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":2.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.7320508075688773},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0}},"df":6}},"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"d":{"docs":{"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"flexibility.html#functions-expose-intermediate-results-to-avoid-duplicate-work-c-intermediate":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.0},"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.4142135623730952}},"df":13,"e":{"docs":{},"df":0,"r":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.4142135623730952},"about.html#rust-api-guidelines":{"tf":1.0}},"df":3}}},"s":{"docs":{},"df":0,"t":{"docs":{"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":2.23606797749979},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":4}}}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{"debuggability.html#debug--representation-is-never-empty-c-debug-nonempty":{"tf":1.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.4142135623730952}},"df":2}}},"r":{"docs":{},"df":0,"n":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#disadvantages-of-generics":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0}},"df":2}}},"i":{"docs":{},"df":0,"s":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":6}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"flexibility.html#disadvantages-of-generics":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0},"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.4142135623730952},"interoperability.html#collections-implement--fromiterator--and--extend--c-collect":{"tf":1.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"predictability.html#examples-from-the-standard-library":{"tf":1.0},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0}},"df":11}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0}},"df":1,"u":{"docs":{},"df":0,"m":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0}},"df":2}},"x":{"docs":{},"df":0,"t":{"docs":{"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.4142135623730952},"flexibility.html#advantages-of-generics":{"tf":1.0}},"df":2}}},"o":{"docs":{},"df":0,"l":{"docs":{"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.4142135623730952}},"df":3,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.4142135623730952}},"df":1}}}}}},"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.4142135623730952},"about.html#rust-api-guidelines":{"tf":1.0}},"df":2,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"d":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0}},"df":1}}}}}}}}}}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0}},"df":1}}}}}}}}}}},"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.4142135623730952},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":4,"l":{"docs":{},"df":0,"i":{"docs":{"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":2}}}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":2}}}}}}},"e":{"docs":{"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"e":{"docs":{"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.7320508075688773},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.4142135623730952}},"df":5}}},"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#functions-expose-intermediate-results-to-avoid-duplicate-work-c-intermediate":{"tf":1.0},"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":2.23606797749979},"type-safety.html#consuming-builders":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.4142135623730952}},"df":5,"'":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.0}},"df":1},"r":{"docs":{"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.4142135623730952},"flexibility.html#advantages-of-generics":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0}},"df":6,"l":{"docs":{},"df":0,"i":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.4142135623730952},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.4142135623730952}},"df":4}}}}},"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0}},"df":1}}}}}},"u":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0}},"df":3},"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#disadvantages-of-trait-objects":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.4142135623730952},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0},"future-proofing.html#exceptions":{"tf":1.0},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.4142135623730952}},"df":6,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.7320508075688773},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":4}}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2}}},"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"tf":1.0}},"df":1}}}}}}},"m":{"docs":{},"df":0,"d":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":1,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":1}}}}},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.4142135623730952}},"df":1}}}}}},"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0},"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0}},"df":5}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"s":{"docs":{"dependability.html#static-enforcement":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0}},"df":4}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0},"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":2.449489742783178},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":5,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952}},"df":2}}}}}},"a":{"docs":{},"df":0,"p":{"docs":{"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":2}}},"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"d":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.4142135623730952},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0}},"df":4}}},"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.4142135623730952},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0}},"df":4}},"n":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":2}}},"g":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":2.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":2.23606797749979},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"documentation.html#examples":{"tf":1.0},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":2.0}},"df":7}},"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0}},"df":1}}}},"r":{"docs":{"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0}},"df":1}}}}}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0}},"df":1}}}}},"l":{"docs":{},"df":0,"l":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":1,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":1}}}}}}}},"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0},"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.4142135623730952},"flexibility.html#advantages-of-generics":{"tf":1.7320508075688773},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.4142135623730952},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.4142135623730952},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.7320508075688773},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.4142135623730952},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0}},"df":10,"e":{"docs":{},"df":0,"r":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":2.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.7320508075688773},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952}},"df":6}}}},"s":{"docs":{},"df":0,"e":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.4142135623730952},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.4142135623730952},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":2.23606797749979},"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.7320508075688773},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.7320508075688773},"type-safety.html#consuming-builders":{"tf":1.0},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.4142135623730952}},"df":12}},"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":2.0},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.4142135623730952}},"df":3,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.4142135623730952},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.7320508075688773},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0}},"df":6}}}}}}},"e":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0}},"df":2},"r":{"docs":{},"df":0,"i":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.4142135623730952},"flexibility.html#disadvantages-of-trait-objects":{"tf":1.0}},"df":2}}},"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0},"dependability.html#static-enforcement":{"tf":1.0}},"df":2}},"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0}},"df":2}}}}},"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"h":{"docs":{"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0}},"df":1}}}}}}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":2}}},"u":{"docs":{},"df":0,"s":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.0}},"df":2}}}},"u":{"docs":{"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":2.0}},"df":1,"n":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":1}}}}}}}}},"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"f":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.7320508075688773},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.7320508075688773}},"df":3}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"predictability.html#operator-overloads-are-unsurprising-c-overload":{"tf":1.4142135623730952}},"df":2}}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0}},"df":1}}}}},"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0}},"df":1}}}}},"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.7320508075688773},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":3}}}},"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0},"interoperability.html#examples-of-error-messages":{"tf":1.0}},"df":2}}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0},"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.4142135623730952},"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0}},"df":4,"l":{"docs":{},"df":0,"i":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":2.23606797749979},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0}},"df":2}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"flexibility.html#disadvantages-of-generics":{"tf":1.0}},"df":2}}},"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":1}}}}}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"interoperability.html#examples-of-error-messages":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":2}}},"t":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":1},"q":{"docs":{},"df":0,"u":{"docs":{"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0}},"df":1}}}}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"p":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.4142135623730952}},"df":3}}}},"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.4142135623730952}},"df":1}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":1}}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":4}}},"i":{"docs":{},"df":0,"k":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"flexibility.html#advantages-of-trait-objects":{"tf":1.0}},"df":2}}}},"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.4142135623730952}},"df":1}}},"p":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":4,"o":{"docs":{},"df":0,"n":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":2.449489742783178}},"df":1}}}}}},"s":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":1}}}}}},"d":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":1}}}}}}}}}}}},"a":{"docs":{},"df":0,"t":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.4142135623730952}},"df":1}}},"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0}},"df":1}}}}},"6":{"docs":{},"df":0,"4":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":1},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"f":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.4142135623730952},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"interoperability.html#examples-of-error-messages":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.4142135623730952},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0}},"df":5}},"8":{"docs":{"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.4142135623730952},"dependability.html#static-enforcement":{"tf":1.7320508075688773},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.4142135623730952},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.7320508075688773},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.4142135623730952}},"df":8},"s":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":2.0},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.4142135623730952},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":2.23606797749979},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.4142135623730952},"flexibility.html#advantages-of-generics":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.7320508075688773},"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.7320508075688773},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":3.7416573867739415},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.7320508075688773},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":2.0},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.7320508075688773},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":2.0},"checklist.html#rust-api-guidelines-checklist":{"tf":2.449489742783178},"flexibility.html#disadvantages-of-generics":{"tf":1.4142135623730952},"about.html#rust-api-guidelines":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.4142135623730952},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":2.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.4142135623730952},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.7320508075688773},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.7320508075688773},"interoperability.html#collections-implement--fromiterator--and--extend--c-collect":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":2.0},"dependability.html#static-enforcement":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.0},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.4142135623730952},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.4142135623730952},"flexibility.html#examples-from-the-standard-library":{"tf":1.4142135623730952},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.7320508075688773},"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"tf":1.4142135623730952},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"tf":1.4142135623730952},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":2.8284271247461905},"flexibility.html#disadvantages-of-trait-objects":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":2.0},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.4142135623730952},"predictability.html#examples-from-the-standard-library":{"tf":1.0},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":2.23606797749979}},"df":44,"e":{"docs":{},"df":0,"r":{"docs":{"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.7320508075688773},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":2.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.7320508075688773},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.4142135623730952},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.7320508075688773},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.4142135623730952},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0}},"df":11}},"a":{"docs":{},"df":0,"g":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1},"b":{"docs":{},"df":0,"l":{"docs":{"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0},"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.0}},"df":2}}},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"dependability.html#static-enforcement":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.4142135623730952},"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.4142135623730952},"flexibility.html#advantages-of-generics":{"tf":1.4142135623730952}},"df":4}}},"i":{"docs":{},"df":0,"z":{"docs":{"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.4142135623730952},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.4142135623730952},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.7320508075688773}},"df":3}}},"3":{"docs":{},"df":0,"2":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":2.6457513110645909},"interoperability.html#examples-from-the-standard-library":{"tf":1.0}},"df":3}},"1":{"docs":{},"df":0,"6":{"docs":{"interoperability.html#examples-from-the-standard-library":{"tf":1.7320508075688773}},"df":1}},"r":{"docs":{},"df":0,"l":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.4142135623730952},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":2.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0}},"df":5}}},"k":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":2.0}},"df":1,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":2.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0}},"df":1}}}}}}}}}}}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":3}},"y":{"docs":{"naming.html#examples-from-the-standard-library":{"tf":1.0},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":3,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":2.0},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":3}}}}},"p":{"docs":{},"df":0,"t":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":1}}}},"1":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":2,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"5":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0}},"df":1}}},"5":{"docs":{},"df":0,"7":{"docs":{},"df":0,"4":{"docs":{"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0},"external-links.html#external-links":{"tf":1.0}},"df":2}}},"6":{"docs":{},"df":0,"8":{"docs":{},"df":0,"7":{"docs":{"documentation.html#crate-level-docs-are-thorough-and-include-examples-c-crate-doc":{"tf":1.0},"external-links.html#external-links":{"tf":1.0}},"df":2}}},".":{"docs":{},"df":0,"0":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.4142135623730952},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0}},"df":2,".":{"docs":{},"df":0,"0":{"docs":{"documentation.html#examples":{"tf":1.0},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0}},"df":2}}}},"9":{"docs":{},"df":0,"9":{"docs":{"external-links.html#external-links":{"tf":1.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0}},"df":2}}},"0":{"docs":{},"df":0,"b":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.0}},"df":1,"0":{"docs":{},"df":0,"0":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":1}}}}}},"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.4142135623730952}},"df":1,"0":{"docs":{"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.0}},"df":1,"0":{"docs":{},"df":0,"0":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":1}}}},"0":{"docs":{},"df":0,"1":{"docs":{"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.0}},"df":1,"0":{"docs":{},"df":0,"0":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":1}}},"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":1}},"0":{"docs":{},"df":0,"1":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":1,"0":{"docs":{},"df":0,"0":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1}}},"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1}},"0":{"docs":{},"df":0,"1":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1}}}}}}},"1":{"docs":{},"df":0,"0":{"docs":{"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.4142135623730952}},"df":1,"0":{"docs":{"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.0}},"df":1,"0":{"docs":{},"df":0,"0":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":1}}}}}}},"x":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1}}}}}},"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1}}}},"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1}}}}}}},".":{"docs":{},"df":0,"9":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{"documentation.html#examples":{"tf":1.0}},"df":1},"8":{"docs":{"documentation.html#examples":{"tf":1.0}},"df":1}}},"3":{"docs":{},"df":0,".":{"docs":{},"df":0,"8":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":1},"0":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.4142135623730952}},"df":1}}},"1":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0}},"df":1}}}}},"t":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":2.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.4142135623730952},"flexibility.html#advantages-of-generics":{"tf":2.449489742783178},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":2.0},"predictability.html#examples-from-the-standard-library":{"tf":1.0},"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":2.23606797749979},"type-safety.html#consuming-builders":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":2.449489742783178},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.4142135623730952},"flexibility.html#disadvantages-of-generics":{"tf":1.0}},"df":15,"c":{"docs":{},"df":0,"p":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"`":{"docs":{},"df":0,"'":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}},"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"k":{"docs":{"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":2.6457513110645909}},"df":4,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"type-safety.html#consuming-builders":{"tf":1.7320508075688773}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"m":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"k":{"docs":{},"df":0,"\"":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"m":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"k":{"docs":{},"df":0,"_":{"docs":{},"df":0,"2":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"m":{"docs":{},"df":0,"y":{"docs":{},"df":0,"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0}},"df":1}}}}}}}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0}},"df":1}}}}}}}},"k":{"docs":{},"df":0,"e":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.4142135623730952},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.4142135623730952},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.7320508075688773},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.7320508075688773},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"predictability.html#examples-from-the-standard-library":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.4142135623730952},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.4142135623730952},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":15,"n":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1},"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"type-safety.html#consuming-builders":{"tf":1.4142135623730952}},"df":1}}}}}}}}},"g":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":2.6457513110645909}},"df":1}},"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"documentation.html#crate-level-docs-are-thorough-and-include-examples-c-crate-doc":{"tf":1.4142135623730952}},"df":2}}}}},"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.4142135623730952},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":4}}},"s":{"docs":{},"df":0,"e":{"docs":{"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":8}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"k":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":1},"g":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.7320508075688773},"type-safety.html#consuming-builders":{"tf":1.4142135623730952},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0},"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.7320508075688773},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.4142135623730952},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0}},"df":9}}},"u":{"docs":{"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0}},"df":2},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0}},"df":1}}}}},"m":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"v":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":2.0}},"df":1}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{"future-proofing.html#exceptions":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":2},"a":{"docs":{},"df":0,"d":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0},"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.4142135623730952}},"df":3,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":1}}}}}}}}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.4142135623730952},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.0},"dependability.html#static-enforcement":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0},"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.0}},"df":8,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":1}}}}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0}},"df":1},"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.0},"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"tf":1.0}},"df":2}}}}}},"l":{"docs":{},"df":0,"l":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"m":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":2,"i":{"docs":{},"df":0,"n":{"docs":{"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.4142135623730952},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.4142135623730952},"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":4}}}},"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.4142135623730952}},"df":1}}}}}}},"n":{"docs":{},"df":0,"d":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.7320508075688773},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.7320508075688773},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":4,"_":{"docs":{},"df":0,"y":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"!":{"docs":{},"df":0,"(":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0}},"df":1}}}}},"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0}},"df":1}}}}}}}},"o":{"docs":{},"df":0,"_":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":2.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":3,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0}},"df":1}}}}}}}}}},"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"l":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0}},"df":2}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}}}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"i":{"docs":{"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":3},"u":{"docs":{},"df":0,"e":{"docs":{"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.4142135623730952},"interoperability.html#examples-of-error-messages":{"tf":1.0}},"df":4}},"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.4142135623730952}},"df":2}}}}},"i":{"docs":{},"df":0,"l":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":1},"t":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.4142135623730952},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":3.4641016151377546},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":2.23606797749979},"flexibility.html#advantages-of-generics":{"tf":2.0},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":3.872983346207417},"flexibility.html#examples-from-the-standard-library":{"tf":1.4142135623730952},"flexibility.html#advantages-of-trait-objects":{"tf":1.7320508075688773},"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"tf":2.6457513110645909},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":3.0},"future-proofing.html#examples-from-the-standard-library":{"tf":1.4142135623730952},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":3.4641016151377546},"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"tf":1.4142135623730952},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":2.23606797749979},"checklist.html#rust-api-guidelines-checklist":{"tf":2.8284271247461905},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.0},"predictability.html#operator-overloads-are-unsurprising-c-overload":{"tf":1.4142135623730952},"flexibility.html#disadvantages-of-trait-objects":{"tf":2.23606797749979},"future-proofing.html#exceptions":{"tf":2.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.4142135623730952},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.4142135623730952},"flexibility.html#disadvantages-of-generics":{"tf":1.0}},"df":23,"'":{"docs":{"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0}},"df":1},">":{"docs":{},"df":0,"(":{"docs":{},"df":0,"x":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.0}},"df":1}}},".":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"df":0,"k":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0}},"df":2}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"o":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0}},"df":1}}}}}}},"y":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"tf":1.0}},"df":1}}}},"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"tf":1.4142135623730952}},"df":1,"<":{"docs":{},"df":0,"u":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"interoperability.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}}}}}},"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}}}}}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0}},"df":1}}}}},"m":{"docs":{},"df":0,"e":{"docs":{"interoperability.html#examples-of-error-messages":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"dependability.html#static-enforcement":{"tf":1.4142135623730952},"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":4}}},"w":{"docs":{},"df":0,"o":{"docs":{"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0}},"df":7}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"l":{"docs":{"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0}},"df":2}}},"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0}},"df":1}}}}}}},"]":{"docs":{},"df":0,">":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"naming.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"y":{"docs":{"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.4142135623730952},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952}},"df":3,"p":{"docs":{},"df":0,"e":{"docs":{"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":2.6457513110645909},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":3.605551275463989},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":2.449489742783178},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.4142135623730952},"dependability.html#dynamic-enforcement":{"tf":1.0},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.7320508075688773},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.4142135623730952},"flexibility.html#disadvantages-of-trait-objects":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0},"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.4142135623730952},"flexibility.html#examples-from-the-standard-library":{"tf":1.4142135623730952},"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0},"future-proofing.html#exceptions":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":3.4641016151377546},"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":2.449489742783178},"predictability.html#operator-overloads-are-unsurprising-c-overload":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":2.8284271247461905},"future-proofing.html#examples-from-the-standard-library":{"tf":1.0},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.4142135623730952},"type-safety.html#consuming-builders":{"tf":1.0},"predictability.html#examples-from-the-standard-library":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"flexibility.html#disadvantages-of-generics":{"tf":2.23606797749979},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":2.449489742783178},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.7320508075688773},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":2.23606797749979},"flexibility.html#advantages-of-generics":{"tf":3.4641016151377546},"dependability.html#static-enforcement":{"tf":1.4142135623730952},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":2.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.7320508075688773},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.4142135623730952},"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.4142135623730952},"interoperability.html#examples-from-the-standard-library":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":2.0},"checklist.html#rust-api-guidelines-checklist":{"tf":3.605551275463989},"type-safety.html#type-safety":{"tf":1.4142135623730952},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":2.0},"debuggability.html#all-public-types-implement--debug--c-debug":{"tf":1.4142135623730952},"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":2.23606797749979},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.4142135623730952},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.7320508075688773}},"df":42,"s":{"docs":{},"df":0,")":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}},"a":{"docs":{},"df":0,"f":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.4142135623730952},"dependability.html#static-enforcement":{"tf":1.0}},"df":2}}}},"i":{"docs":{},"df":0,"c":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.4142135623730952},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.4142135623730952}},"df":4}}}},":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"i":{"docs":{"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.4142135623730952}},"df":1}}}},"y":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.0}},"df":1,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":1}}}}}}}},"5":{"docs":{},"df":0,"0":{"docs":{},"df":0,"5":{"docs":{"external-links.html#external-links":{"tf":1.0}},"df":1}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"z":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"h":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0}},"df":3,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}}}}}}}}}}},"v":{"docs":{},"df":0,"e":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.4142135623730952}},"df":2}},"r":{"docs":{},"df":0,"d":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"d":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"dependability.html#static-enforcement":{"tf":1.0}},"df":3,"l":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.7320508075688773}},"df":1}}}},"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"l":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":2.6457513110645909},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2}}}}}}}}}}},"t":{"docs":{},"df":0,"p":{"docs":{},"df":0,":":{"docs":{},"df":0,"/":{"docs":{},"df":0,"/":{"docs":{},"df":0,"w":{"docs":{},"df":0,"w":{"docs":{},"df":0,"w":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,":":{"docs":{},"df":0,"/":{"docs":{},"df":0,"/":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":1,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"/":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,".":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0}},"df":1}}}}}}},"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{},"df":0,"/":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"3":{"docs":{},"df":0,".":{"docs":{},"df":0,"8":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":1}}}}}}}}},"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"j":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"x":{"docs":{},"df":0,".":{"docs":{},"df":0,"y":{"docs":{},"df":0,".":{"docs":{},"df":0,"z":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"flexibility.html#advantages-of-trait-objects":{"tf":1.0},"flexibility.html#disadvantages-of-generics":{"tf":1.0}},"df":2}}}}}}},"a":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{"flexibility.html#disadvantages-of-generics":{"tf":1.0}},"df":1}},"d":{"docs":{"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0}},"df":1},"p":{"docs":{"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.4142135623730952}},"df":1,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0}},"df":1}}}}}}},"p":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":4,"e":{"docs":{},"df":0,"r":{"docs":{"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"e":{"docs":{"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.0}},"df":2,"i":{"docs":{},"df":0,"n":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}}}},"x":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.4142135623730952}},"df":2}},"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"flexibility.html#disadvantages-of-generics":{"tf":1.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.4142135623730952}},"df":2}}}},"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":2.0}},"df":2}}}}},"s":{"docs":{},"df":0,"t":{"docs":{"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":2}},"c":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.4142135623730952}},"df":3}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"dependability.html#static-enforcement":{"tf":1.0}},"df":1}},"r":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}},"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.4142135623730952}},"df":2}}},"e":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":2.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":4}}},"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"k":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.4142135623730952}},"df":2}}}}}}}}},"o":{"docs":{"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0}},"df":1,"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0}},"df":1}}}},"d":{"docs":{"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.0},"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":2.6457513110645909},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952}},"df":4}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0}},"df":2,"l":{"docs":{},"df":0,"i":{"docs":{"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0}},"df":1}}}}}}}},"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0}},"df":3,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.7320508075688773}},"df":1,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"dependability.html#dynamic-enforcement":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":6}}}}}}},"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0}},"df":1}}}}},"w":{"docs":{},"df":0,"n":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":2.449489742783178},"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.4142135623730952},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.0},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.4142135623730952}},"df":6,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{"type-safety.html#consuming-builders":{"tf":2.23606797749979},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":2.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":2.0},"external-links.html#external-links":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":8}}}}}}}},"p":{"docs":{},"df":0,"t":{"docs":{"dependability.html#dynamic-enforcement":{"tf":1.7320508075688773},"future-proofing.html#examples-from-the-standard-library":{"tf":1.0}},"df":2,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"predictability.html#examples-from-the-standard-library":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":2.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.7320508075688773},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":2.6457513110645909},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.4142135623730952},"dependability.html#dynamic-enforcement":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0}},"df":10,"<":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":1},"&":{"docs":{},"df":0,"v":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":1},"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"s":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0}},"df":1}}}}}}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}}}}}}}}},"m":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.4142135623730952}},"df":2}}},"e":{"docs":{},"df":0,"n":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"predictability.html#examples-from-the-standard-library":{"tf":1.4142135623730952},"flexibility.html#advantages-of-generics":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0}},"df":4},"r":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"predictability.html#examples-from-the-standard-library":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0},"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"predictability.html#operator-overloads-are-unsurprising-c-overload":{"tf":2.23606797749979},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":9}}},"k":{"docs":{"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"y":{"docs":{"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.4142135623730952}},"df":3}}},"h":{"docs":{"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0}},"df":1},"u":{"docs":{},"df":0,"t":{"docs":{"dependability.html#static-enforcement":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0},"flexibility.html#disadvantages-of-generics":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.4142135623730952},"dependability.html#dynamic-enforcement":{"tf":1.7320508075688773},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.4142135623730952},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":2.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"future-proofing.html#examples-from-the-standard-library":{"tf":1.0}},"df":12,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.4142135623730952},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.4142135623730952}},"df":3}}},"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.7320508075688773},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.7320508075688773},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.7320508075688773}},"df":5}}}}},"n":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.7320508075688773},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.7320508075688773},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.4142135623730952},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.4142135623730952},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":2.0}},"df":15,"t":{"docs":{},"df":0,"o":{"docs":{"interoperability.html#collections-implement--fromiterator--and--extend--c-collect":{"tf":1.0}},"df":1}},"c":{"docs":{"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0}},"df":1}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.4142135623730952},"flexibility.html#advantages-of-generics":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.4142135623730952},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.4142135623730952},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.4142135623730952},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"dependability.html#static-enforcement":{"tf":1.0}},"df":14,"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}}}}}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"predictability.html#operator-overloads-are-unsurprising-c-overload":{"tf":2.0}},"df":2}}}}}}},"b":{"docs":{},"df":0,"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#disadvantages-of-trait-objects":{"tf":2.23606797749979},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.4142135623730952},"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.7320508075688773},"flexibility.html#advantages-of-trait-objects":{"tf":1.7320508075688773},"flexibility.html#examples-from-the-standard-library":{"tf":1.4142135623730952},"flexibility.html#disadvantages-of-generics":{"tf":1.0},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":3.872983346207417}},"df":8,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}},"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.4142135623730952}},"df":2}}},"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}}}}},"x":{"docs":{"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.7320508075688773},"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.4142135623730952}},"df":2},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"flexibility.html#functions-expose-intermediate-results-to-avoid-duplicate-work-c-intermediate":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.4142135623730952}},"df":4}}}}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0}},"df":1}},"t":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":1}},"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0}},"df":2}}}},"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0},"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":3}}}}}}}},"j":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":2}}},"u":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0}},"df":1,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"3":{"docs":{},"df":0,"2":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1},"4":{"docs":{},"df":0,"4":{"docs":{"external-links.html#external-links":{"tf":1.0}},"df":1}}},"v":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.7320508075688773}},"df":1,"4":{"docs":{"interoperability.html#examples-from-the-standard-library":{"tf":1.0}},"df":1},"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"dependability.html#dynamic-enforcement":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"dependability.html#functions-validate-their-arguments-c-validate":{"tf":2.23606797749979},"interoperability.html#examples-of-error-messages":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":8}},"u":{"docs":{"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.4142135623730952},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":2.0},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.4142135623730952},"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.4142135623730952},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":2.449489742783178},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.4142135623730952},"debuggability.html#debug--representation-is-never-empty-c-debug-nonempty":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.7320508075688773},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.4142135623730952},"flexibility.html#examples-from-the-standard-library":{"tf":2.23606797749979},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.7320508075688773},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.4142135623730952},"naming.html#examples-from-the-standard-library":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0}},"df":20}},"g":{"docs":{},"df":0,"u":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":1}}},"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0}},"df":6}},"b":{"docs":{},"df":0,"l":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"interoperability.html#examples-of-error-messages":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":3}}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"flexibility.html#disadvantages-of-trait-objects":{"tf":1.0}},"df":1}}}},"6":{"docs":{"interoperability.html#examples-from-the-standard-library":{"tf":1.0}},"df":1},"c":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0}},"df":1},"i":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.4142135623730952}},"df":2,"a":{"docs":{"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":2},"e":{"docs":{},"df":0,"w":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.4142135623730952},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0}},"df":3}},"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":2}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0},"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.7320508075688773},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0}},"df":4}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"b":{"docs":{"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.4142135623730952}},"df":1,"o":{"docs":{},"df":0,"s":{"docs":{"flexibility.html#disadvantages-of-generics":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.0}},"df":3}},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":2.6457513110645909},"flexibility.html#advantages-of-trait-objects":{"tf":1.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.4142135623730952},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.4142135623730952},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.4142135623730952}},"df":6}}}}},"c":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}}}}}}}}}}},"i":{"docs":{},"df":0,"t":{"docs":{"naming.html#examples-from-the-standard-library":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"naming.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}}}}},"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.0}},"df":1}},"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"naming.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}}}}}},"<":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,">":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"debuggability.html#debug--representation-is-never-empty-c-debug-nonempty":{"tf":1.0}},"df":1}}}}}}}}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":1}}},"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}}}}}}}}}}},"<":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#disadvantages-of-generics":{"tf":1.0},"interoperability.html#examples-from-the-standard-library":{"tf":1.0}},"df":2},"u":{"docs":{},"df":0,"8":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.4142135623730952}},"df":1}},"i":{"docs":{},"df":0,"6":{"docs":{},"df":0,"4":{"docs":{"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0}},"df":2}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"flexibility.html#disadvantages-of-generics":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":2}}}}},"s":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":1}},"d":{"docs":{"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":2,"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"dependability.html#dynamic-enforcement":{"tf":2.6457513110645909},"flexibility.html#disadvantages-of-trait-objects":{"tf":1.0}},"df":2}}}},"u":{"docs":{},"df":0,"e":{"docs":{"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0}},"df":2},"r":{"docs":{},"df":0,"e":{"docs":{"dependability.html#static-enforcement":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0}},"df":2}},"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"flexibility.html#functions-expose-intermediate-results-to-avoid-duplicate-work-c-intermediate":{"tf":1.4142135623730952},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.7320508075688773},"flexibility.html#disadvantages-of-generics":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952}},"df":4}}}},"a":{"docs":{},"df":0,"l":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.7320508075688773}},"df":1}}},"e":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"t":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0}},"df":1}}}}},"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}},"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"tf":1.0},"debuggability.html#all-public-types-implement--debug--c-debug":{"tf":2.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":2.6457513110645909},"checklist.html#rust-api-guidelines-checklist":{"tf":2.449489742783178},"debuggability.html#debug--representation-is-never-empty-c-debug-nonempty":{"tf":2.23606797749979},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0}},"df":7,"g":{"docs":{"debuggability.html#debuggability":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2},"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":1}}}}}}}}}},"p":{"docs":{},"df":0,"(":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.7320508075688773},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.7320508075688773},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":2.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":2.8284271247461905},"dependability.html#dependability":{"tf":1.4142135623730952},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":2.23606797749979}},"df":7}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"about.html#rust-api-guidelines":{"tf":1.4142135623730952}},"df":1}}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1},"g":{"docs":{},"df":0,"n":{"docs":{"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0},"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"tf":1.0},"external-links.html#external-links":{"tf":1.0}},"df":4}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":2.0}},"df":4,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":2}}},"<":{"docs":{},"df":0,"'":{"docs":{},"df":0,"d":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":1}}}}}}}}}}},"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":3}},"b":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.4142135623730952},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":3}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"tf":1.7320508075688773},"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":2.23606797749979}},"df":3}}}}}}}},"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":1}}},"/":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,".":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"dependability.html#static-enforcement":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":2.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.7320508075688773},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952}},"df":6}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0}},"df":2}}}}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"tf":2.23606797749979},"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952}},"df":3,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2}}}}},"i":{"docs":{},"df":0,"v":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":3.1622776601683797},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.7320508075688773}},"df":4,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":1}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.0}},"df":1}}}}},"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":1}}}}},"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":2.0}},"df":1}}}}}}}}},"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.4142135623730952},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":2.23606797749979},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.4142135623730952},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0}},"df":6,"i":{"docs":{},"df":0,"t":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.4142135623730952},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0}},"df":2}}}},"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.7320508075688773},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0}},"df":8}}}}},"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"d":{"docs":{"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.4142135623730952},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":4},"s":{"docs":{"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"d":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1},"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.7320508075688773}},"df":1}}}}},"o":{"docs":{"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0}},"df":1,"w":{"docs":{},"df":0,"n":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.0},"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0}},"df":2,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.7320508075688773},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":5}}}}}}}},"n":{"docs":{},"df":0,"e":{"docs":{"dependability.html#dynamic-enforcement":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":2}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":2.0}},"df":1}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"t":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0}},"df":2}}},"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"(":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0}},"df":1}}}}}}}}}}}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.4142135623730952}},"df":1}}}}}}},"c":{"docs":{"external-links.html#external-links":{"tf":1.4142135623730952},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.4142135623730952},"documentation.html#crate-level-docs-are-thorough-and-include-examples-c-crate-doc":{"tf":2.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.7320508075688773}},"df":4,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.4142135623730952},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":2.449489742783178},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":2.23606797749979},"documentation.html#documentation":{"tf":1.4142135623730952},"external-links.html#external-links":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":2.8284271247461905},"checklist.html#rust-api-guidelines-checklist":{"tf":2.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.7320508075688773}},"df":10}}}}},"(":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.4142135623730952},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0}},"df":2}}}}},"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"l":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.7320508075688773},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.4142135623730952}},"df":2}}}}},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"future-proofing.html#exceptions":{"tf":1.7320508075688773},"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":2.449489742783178},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.7320508075688773},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":2.449489742783178},"checklist.html#rust-api-guidelines-checklist":{"tf":1.7320508075688773},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":2.449489742783178},"flexibility.html#functions-expose-intermediate-results-to-avoid-duplicate-work-c-intermediate":{"tf":1.4142135623730952},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.7320508075688773},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.4142135623730952},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.0},"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0}},"df":16}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.4142135623730952},"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952}},"df":3}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"p":{"docs":{"future-proofing.html#exceptions":{"tf":1.4142135623730952},"future-proofing.html#examples-from-the-standard-library":{"tf":1.0},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.4142135623730952},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":4}}},"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2}}}},"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#disadvantages-of-generics":{"tf":1.0},"dependability.html#static-enforcement":{"tf":1.0},"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"tf":1.0}},"df":3}}}}},"e":{"docs":{},"df":0,"r":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":8}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.7320508075688773}},"df":5}},"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0}},"df":2}}}}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}}}}}},"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.4142135623730952},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":2.23606797749979},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":2.0}},"df":5,">":{"docs":{},"df":0,"(":{"docs":{},"df":0,"t":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}}}}}},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"flexibility.html#disadvantages-of-generics":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0},"flexibility.html#disadvantages-of-trait-objects":{"tf":1.4142135623730952}},"df":3}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.4142135623730952}},"df":1}}}}},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}},"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":1}}}}},"d":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"flexibility.html#disadvantages-of-trait-objects":{"tf":1.4142135623730952},"flexibility.html#disadvantages-of-generics":{"tf":1.4142135623730952}},"df":2}}}}}}}}},"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"documentation.html#examples":{"tf":1.0}},"df":1}}}},"r":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0}},"df":2}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.4142135623730952},"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":2}}}}}}}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0}},"df":1}}}},"6":{"docs":{},"df":0,"4":{"docs":{"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.0}},"df":1,">":{"docs":{},"df":0,">":{"docs":{},"df":0,"(":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.0}},"df":1}}}}}}},"o":{"docs":{"predictability.html#examples-from-the-standard-library":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":2,"(":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0}},"df":1}}}}}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":2}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"<":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"s":{"docs":{"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0}},"df":1}}}}}}},"a":{"docs":{},"df":0,"d":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.4142135623730952}},"df":1}}}}}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":2.23606797749979},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":3.872983346207417},"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":2.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.4142135623730952},"interoperability.html#collections-implement--fromiterator--and--extend--c-collect":{"tf":1.7320508075688773},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":2.449489742783178},"naming.html#examples-from-the-standard-library":{"tf":1.0}},"df":9,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.4142135623730952},"naming.html#examples-from-the-standard-library":{"tf":1.0}},"df":2}}},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,">":{"docs":{},"df":0,"(":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.7320508075688773}},"df":1}}}}}}},"<":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.4142135623730952},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.7320508075688773}},"df":2}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#collections-implement--fromiterator--and--extend--c-collect":{"tf":1.0}},"df":1}}}}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"z":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{"interoperability.html#collections-implement--fromiterator--and--extend--c-collect":{"tf":1.0}},"df":1}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#collections-implement--fromiterator--and--extend--c-collect":{"tf":1.0}},"df":1}}}}}}}}}}}},"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":2.0}},"df":2,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0}},"df":1}}}}}}}}},"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0}},"df":1}}}}}}},"m":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":2.0},"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.7320508075688773},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"interoperability.html#collections-implement--fromiterator--and--extend--c-collect":{"tf":1.4142135623730952},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":2.23606797749979},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":2.6457513110645909},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":2.23606797749979},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0}},"df":10}},"'":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":1},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":2}}}}},"/":{"docs":{},"df":0,"o":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":2}},"p":{"docs":{"interoperability.html#examples-of-error-messages":{"tf":1.0},"interoperability.html#examples-from-the-standard-library":{"tf":1.0}},"df":2,"c":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":1},"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"r":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.4142135623730952},"interoperability.html#examples-from-the-standard-library":{"tf":1.0}},"df":2}}}}},"3":{"docs":{},"df":0,"2":{"docs":{"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.4142135623730952}},"df":1}},"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"x":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":1}}}}}}}}}},"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0}},"df":1}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.4142135623730952},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":2}}}}}},"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0}},"df":1}}}}}},"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":1}}},"l":{"docs":{"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.4142135623730952},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.7320508075688773},"type-safety.html#consuming-builders":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.7320508075688773},"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"tf":1.0},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.4142135623730952},"future-proofing.html#examples-from-the-standard-library":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.7320508075688773},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.4142135623730952},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.4142135623730952},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":2.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"future-proofing.html#exceptions":{"tf":1.4142135623730952},"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0}},"df":19,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"future-proofing.html#examples-from-the-standard-library":{"tf":1.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.4142135623730952}},"df":2,"l":{"docs":{},"df":0,"i":{"docs":{"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.0},"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"tf":1.0}},"df":2}}}}}},"<":{"docs":{},"df":0,"i":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0}},"df":1},"'":{"docs":{},"df":0,"a":{"docs":{"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.4142135623730952}},"df":1},"d":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":1}},"t":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.4142135623730952}},"df":2}},"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":2.6457513110645909},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.4142135623730952},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":2.449489742783178},"interoperability.html#examples-from-the-standard-library":{"tf":1.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.7320508075688773},"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"tf":1.7320508075688773},"debuggability.html#all-public-types-implement--debug--c-debug":{"tf":1.4142135623730952},"interoperability.html#collections-implement--fromiterator--and--extend--c-collect":{"tf":1.4142135623730952},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":2.0},"predictability.html#operator-overloads-are-unsurprising-c-overload":{"tf":1.4142135623730952},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":2.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":2.0},"flexibility.html#advantages-of-generics":{"tf":2.0},"dependability.html#dynamic-enforcement":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":2.8284271247461905},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":3.0},"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.4142135623730952},"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"tf":1.4142135623730952},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.4142135623730952}},"df":21}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.4142135623730952},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":6}},"s":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.4142135623730952}},"df":1,"s":{"docs":{"dependability.html#static-enforcement":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.0}},"df":2}}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0}},"df":1}}}}},"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}}}},"d":{"docs":{"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":3}},"g":{"docs":{"interoperability.html#examples-from-the-standard-library":{"tf":2.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":2.0}},"df":2,"r":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0}},"df":2}},"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"flexibility.html#functions-expose-intermediate-results-to-avoid-duplicate-work-c-intermediate":{"tf":2.0}},"df":3}}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.4142135623730952},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.4142135623730952},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0}},"df":3}}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0},"flexibility.html#functions-expose-intermediate-results-to-avoid-duplicate-work-c-intermediate":{"tf":1.4142135623730952}},"df":2}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"interoperability.html#interoperability":{"tf":1.4142135623730952},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":4}}}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"tf":1.0}},"df":2}}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.4142135623730952},"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":2}}}}},"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.0},"naming.html#examples-from-the-standard-library":{"tf":1.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.4142135623730952}},"df":3,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"<":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.0}},"df":1}}}}}}}}}}}}},"_":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":2.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0}},"df":3,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{},"df":0,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.0}},"df":1}}}},"b":{"docs":{"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.0}},"df":1}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"t":{"docs":{"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":2.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":3,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0}},"df":1}}}}}}}},"n":{"docs":{},"df":0,"n":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0}},"df":1}}}},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"r":{"docs":{"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.4142135623730952},"flexibility.html#advantages-of-generics":{"tf":1.4142135623730952}},"df":2}},"o":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1,"r":{"docs":{},"df":0,"m":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.4142135623730952},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":3}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.7320508075688773}},"df":1}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.7320508075688773},"flexibility.html#disadvantages-of-trait-objects":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.7320508075688773},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952}},"df":4}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0}},"df":4}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"interoperability.html#examples-of-error-messages":{"tf":1.4142135623730952}},"df":1}}}},"o":{"docs":{},"df":0,"k":{"docs":{"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"tf":1.0},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0}},"df":4},"l":{"docs":{},"df":0,"v":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"flexibility.html#disadvantages-of-trait-objects":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.7320508075688773},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0}},"df":6}},"c":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0}},"df":3}}},"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.7320508075688773},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.4142135623730952},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.7320508075688773},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":2.23606797749979},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":2.23606797749979},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"dependability.html#static-enforcement":{"tf":1.0},"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.7320508075688773}},"df":12,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"(":{"docs":{},"df":0,"3":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.0},"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.7320508075688773},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0},"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0},"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.0}},"df":10}}},"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":1}},"c":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.4142135623730952}},"df":2}}}},"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.4142135623730952}},"df":1}}}},"a":{"docs":{},"df":0,"s":{"docs":{"flexibility.html#disadvantages-of-generics":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1},"d":{"docs":{"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.7320508075688773},"checklist.html#rust-api-guidelines-checklist":{"tf":1.7320508075688773},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.4142135623730952},"documentation.html#crate-level-docs-are-thorough-and-include-examples-c-crate-doc":{"tf":1.4142135623730952},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.4142135623730952}},"df":11}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":1}}}}}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.0},"flexibility.html#disadvantages-of-trait-objects":{"tf":1.0}},"df":2}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0}},"df":3}}}}},"e":{"docs":{"flexibility.html#disadvantages-of-generics":{"tf":1.0}},"df":1,"x":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":2.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.7320508075688773},"interoperability.html#examples-of-error-messages":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.4142135623730952}},"df":4,".":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":1}}}}}}}}},"r":{"docs":{},"df":0,"c":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":1}}},"e":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.4142135623730952}},"df":2,"t":{"docs":{},"df":0,"c":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0}},"df":1}}}}},"r":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.4142135623730952},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":3,"o":{"docs":{},"df":0,"r":{"docs":{"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.4142135623730952},"interoperability.html#examples-of-error-messages":{"tf":1.4142135623730952},"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":2.0},"predictability.html#examples-from-the-standard-library":{"tf":1.4142135623730952},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":6.0},"interoperability.html#examples-from-the-standard-library":{"tf":1.0},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.7320508075688773},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":3.3166247903554},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0}},"df":11,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":1}}}}}}}}}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":1}}}}}}}}}},"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.7320508075688773}},"df":1,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"(":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.7320508075688773}},"df":2}}}}},"s":{"docs":{},"df":0,"i":{"docs":{"naming.html#examples-from-the-standard-library":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.4142135623730952}},"df":4,"e":{"docs":{},"df":0,"r":{"docs":{"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":2}},"l":{"docs":{},"df":0,"i":{"docs":{"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":2}}}},"r":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"dependability.html#static-enforcement":{"tf":1.0},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0}},"df":2}}},"c":{"docs":{},"df":0,"h":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.4142135623730952}},"df":6}}},"v":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":2.0}},"df":2}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0}},"df":1}}}},"n":{"docs":{"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"debuggability.html#debug--representation-is-never-empty-c-debug-nonempty":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0}},"df":7}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"y":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.4142135623730952}},"df":2}}}}}}}},"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0}},"df":2}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2}}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"flexibility.html#disadvantages-of-generics":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.4142135623730952}},"df":4}}}},"g":{"docs":{"external-links.html#external-links":{"tf":1.0}},"df":1}}},"x":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":1,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"flexibility.html#functions-expose-intermediate-results-to-avoid-duplicate-work-c-intermediate":{"tf":1.7320508075688773}},"df":4}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"dependability.html#static-enforcement":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":2}},"n":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0}},"df":2}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0}},"df":2,"l":{"docs":{},"df":0,"i":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":2}}}}}}},"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0}},"df":3}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.4142135623730952},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.4142135623730952},"predictability.html#operator-overloads-are-unsurprising-c-overload":{"tf":1.4142135623730952},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":5}},"r":{"docs":{},"df":0,"i":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"s":{"docs":{"dependability.html#dynamic-enforcement":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.7320508075688773}},"df":2}}}},"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"d":{"docs":{"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.4142135623730952}},"df":1},"s":{"docs":{"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"future-proofing.html#exceptions":{"tf":1.7320508075688773},"flexibility.html#disadvantages-of-trait-objects":{"tf":1.0},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0},"debuggability.html#all-public-types-implement--debug--c-debug":{"tf":1.0}},"df":6}},"s":{"docs":{},"df":0,"s":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}}}},"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"documentation.html#examples":{"tf":1.4142135623730952},"documentation.html#crate-level-docs-are-thorough-and-include-examples-c-crate-doc":{"tf":1.4142135623730952},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.7320508075688773},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.4142135623730952},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.4142135623730952},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0},"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.0},"interoperability.html#examples-from-the-standard-library":{"tf":1.4142135623730952},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.7320508075688773},"flexibility.html#examples-from-the-standard-library":{"tf":1.4142135623730952},"interoperability.html#examples":{"tf":1.4142135623730952},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":3.3166247903554},"flexibility.html#disadvantages-of-generics":{"tf":1.0},"future-proofing.html#examples":{"tf":1.4142135623730952},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"interoperability.html#examples-of-error-messages":{"tf":1.4142135623730952},"future-proofing.html#examples-from-the-standard-library":{"tf":1.4142135623730952},"flexibility.html#advantages-of-generics":{"tf":1.0},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"dependability.html#static-enforcement":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.4142135623730952},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.7320508075688773},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.4142135623730952},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":2.449489742783178},"naming.html#examples-from-the-standard-library":{"tf":1.4142135623730952},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.4142135623730952},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"predictability.html#examples-from-the-standard-library":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":2.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.4142135623730952},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0}},"df":37,"e":{"docs":{},"df":0,"<":{"docs":{},"df":0,"t":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.4142135623730952}},"df":1}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":1}}}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":1}}}}}}}}},"c":{"docs":{},"df":0,"t":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0}},"df":2,"l":{"docs":{},"df":0,"i":{"docs":{"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":3}}}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.0}},"df":3}}},"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"interoperability.html#collections-implement--fromiterator--and--extend--c-collect":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.4142135623730952},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":9}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.7320508075688773}},"df":1}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"external-links.html#external-links":{"tf":1.4142135623730952},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.4142135623730952},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":3}},"n":{"docs":{},"df":0,"s":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":1},"d":{"docs":{"interoperability.html#collections-implement--fromiterator--and--extend--c-collect":{"tf":2.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2,"<":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}}}}},".":{"docs":{},"df":0,"g":{"docs":{"predictability.html#operator-overloads-are-unsurprising-c-overload":{"tf":1.0},"dependability.html#static-enforcement":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.4142135623730952}},"df":5}},"n":{"docs":{},"df":0,"d":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"interoperability.html#examples-of-error-messages":{"tf":1.0}},"df":3,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"i":{"docs":{"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0}},"df":1}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"interoperability.html#examples-of-error-messages":{"tf":1.0},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0}},"df":2}}}}},"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.4142135623730952},"interoperability.html#collections-implement--fromiterator--and--extend--c-collect":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952}},"df":5}}},"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":2}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.4142135623730952},"dependability.html#dynamic-enforcement":{"tf":2.449489742783178},"dependability.html#static-enforcement":{"tf":1.7320508075688773}},"df":3}}}},"u":{"docs":{},"df":0,"m":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":2.449489742783178},"flexibility.html#advantages-of-generics":{"tf":1.4142135623730952},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.0},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.4142135623730952}},"df":8,".":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0}},"df":1}}}}}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"<":{"docs":{},"df":0,"s":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"<":{"docs":{},"df":0,"i":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0}},"df":4},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}}}},"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2}}}}}}},"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{"debuggability.html#debug--representation-is-never-empty-c-debug-nonempty":{"tf":1.4142135623730952}},"df":1}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"debuggability.html#debug--representation-is-never-empty-c-debug-nonempty":{"tf":1.4142135623730952}},"df":1}}}}},"i":{"docs":{"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"debuggability.html#debug--representation-is-never-empty-c-debug-nonempty":{"tf":2.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0}},"df":4}}}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0}},"df":6}}}}},"q":{"docs":{"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}},"a":{"docs":{},"df":0,"l":{"docs":{"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0}},"df":1}}}}},"4":{"docs":{},"df":0,"3":{"docs":{},"df":0,"0":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.7320508075688773},"external-links.html#external-links":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":3}}},"m":{"docs":{"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0}},"df":3,"u":{"docs":{},"df":0,"t":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.7320508075688773},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":2.0},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.4142135623730952},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":2.23606797749979},"type-safety.html#non-consuming-builders-preferred":{"tf":2.0},"type-safety.html#consuming-builders":{"tf":1.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.4142135623730952}},"df":8,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":1}}}}}},"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0}},"df":3}},"t":{"docs":{"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0}},"df":1}}},"c":{"docs":{},"df":0,"h":{"docs":{"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"tf":1.0}},"df":1}},"l":{"docs":{"predictability.html#operator-overloads-are-unsurprising-c-overload":{"tf":1.0}},"df":1,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.4142135623730952},"predictability.html#operator-overloads-are-unsurprising-c-overload":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.4142135623730952},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0}},"df":5}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":1}}}}}}}}}},"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":2.0}},"df":1,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0}},"df":1}}}}}}},"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.4142135623730952},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":3}}},"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":1}}}},"t":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":2.6457513110645909}},"df":1,"]":{"docs":{},"df":0,"(":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}}}}}}}},"/":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}}}}}}},"s":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":1,"_":{"docs":{},"df":0,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"predictability.html#examples-from-the-standard-library":{"tf":1.0}},"df":2}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952}},"df":3}}},"c":{"docs":{},"df":0,"h":{"docs":{"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.4142135623730952}},"df":3}}},"k":{"docs":{},"df":0,"e":{"docs":{"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.4142135623730952},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.0},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0},"flexibility.html#disadvantages-of-generics":{"tf":1.0},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.4142135623730952},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"tf":1.0},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0},"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0}},"df":16}},"n":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}}},"i":{"docs":{"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"flexibility.html#functions-expose-intermediate-results-to-avoid-duplicate-work-c-intermediate":{"tf":1.0},"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0}},"df":7,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0},"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0}},"df":2}}}},"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"n":{"docs":{"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":3,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0}},"df":1}}}}}},"p":{"docs":{"predictability.html#examples-from-the-standard-library":{"tf":1.0}},"df":1},"x":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"k":{"docs":{"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.4142135623730952},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":4,"e":{"docs":{},"df":0,"r":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":1}}}},"y":{"docs":{},"df":0,"b":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}},"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":2.23606797749979},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":2.0},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":2.23606797749979},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":2.23606797749979},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":2.8284271247461905},"macros.html#macros":{"tf":1.4142135623730952},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":2.449489742783178}},"df":9,"_":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":2}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0}},"df":2}}}}}}}},"o":{"docs":{},"df":0,"d":{"docs":{"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.4142135623730952},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0}},"df":3,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"l":{"docs":{"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":2.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.0},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.4142135623730952},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0}},"df":7}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"h":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.0},"flexibility.html#advantages-of-trait-objects":{"tf":1.0}},"df":2}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0},"flexibility.html#disadvantages-of-generics":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":2.0},"dependability.html#static-enforcement":{"tf":1.0},"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.4142135623730952},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.4142135623730952},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.4142135623730952},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.4142135623730952},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"tf":1.0}},"df":21}},"v":{"docs":{},"df":0,"e":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.4142135623730952}},"df":1}}},"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":2.0},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":2.449489742783178},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.7320508075688773},"type-safety.html#non-consuming-builders-preferred":{"tf":1.7320508075688773},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":2.449489742783178},"type-safety.html#consuming-builders":{"tf":2.449489742783178},"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"tf":1.0},"interoperability.html#collections-implement--fromiterator--and--extend--c-collect":{"tf":1.0},"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":2.23606797749979},"flexibility.html#disadvantages-of-trait-objects":{"tf":2.0},"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":2.8284271247461905},"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.4142135623730952},"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.4142135623730952},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":2.23606797749979},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":2.23606797749979},"checklist.html#rust-api-guidelines-checklist":{"tf":2.449489742783178},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":2.449489742783178},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.7320508075688773},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":2.23606797749979},"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":25,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":2.6457513110645909}},"df":2}}}}}},"a":{"docs":{},"df":0,"n":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0},"flexibility.html#disadvantages-of-generics":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.4142135623730952},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.4142135623730952}},"df":9,"t":{"docs":{"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.4142135623730952},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0}},"df":3},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":2.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2}}}}},"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.7320508075688773},"interoperability.html#examples-of-error-messages":{"tf":1.4142135623730952}},"df":2}}}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":4}}}},"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"predictability.html#examples-from-the-standard-library":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":3}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0}},"df":1}}}},"t":{"docs":{"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0}},"df":2}}}}}},"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0}},"df":1,"<":{"docs":{},"df":0,"i":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.7320508075688773}},"df":1}}}}}}}}}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.4142135623730952}},"df":1}},"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"(":{"docs":{},"df":0,"3":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}},"<":{"docs":{},"df":0,"i":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.4142135623730952}},"df":1,">":{"docs":{},"df":0,"(":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"<":{"docs":{},"df":0,"s":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"<":{"docs":{},"df":0,"i":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"8":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.4142135623730952},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.4142135623730952},"interoperability.html#examples-of-error-messages":{"tf":1.0}},"df":5},"b":{"docs":{"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":2.23606797749979},"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0}},"df":5,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":1}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"naming.html#examples-from-the-standard-library":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"naming.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}}}}}},"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{"naming.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"naming.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}}}}}}}}}}},"i":{"docs":{},"df":0,"g":{"docs":{"interoperability.html#examples-from-the-standard-library":{"tf":1.4142135623730952}},"df":1,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"interoperability.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":2.0}},"df":2},"y":{"docs":{},"df":0,"<":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"dependability.html#static-enforcement":{"tf":1.0}},"df":3,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":2.6457513110645909},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.4142135623730952},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":2.23606797749979},"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.4142135623730952}},"df":6}}}},"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.4142135623730952},"dependability.html#dynamic-enforcement":{"tf":1.0},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0}},"df":5,"e":{"docs":{},"df":0,"r":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.4142135623730952},"type-safety.html#non-consuming-builders-preferred":{"tf":2.23606797749979},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":3.3166247903554},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"type-safety.html#consuming-builders":{"tf":3.1622776601683797}},"df":5}}},"t":{"docs":{"predictability.html#operator-overloads-are-unsurprising-c-overload":{"tf":1.0}},"df":1}}},"f":{"docs":{"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0}},"df":1,"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"n":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"n":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":2.23606797749979},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0}},"df":3}}}},"g":{"docs":{"dependability.html#dynamic-enforcement":{"tf":1.0},"dependability.html#static-enforcement":{"tf":1.0},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0}},"df":3}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"tf":2.23606797749979},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":3}}},"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"e":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1}}},"a":{"docs":{},"df":0,"d":{"docs":{"dependability.html#static-enforcement":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":2,"<":{"docs":{},"df":0,"t":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.4142135623730952}},"df":1}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":5}},"e":{"docs":{"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"predictability.html#examples-from-the-standard-library":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0}},"df":4,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0}},"df":1}}}}}}}},"r":{"docs":{"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":2.0},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":2.23606797749979}},"df":2},"c":{"docs":{},"df":0,"k":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":1,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":1}}}}}},"g":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"x":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.4142135623730952}},"df":1,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"predictability.html#examples-from-the-standard-library":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":2}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":1}}}}}}}}}},"<":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0}},"df":1}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.7320508075688773}},"df":1}}},"t":{"docs":{"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":2.0},"predictability.html#examples-from-the-standard-library":{"tf":1.0}},"df":2}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0},"future-proofing.html#exceptions":{"tf":2.0},"future-proofing.html#examples-from-the-standard-library":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"flexibility.html#advantages-of-generics":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":3.4641016151377546}},"df":10,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"dependability.html#static-enforcement":{"tf":1.0}},"df":1}}}}}},"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":2.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.4142135623730952},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":2.6457513110645909},"future-proofing.html#examples-from-the-standard-library":{"tf":1.0}},"df":6,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}}}}}}}}}},"o":{"docs":{},"df":0,"k":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0}},"df":1},"l":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.7320508075688773},"interoperability.html#examples-from-the-standard-library":{"tf":1.0}},"df":5}},"d":{"docs":{},"df":0,"i":{"docs":{"flexibility.html#disadvantages-of-generics":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"h":{"docs":{"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.4142135623730952},"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"interoperability.html#examples-from-the-standard-library":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.4142135623730952},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":7}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0}},"df":2,"!":{"docs":{},"df":0,"(":{"docs":{},"df":0,"b":{"docs":{"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0}},"df":1},"m":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"t":{"docs":{"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0}},"df":1},"u":{"docs":{"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0}},"df":1}}}},"c":{"docs":{"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0}},"df":1},"a":{"docs":{"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0}},"df":1}}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":2.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":2.0}},"df":5}}}},"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":1}}}}}}}}},".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0},"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0}},"df":6,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":3}}},"y":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":2}}}},"t":{"docs":{},"df":0,"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.4142135623730952},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0}},"df":6}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":3}}}},"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.0}},"df":2}}},"a":{"docs":{},"df":0,"v":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0}},"df":3,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":2}}}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0}},"df":2}}},"a":{"docs":{},"df":0,"r":{"docs":{"predictability.html#operator-overloads-are-unsurprising-c-overload":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#disadvantages-of-generics":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":2}}}}},"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":2}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":2}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.0}},"df":2}}}},"y":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"interoperability.html#examples-of-error-messages":{"tf":1.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.4142135623730952},"flexibility.html#examples-from-the-standard-library":{"tf":1.7320508075688773},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.7320508075688773},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.4142135623730952}},"df":7,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"b":{"docs":{},"df":0,"y":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"future-proofing.html#examples":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"d":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.4142135623730952}},"df":1}}},"2":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":2,".":{"docs":{},"df":0,"0":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":2.449489742783178}},"df":1}}},"n":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0}},"df":1}}},"m":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.4142135623730952}},"df":2,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.7320508075688773},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.7320508075688773},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.4142135623730952}},"df":4}}},"e":{"docs":{},"df":0,"r":{"docs":{"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0}},"df":2}}}},"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"<":{"docs":{},"df":0,"t":{"docs":{},"df":0,">":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0}},"df":2},"a":{"docs":{},"df":0,"t":{"docs":{"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0}},"df":1},"b":{"docs":{},"df":0,"l":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":1}}},"e":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.4142135623730952},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":2.449489742783178},"documentation.html#examples":{"tf":1.7320508075688773},"type-safety.html#non-consuming-builders-preferred":{"tf":1.4142135623730952}},"df":9}},"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"d":{"docs":{"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0}},"df":1}}}},"n":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.4142135623730952},"type-safety.html#non-consuming-builders-preferred":{"tf":1.4142135623730952},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.4142135623730952},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.4142135623730952},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0}},"df":5,"e":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":1,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"debuggability.html#debug--representation-is-never-empty-c-debug-nonempty":{"tf":1.4142135623730952}},"df":2}}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}}},"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"tf":1.0}},"df":1}}}}}}},"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"u":{"docs":{},"df":0,"6":{"docs":{},"df":0,"4":{"docs":{"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0}},"df":1}}}}}}}}}}}}},"m":{"docs":{},"df":0,"e":{"docs":{"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.7320508075688773},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.4142135623730952},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":2.6457513110645909},"checklist.html#rust-api-guidelines-checklist":{"tf":2.449489742783178},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.7320508075688773},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"external-links.html#external-links":{"tf":1.7320508075688773},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.4142135623730952},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.7320508075688773},"naming.html#naming":{"tf":1.4142135623730952},"flexibility.html#advantages-of-generics":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.7320508075688773},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.7320508075688773},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.4142135623730952},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.4142135623730952},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":3.0}},"df":20,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0}},"df":1}}}}}}}},"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.4142135623730952},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.4142135623730952},"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.4142135623730952},"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.4142135623730952},"flexibility.html#advantages-of-trait-objects":{"tf":1.4142135623730952}},"df":17}},"x":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0}},"df":1}}}}}}},"w":{"docs":{"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.7320508075688773},"interoperability.html#collections-implement--fromiterator--and--extend--c-collect":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.0},"predictability.html#examples-from-the-standard-library":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":2.449489742783178},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0}},"df":7,"(":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":1}}}}}}}},"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":2.449489742783178},"checklist.html#rust-api-guidelines-checklist":{"tf":2.0},"dependability.html#static-enforcement":{"tf":1.4142135623730952},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":2.6457513110645909},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.4142135623730952}},"df":6}}}},"g":{"docs":{"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0}},"df":1},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"necessities.html#necessities":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":5}}}}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"debuggability.html#debug--representation-is-never-empty-c-debug-nonempty":{"tf":1.7320508075688773},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.4142135623730952},"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.4142135623730952}},"df":10}}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":1}}},"1":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0}},"df":1}},"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{"dependability.html#static-enforcement":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.4142135623730952},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0}},"df":3,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}}}}}}}}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{"documentation.html#examples":{"tf":1.0},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0}},"df":2,"i":{"docs":{},"df":0,"c":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"k":{"docs":{"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.4142135623730952},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":4,"u":{"docs":{},"df":0,"p":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}},"w":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":1,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":3}}}}}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":1},"l":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.0}},"df":2}}},"t":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.4142135623730952},"flexibility.html#examples-from-the-standard-library":{"tf":1.4142135623730952},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.4142135623730952},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"interoperability.html#examples-from-the-standard-library":{"tf":1.4142135623730952},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.7320508075688773},"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.4142135623730952},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0},"naming.html#examples-from-the-standard-library":{"tf":1.4142135623730952},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.7320508075688773},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.7320508075688773},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"future-proofing.html#examples-from-the-standard-library":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"external-links.html#external-links":{"tf":1.0},"predictability.html#examples-from-the-standard-library":{"tf":1.4142135623730952}},"df":17}}}},"e":{"docs":{},"df":0,"r":{"docs":{"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.0}},"df":1}}},"v":{"docs":{},"df":0,"e":{"docs":{"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.7320508075688773},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":3}},"s":{"docs":{},"df":0,"t":{"docs":{"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.0}},"df":1}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":2}}},"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"l":{"docs":{"dependability.html#static-enforcement":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.4142135623730952}},"df":1}}}}}}}}}},"n":{"docs":{},"df":0,"e":{"docs":{"flexibility.html#disadvantages-of-generics":{"tf":1.0},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0}},"df":2,"r":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.4142135623730952},"type-safety.html#consuming-builders":{"tf":2.0}},"df":2}},"k":{"docs":{"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":2.449489742783178},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.4142135623730952},"external-links.html#external-links":{"tf":1.4142135623730952},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.4142135623730952},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.4142135623730952},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":7,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":5.477225575051661}},"df":3}}}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0}},"df":3}},"t":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":1,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.7320508075688773}},"df":1}}}},"a":{"docs":{},"df":0,"v":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1},"d":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0}},"df":2}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.4142135623730952},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0},"documentation.html#crate-level-docs-are-thorough-and-include-examples-c-crate-doc":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.4142135623730952},"external-links.html#external-links":{"tf":1.0}},"df":7},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2}}}}},"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":1}}}}},"a":{"docs":{},"df":0,"y":{"docs":{"flexibility.html#disadvantages-of-generics":{"tf":1.0}},"df":1,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"t":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"d":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"interoperability.html#examples-of-error-messages":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":3}}},"r":{"docs":{},"df":0,"g":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.4142135623730952}},"df":2}}}},"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}}}},"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"t":{"docs":{"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":2}}},"r":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.4142135623730952}},"df":2,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.4142135623730952},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.7320508075688773},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":2.0}},"df":4}}}}}},"o":{"docs":{},"df":0,"m":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}}}}}}},"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}}}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"y":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":2}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"dependability.html#static-enforcement":{"tf":1.0}},"df":3}}}},"g":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":2.0}},"df":1,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"type-safety.html#non-consuming-builders-preferred":{"tf":1.4142135623730952},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":2.449489742783178},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.7320508075688773},"flexibility.html#disadvantages-of-trait-objects":{"tf":1.0},"dependability.html#static-enforcement":{"tf":1.0},"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.4142135623730952},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":2.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"predictability.html#examples-from-the-standard-library":{"tf":1.0}},"df":14}}}}},"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":1}}}}}}},"i":{"docs":{},"df":0,"s":{"docs":{"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0}},"df":1}},"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0}},"df":1}}}}}}}}},"c":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":1,"<":{"docs":{},"df":0,"t":{"docs":{"predictability.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"tf":1.4142135623730952}},"df":2}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0}},"df":2}}}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":3}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"interoperability.html#examples-from-the-standard-library":{"tf":1.0},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.4142135623730952},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":4}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":2},"w":{"docs":{"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.4142135623730952},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.4142135623730952},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.4142135623730952},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.4142135623730952},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.7320508075688773}},"df":11}}}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"y":{"docs":{},"df":0,"m":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.4142135623730952}},"df":1}}}}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.4142135623730952},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.0}},"df":3}},"p":{"docs":{},"df":0,"t":{"docs":{"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0}},"df":5}}},"u":{"docs":{},"df":0,"r":{"docs":{"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0}},"df":1}}}}},"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":1,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.4142135623730952},"flexibility.html#disadvantages-of-generics":{"tf":1.0}},"df":3}}}}},"d":{"docs":{"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.0},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.4142135623730952},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"interoperability.html#collections-implement--fromiterator--and--extend--c-collect":{"tf":1.0}},"df":10,"d":{"docs":{"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.4142135623730952},"dependability.html#dynamic-enforcement":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.4142135623730952},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.4142135623730952},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0}},"df":8,"i":{"docs":{},"df":0,"t":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.4142135623730952},"predictability.html#examples-from-the-standard-library":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":8,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0}},"df":1}}}}}}}}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"interoperability.html#examples-of-error-messages":{"tf":1.0},"interoperability.html#examples-from-the-standard-library":{"tf":1.0},"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0}},"df":3}}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.4142135623730952},"flexibility.html#advantages-of-trait-objects":{"tf":1.4142135623730952}},"df":3}}}}}}},"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"tf":1.0}},"df":2,"s":{"docs":{},"df":0,"t":{"docs":{"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0},"flexibility.html#disadvantages-of-generics":{"tf":1.0}},"df":4}}}}}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"i":{"docs":{"dependability.html#static-enforcement":{"tf":1.7320508075688773}},"df":1}}},"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"future-proofing.html#exceptions":{"tf":1.0},"predictability.html#operator-overloads-are-unsurprising-c-overload":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0},"future-proofing.html#examples-from-the-standard-library":{"tf":1.0}},"df":5}}},"u":{"docs":{},"df":0,"m":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":1,"p":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":2.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2}}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{"type-safety.html#consuming-builders":{"tf":1.4142135623730952}},"df":1}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"!":{"docs":{},"df":0,"(":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"debuggability.html#debug--representation-is-never-empty-c-debug-nonempty":{"tf":1.4142135623730952}},"df":1}}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"<":{"docs":{},"df":0,"m":{"docs":{},"df":0,"y":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"<":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0}},"df":1}}}}},"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"<":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0}},"df":1}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"<":{"docs":{},"df":0,"m":{"docs":{},"df":0,"y":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":2.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":3,"s":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}}}}}},"t":{"docs":{},"df":0,"r":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}},"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":1}}}},"b":{"docs":{},"df":0,"y":{"docs":{},"df":0,"t":{"docs":{"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0}},"df":1}}}},"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"tf":1.7320508075688773},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2}}},"i":{"docs":{},"df":0,"d":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"tf":1.7320508075688773}},"df":2,"<":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}}}}}}},"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":2}},"c":{"docs":{"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":2.0}},"df":1},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":1}}}}}}}},"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.0},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.4142135623730952}},"df":2}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.4142135623730952}},"df":2}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"v":{"docs":{"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":4},"r":{"docs":{},"df":0,"t":{"docs":{"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"y":{"docs":{},"df":0,"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":2.23606797749979}},"df":2}}}}},"d":{"docs":{},"df":0,"/":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":7}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.4142135623730952}},"df":1}}},"s":{"docs":{},"df":0,"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"flexibility.html#functions-expose-intermediate-results-to-avoid-duplicate-work-c-intermediate":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0}},"df":2}}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.0},"flexibility.html#functions-expose-intermediate-results-to-avoid-duplicate-work-c-intermediate":{"tf":1.4142135623730952},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0}},"df":6}}}},"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"about.html#rust-api-guidelines":{"tf":1.7320508075688773},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":4}}},"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0}},"df":1}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"m":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"i":{"docs":{"about.html#rust-api-guidelines":{"tf":2.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.4142135623730952},"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"flexibility.html#functions-expose-intermediate-results-to-avoid-duplicate-work-c-intermediate":{"tf":1.0},"external-links.html#external-links":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.0},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.4142135623730952},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0}},"df":12,"'":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0},"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.4142135623730952},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0}},"df":8}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.4142135623730952},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0}},"df":2}},"n":{"docs":{},"df":0,"d":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"i":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.4142135623730952},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.4142135623730952},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.4142135623730952}},"df":9,"c":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0}},"df":3}}}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":2.8284271247461905}},"df":1,"e":{"docs":{},"df":0,"]":{"docs":{},"df":0,"(":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"g":{"docs":{"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.4142135623730952}},"df":1,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.4142135623730952},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.4142135623730952},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"naming.html#examples-from-the-standard-library":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"about.html#rust-api-guidelines":{"tf":2.8284271247461905},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.0},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0}},"df":9}}}}}},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"dependability.html#static-enforcement":{"tf":1.0}},"df":6}}}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"flexibility.html#disadvantages-of-generics":{"tf":2.0},"flexibility.html#advantages-of-generics":{"tf":2.8284271247461905},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":2.23606797749979},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.4142135623730952},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.7320508075688773},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"flexibility.html#advantages-of-trait-objects":{"tf":1.4142135623730952},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0},"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":2.449489742783178},"flexibility.html#disadvantages-of-trait-objects":{"tf":1.4142135623730952},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.7320508075688773},"checklist.html#rust-api-guidelines-checklist":{"tf":1.7320508075688773}},"df":15}}},"t":{"docs":{},"df":0,"_":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":1,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":1}}}}}},"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":1,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":1}}}}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":1}}}},"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":1}}}}},"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":1}}}}}}}}}},"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":3.1622776601683797}},"df":2,"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0}},"df":1}}}}}}}}}},"z":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.4142135623730952},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":2,"n":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.4142135623730952},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.4142135623730952}},"df":3}}},"t":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":2.23606797749979}},"df":1,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"=":{"docs":{},"df":0,"$":{"docs":{},"df":0,"(":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1}},"y":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":1},"a":{"docs":{},"df":0,"t":{"docs":{"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0}},"df":3,"l":{"docs":{},"df":0,"i":{"docs":{"flexibility.html#advantages-of-trait-objects":{"tf":1.0}},"df":1}}}}},"a":{"docs":{},"df":0,"y":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":1}}},"o":{"docs":{"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0}},"df":2,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"d":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.4142135623730952}},"df":3,"<":{"docs":{},"df":0,"t":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.4142135623730952}},"df":1}}}}}},"_":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"dependability.html#dynamic-enforcement":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":2}}}}}}},"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":1}}}}}}}}},"r":{"docs":{"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":2.23606797749979},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2,"e":{"docs":{"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.4142135623730952}},"df":2,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{"interoperability.html#examples-from-the-standard-library":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0},"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":5,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0},"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.4142135623730952},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.4142135623730952},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"flexibility.html#disadvantages-of-generics":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.7320508075688773},"debuggability.html#debug--representation-is-never-empty-c-debug-nonempty":{"tf":1.7320508075688773}},"df":9}}}}}},"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.7320508075688773}},"df":3}}}}}}}},"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.0},"flexibility.html#functions-expose-intermediate-results-to-avoid-duplicate-work-c-intermediate":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":7,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}}}}}},"<":{"docs":{},"df":0,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.4142135623730952}},"df":1}}},"t":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"predictability.html#examples-from-the-standard-library":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":2}}},"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0}},"df":2}}}},"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"predictability.html#operator-overloads-are-unsurprising-c-overload":{"tf":1.0}},"df":1}}}},"t":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":1,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.7320508075688773}},"df":1}}}}}},"l":{"docs":{"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.7320508075688773}},"df":1,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2}}},"a":{"docs":{},"df":0,"t":{"docs":{"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0},"flexibility.html#functions-expose-intermediate-results-to-avoid-duplicate-work-c-intermediate":{"tf":1.0}},"df":2}},"e":{"docs":{},"df":0,"v":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.4142135623730952},"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":5},"a":{"docs":{},"df":0,"s":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":2.8284271247461905},"documentation.html#examples":{"tf":1.7320508075688773}},"df":4}}}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":3}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.7320508075688773},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":2.23606797749979},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.7320508075688773},"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":2.449489742783178},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":2.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.4142135623730952},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.4142135623730952},"naming.html#examples-from-the-standard-library":{"tf":2.23606797749979},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.4142135623730952},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.0},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.7320508075688773},"interoperability.html#examples-from-the-standard-library":{"tf":1.0}},"df":17}}}},"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"r":{"docs":{"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"future-proofing.html#examples-from-the-standard-library":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.4142135623730952},"future-proofing.html#exceptions":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.4142135623730952}},"df":6}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}}}}}}}}}}},"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0}},"df":1}}}}},"d":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0}},"df":1}},"c":{"docs":{"flexibility.html#advantages-of-trait-objects":{"tf":1.0}},"df":1}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0}},"df":1}}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"future-proofing.html#exceptions":{"tf":1.7320508075688773},"type-safety.html#consuming-builders":{"tf":1.4142135623730952},"future-proofing.html#examples-from-the-standard-library":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.4142135623730952},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.4142135623730952},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.4142135623730952},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.4142135623730952}},"df":14}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1}}}},"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":1},"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.4142135623730952},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":4}}}}}},"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"flexibility.html#disadvantages-of-trait-objects":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.4142135623730952},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"predictability.html#examples-from-the-standard-library":{"tf":1.0}},"df":5}}},"v":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"a":{"docs":{},"df":0,"d":{"docs":{"flexibility.html#disadvantages-of-generics":{"tf":1.0},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":2.6457513110645909},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.7320508075688773}},"df":7,"e":{"docs":{},"df":0,"r":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.4142135623730952},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.4142135623730952}},"df":4,"/":{"docs":{},"df":0,"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.4142135623730952}},"df":2}}}}}}},"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0}},"df":1}}}}},"_":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}}}}}}}},"m":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"d":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}}}}}},"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.4142135623730952},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0}},"df":4}}},"l":{"docs":{"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2,"l":{"docs":{},"df":0,"i":{"docs":{"flexibility.html#advantages-of-trait-objects":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0}},"df":1}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":4}}},"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"v":{"docs":{"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0}},"df":2}}}},"c":{"docs":{},"df":0,"<":{"docs":{},"df":0,"t":{"docs":{"predictability.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}},"f":{"docs":{},"df":0,"c":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.7320508075688773},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"documentation.html#crate-level-docs-are-thorough-and-include-examples-c-crate-doc":{"tf":1.0},"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"external-links.html#external-links":{"tf":2.449489742783178},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0}},"df":7}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}}}},"w":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.4142135623730952}},"df":2},"s":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":1},"a":{"docs":{},"df":0,"w":{"docs":{"dependability.html#dynamic-enforcement":{"tf":1.0},"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":3},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"e":{"docs":{"debuggability.html#all-public-types-implement--debug--c-debug":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0}},"df":2}}}},"n":{"docs":{},"df":0,"d":{"docs":{"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.4142135623730952}},"df":1}}},"o":{"docs":{},"df":0,"t":{"docs":{"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":2.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2}},"l":{"docs":{},"df":0,"e":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":1}},"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"n":{"docs":{"dependability.html#static-enforcement":{"tf":1.4142135623730952},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":2,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":5}}}},"s":{"docs":{},"df":0,"t":{"docs":{"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"future-proofing.html#exceptions":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":2.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":2.8284271247461905},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":2.0},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0},"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.4142135623730952},"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":2.8284271247461905},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.4142135623730952},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"external-links.html#external-links":{"tf":1.4142135623730952},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.7320508075688773},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.7320508075688773}},"df":19,"'":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.7320508075688773},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0}},"df":4},"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":2.23606797749979},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0}},"df":7}}}}},"b":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"e":{"docs":{"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"tf":1.0},"dependability.html#static-enforcement":{"tf":1.0}},"df":2}}}},"s":{"docs":{"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.4142135623730952},"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.4142135623730952},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":2.23606797749979}},"df":4,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":1}},"w":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.7320508075688773},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":2.0}},"df":3}},"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"t":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}}},"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"e":{"docs":{"predictability.html#operator-overloads-are-unsurprising-c-overload":{"tf":1.0},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":4}}}},"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"tf":1.0},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.0}},"df":5}}},"t":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.4142135623730952},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.7320508075688773},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.7320508075688773},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.4142135623730952},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0}},"df":7,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1},"c":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1},"a":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.4142135623730952},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"interoperability.html#examples-of-error-messages":{"tf":1.0}},"df":3,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":2.23606797749979},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0}},"df":2}}}}},"e":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"flexibility.html#disadvantages-of-generics":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0},"documentation.html#crate-level-docs-are-thorough-and-include-examples-c-crate-doc":{"tf":1.0},"dependability.html#static-enforcement":{"tf":1.0}},"df":7,"m":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.4142135623730952},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.4142135623730952}},"df":4}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":2.0}},"df":1}}}}}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"interoperability.html#examples-of-error-messages":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.0}},"df":2}}}}},"n":{"docs":{},"df":0,"d":{"docs":{"type-safety.html#consuming-builders":{"tf":1.4142135623730952},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":2.23606797749979},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":2.8284271247461905},"dependability.html#functions-validate-their-arguments-c-validate":{"tf":1.0}},"df":6},"s":{"docs":{"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.4142135623730952},"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"tf":1.0}},"df":2}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":2.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":5,"i":{"docs":{},"df":0,"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0}},"df":1}}}}}}}}}}}}},"d":{"docs":{"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":2.6457513110645909},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":4.123105625617661},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"documentation.html#examples":{"tf":1.7320508075688773}},"df":5,"e":{"docs":{},"df":0,"'":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.4142135623730952}},"df":2},"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"d":{"docs":{"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0}},"df":1}}}},"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0}},"df":1}}}},"j":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"interoperability.html#examples":{"tf":1.0}},"df":1}}}}}}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#examples":{"tf":1.0}},"df":1}}}}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"future-proofing.html#examples":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":1}},"a":{"docs":{},"df":0,"l":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":3.605551275463989}},"df":2}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0}},"df":1}}},"f":{"docs":{"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":2.6457513110645909},"flexibility.html#disadvantages-of-trait-objects":{"tf":1.4142135623730952},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"interoperability.html#examples-of-error-messages":{"tf":1.0},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":2.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":2.8284271247461905},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.7320508075688773},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"tf":1.0}},"df":15,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"w":{"docs":{},"df":0,"d":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0}},"df":1}}}}}},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"(":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":1}}}}}}}}}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0}},"df":1}}},"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0}},"df":1}}}}}},"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.4142135623730952}},"df":1}}}}}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"dependability.html#dynamic-enforcement":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0}},"df":3}}}},"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.4142135623730952}},"df":1}}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"flexibility.html#disadvantages-of-generics":{"tf":1.0}},"df":3}},"g":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0}},"df":3}}}},"a":{"docs":{},"df":0,"l":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"dependability.html#destructors-never-fail-c-dtor-fail":{"tf":1.0},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"tf":1.0}},"df":3},"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.4142135623730952},"flexibility.html#disadvantages-of-generics":{"tf":1.4142135623730952}},"df":4}}}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":5,"l":{"docs":{},"df":0,"i":{"docs":{"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"tf":1.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0},"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"tf":1.0}},"df":3}}}}}},"p":{"docs":{},"df":0,"l":{"docs":{"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0}},"df":2,"i":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":2,"f":{"docs":{},"df":0,"i":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":2}}}}}},"z":{"docs":{},"df":0,"e":{"docs":{"future-proofing.html#exceptions":{"tf":1.0},"future-proofing.html#examples-from-the-standard-library":{"tf":1.0},"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.4142135623730952},"flexibility.html#disadvantages-of-generics":{"tf":1.4142135623730952},"flexibility.html#examples-from-the-standard-library":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.4142135623730952},"flexibility.html#advantages-of-trait-objects":{"tf":1.4142135623730952},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.7320508075688773}},"df":8,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":1}}}}}}},"b":{"docs":{},"df":0,"l":{"docs":{"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"e":{"docs":{"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.0}},"df":1},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0}},"df":3}}}},"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.7320508075688773},"flexibility.html#disadvantages-of-generics":{"tf":1.4142135623730952},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"predictability.html#examples-from-the-standard-library":{"tf":1.0}},"df":8}}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.4142135623730952}},"df":4}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"<":{"docs":{},"df":0,"i":{"docs":{},"df":0,"6":{"docs":{},"df":0,"4":{"docs":{"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"n":{"docs":{"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.4142135623730952},"flexibility.html#disadvantages-of-generics":{"tf":1.0},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.0}},"df":5}}},"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.0},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0}},"df":2}}}},"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"tf":1.0}},"df":1}}}},"(":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0}},"df":1}}}}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":1}}}}}},"f":{"docs":{},"df":0,"t":{"docs":{},"df":0,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.4142135623730952}},"df":1}}}}},"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0}},"df":1}}}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.7320508075688773}},"df":1}}}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":2.23606797749979}},"df":1}}},"a":{"docs":{},"df":0,"n":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"predictability.html#examples-from-the-standard-library":{"tf":1.0},"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":2.23606797749979},"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"tf":1.7320508075688773},"checklist.html#rust-api-guidelines-checklist":{"tf":1.7320508075688773}},"df":4}},"l":{"docs":{},"df":0,"l":{"docs":{"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{"interoperability.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}}}},"r":{"docs":{},"df":0,"c":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":2.6457513110645909},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0}},"df":2}},"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":2.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":2,"t":{"docs":{},"df":0,"i":{"docs":{"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"type-safety.html#type-safety":{"tf":1.4142135623730952},"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":2.0}},"df":4}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":1}}}}},"m":{"docs":{},"df":0,"e":{"docs":{"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.4142135623730952},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0}},"df":11}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"about.html#rust-api-guidelines":{"tf":1.0}},"df":3}}},"r":{"docs":{"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"predictability.html#examples-from-the-standard-library":{"tf":1.0},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0},"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":1.4142135623730952},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":2.0}},"df":6,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"g":{"docs":{"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"type-safety.html#non-consuming-builders-preferred":{"tf":2.449489742783178},"interoperability.html#examples-of-error-messages":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.0},"predictability.html#examples-from-the-standard-library":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":2.0},"interoperability.html#examples-from-the-standard-library":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":8,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"f":{"docs":{},"df":0,"8":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":2}}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"y":{"docs":{},"df":0,"t":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}}}}}}}}}},"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.0}},"df":1}}}}}}}}}}}}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.0},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":1.4142135623730952},"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.4142135623730952},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"tf":1.0},"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.7320508075688773},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.4142135623730952},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":2.449489742783178},"type-safety.html#non-consuming-builders-preferred":{"tf":1.0},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":1.4142135623730952},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.4142135623730952},"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":2.449489742783178},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.4142135623730952},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.7320508075688773},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":2.23606797749979}},"df":22,"u":{"docs":{},"df":0,"r":{"docs":{"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.4142135623730952},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"tf":2.449489742783178},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":3.0},"future-proofing.html#exceptions":{"tf":2.0},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0}},"df":8}}}},"g":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"predictability.html#operator-overloads-are-unsurprising-c-overload":{"tf":1.0},"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0}},"df":2}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"y":{"docs":{},"df":0,"t":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}}}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}}}}}}}}},"b":{"docs":{},"df":0,"y":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0}},"df":1}}}}}}},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1},"i":{"docs":{},"df":0,"c":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.7320508075688773},"flexibility.html#disadvantages-of-generics":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.4142135623730952},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"tf":2.0},"flexibility.html#advantages-of-generics":{"tf":1.4142135623730952},"dependability.html#static-enforcement":{"tf":1.7320508075688773}},"df":9}},"u":{"docs":{"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":1.0}},"df":1}},"y":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1},"n":{"docs":{},"df":0,"d":{"docs":{"flexibility.html#disadvantages-of-generics":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.4142135623730952},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0},"future-proofing.html#examples-from-the-standard-library":{"tf":1.4142135623730952},"naming.html#examples-from-the-standard-library":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"predictability.html#examples-from-the-standard-library":{"tf":1.4142135623730952},"interoperability.html#examples-from-the-standard-library":{"tf":1.4142135623730952},"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"tf":1.4142135623730952},"flexibility.html#examples-from-the-standard-library":{"tf":1.4142135623730952},"about.html#rust-api-guidelines":{"tf":1.0},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":1.7320508075688773},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"naming.html#names-use-a-consistent-word-order-c-word-order":{"tf":1.4142135623730952},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0}},"df":14}}}}},"c":{"docs":{},"df":0,"k":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}},"b":{"docs":{},"df":0,"l":{"docs":{"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":3.3166247903554},"checklist.html#rust-api-guidelines-checklist":{"tf":1.7320508075688773}},"df":2}},"r":{"docs":{},"df":0,"t":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"p":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0}},"df":1}},"d":{"docs":{"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.7320508075688773},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"tf":2.8284271247461905}},"df":2,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#consuming-builders":{"tf":1.7320508075688773}},"df":1,"(":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0}},"df":1}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.4142135623730952}},"df":1}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"naming.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{"future-proofing.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}}}}}},"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"future-proofing.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}}}}}}}}},"o":{"docs":{},"df":0,"p":{"docs":{"predictability.html#operator-overloads-are-unsurprising-c-overload":{"tf":1.0}},"df":1}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"naming.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"p":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"df":0,"m":{"docs":{},"df":0,"t":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0}},"df":1}}}}}}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0}},"df":1}}}}}}},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0}},"df":1}}}}},"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0}},"df":1}}}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0}},"df":1}}}}}}}}}}}},"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"flexibility.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"naming.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"naming.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"f":{"docs":{},"df":0,"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"future-proofing.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"predictability.html#examples-from-the-standard-library":{"tf":1.0}},"df":2}}},"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{},"df":0,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"predictability.html#examples-from-the-standard-library":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":2}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0}},"df":1}}}}}}}}}},"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"naming.html#examples-from-the-standard-library":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"{":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"tf":1.4142135623730952}},"df":1}}}}}}}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.4142135623730952}},"df":2}}}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.4142135623730952},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"tf":1.0},"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":5}},"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"tf":1.0}},"df":1}}}}},"b":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"t":{"docs":{"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"l":{"docs":{"naming.html#getter-names-follow-rust-convention-c-getter":{"tf":1.0},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0}},"df":2}}},"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":1.0},"dependability.html#dynamic-enforcement":{"tf":1.0}},"df":3},"c":{"docs":{},"df":0,"i":{"docs":{"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"tf":1.0}},"df":3}}}}},"i":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0}},"df":2,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"about.html#rust-api-guidelines":{"tf":1.0}},"df":1}}}}},"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"tf":1.0}},"df":1},"r":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.4142135623730952},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"tf":1.4142135623730952},"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.4142135623730952},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952}},"df":4}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"$":{"docs":{},"df":0,"t":{"docs":{"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0}},"df":1}},"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"macros.html#type-fragments-are-flexible-c-macro-ty":{"tf":1.0}},"df":1}}}},"u":{"docs":{"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"tf":1.0}},"df":1}}}}}}}},"g":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"tf":1.0}},"df":1}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":2.0},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.0},"type-safety.html#consuming-builders":{"tf":1.4142135623730952}},"df":3,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"type-safety.html#non-consuming-builders-preferred":{"tf":1.0}},"df":1}}}}}},"<":{"docs":{},"df":0,"f":{"docs":{},"df":0,">":{"docs":{},"df":0,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"type-safety.html#consuming-builders":{"tf":1.0}},"df":1}}}}}}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"tf":1.0}},"df":1}},"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"flexibility.html#advantages-of-generics":{"tf":1.0},"flexibility.html#disadvantages-of-generics":{"tf":1.4142135623730952},"flexibility.html#advantages-of-trait-objects":{"tf":1.0}},"df":3}},"f":{"docs":{"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"tf":1.0},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"tf":1.0},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"tf":2.6457513110645909},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0},"flexibility.html#advantages-of-generics":{"tf":1.0}},"df":7,"i":{"docs":{"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.7320508075688773},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"tf":1.0},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0},"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":5}}}}},"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"future-proofing.html#structs-have-private-fields-c-struct-private":{"tf":1.0}},"df":1}}}}},"y":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"predictability.html#examples-from-the-standard-library":{"tf":1.0},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"tf":1.0},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0}},"df":4,"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"tf":1.0}},"df":1}}}}}}}}}}}},"n":{"docs":{},"df":0,"c":{"docs":{"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"tf":2.8284271247461905},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"tf":2.23606797749979},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"tf":1.7320508075688773},"checklist.html#rust-api-guidelines-checklist":{"tf":1.4142135623730952}},"df":4},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"x":{"docs":{"predictability.html#operator-overloads-are-unsurprising-c-overload":{"tf":1.0},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":2.6457513110645909},"checklist.html#rust-api-guidelines-checklist":{"tf":1.0},"interoperability.html#examples-of-error-messages":{"tf":1.0},"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"tf":1.0}},"df":5}}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"tf":1.0}},"df":1}}},"a":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"naming.html#casing-conforms-to-rfc-430-c-case":{"tf":2.8284271247461905}},"df":1}}}}}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.7320508075688773},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"tf":1.4142135623730952},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"tf":1.0}},"df":3,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"tf":1.0}},"df":1}}}}}}}}}},"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"tf":1.0}},"df":1}}}}}}}}}}},"documentStore":{"save":true,"docs":{"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"id":"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value","body":"The standard library contains these two impls: impl<'a, R: Read + ?Sized> Read for &'a mut R { /* ... */ } impl<'a, W: Write + ?Sized> Write for &'a mut W { /* ... */ } That means any function that accepts R: Read or W: Write generic parameters by value can be called with a mut reference if necessary. In the documentation of such functions, briefly remind users that a mut reference can be passed. New Rust users often struggle with this. They may have opened a file and want to read multiple pieces of data out of it, but the function to read one piece consumes the reader by value, so they are stuck. The solution would be to leverage one of the above impls and pass &mut f instead of f as the reader parameter.","breadcrumbs":"Generic reader/writer functions take R: Read and W: Write by value (C-RW-VALUE)","title":"Generic reader/writer functions take R: Read and W: Write by value (C-RW-VALUE)"},"future-proofing.html#future-proofing":{"id":"future-proofing.html#future-proofing","breadcrumbs":"Future proofing","body":"","title":"Future proofing"},"about.html#rust-api-guidelines":{"body":"This is a set of recommendations on how to design and present APIs for the Rust programming language. They are authored largely by the Rust library team, based on experiences building the Rust standard library and other crates in the Rust ecosystem. These are only guidelines, some more firm than others. In some cases they are vague and still in development. Rust crate authors should consider them as a set of important considerations in the development of idiomatic and interoperable Rust libraries, to use as they see fit. These guidelines should not in any way be considered a mandate that crate authors must follow, though they may find that crates that conform well to these guidelines integrate better with the existing crate ecosystem than those that do not. This book is organized in two parts: the concise checklist of all individual guidelines, suitable for quick scanning during crate reviews; and topical chapters containing explanations of the guidelines in detail. If you are interested in contributing to the API guidelines, check out contributing.md and join our Gitter channel .","title":"Rust API Guidelines","id":"about.html#rust-api-guidelines","breadcrumbs":"Rust API Guidelines"},"interoperability.html#examples-of-error-messages":{"title":"Examples of error messages","id":"interoperability.html#examples-of-error-messages","body":"\"unexpected end of file\" \"provided string was not `true` or `false`\" \"invalid IP address syntax\" \"second time provided was later than self\" \"invalid UTF-8 sequence of {} bytes from index {}\" \"environment variable was not valid unicode: {:?}\"","breadcrumbs":"Examples of error messages"},"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"breadcrumbs":"Binary number types provide Hex , Octal , Binary formatting (C-NUM-FMT)","id":"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt","title":"Binary number types provide Hex , Octal , Binary formatting (C-NUM-FMT)","body":"std::fmt::UpperHex std::fmt::LowerHex std::fmt::Octal std::fmt::Binary These traits control the representation of a type under the {:X} , {:x} , {:o} , and {:b} format specifiers. Implement these traits for any number type on which you would consider doing bitwise manipulations like | or & . This is especially appropriate for bitflag types. Numeric quantity types like struct Nanoseconds(u64) probably do not need these."},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"id":"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure","breadcrumbs":"Function docs include error, panic, and safety considerations (C-FAILURE)","body":"Error conditions should be documented in an \"Errors\" section. This applies to trait methods as well -- trait methods for which the implementation is allowed or expected to return an error should be documented with an \"Errors\" section. For example in the standard library, Some implementations of the std::io::Read::read trait method may return an error. /// Pull some bytes from this source into the specified buffer, returning\n/// how many bytes were read.\n///\n/// ... lots more info ...\n///\n/// # Errors\n///\n/// If this function encounters any form of I/O or other error, an error\n/// variant will be returned. If an error is returned then it must be\n/// guaranteed that no bytes were read. Panic conditions should be documented in a \"Panics\" section. This applies to trait methods as well -- traits methods for which the implementation is allowed or expected to panic should be documented with a \"Panics\" section. In the standard library the Vec::insert method may panic. /// Inserts an element at position `index` within the vector, shifting all\n/// elements after it to the right.\n///\n/// # Panics\n///\n/// Panics if `index` is out of bounds. It is not necessary to document all conceivable panic cases, especially if the panic occurs in logic provided by the caller. For example documenting the Display panic in the following code seems excessive. But when in doubt, err on the side of documenting more panic cases. /// # Panics\n///\n/// This function panics if `T`'s implementation of `Display` panics.\npub fn print<T: Display>(t: T) { println!(\"{}\", t.to_string());\n} Unsafe functions should be documented with a \"Safety\" section that explains all invariants that the caller is responsible for upholding to use the function correctly. The unsafe std::ptr::read requires the following of the caller. /// Reads the value from `src` without moving it. This leaves the\n/// memory in `src` unchanged.\n///\n/// # Safety\n///\n/// Beyond accepting a raw pointer, this is unsafe because it semantically\n/// moves the value out of `src` without preventing further usage of `src`.\n/// If `T` is not `Copy`, then care must be taken to ensure that the value at\n/// `src` is not used before the data is overwritten again (e.g. with `write`,\n/// `zero_memory`, or `copy_memory`). Note that `*src = foo` counts as a use\n/// because it will attempt to drop the value previously at `*src`.\n///\n/// The pointer must be aligned; use `read_unaligned` if that is not the case.","title":"Function docs include error, panic, and safety considerations (C-FAILURE)"},"dependability.html#functions-validate-their-arguments-c-validate":{"breadcrumbs":"Functions validate their arguments (C-VALIDATE)","id":"dependability.html#functions-validate-their-arguments-c-validate","title":"Functions validate their arguments (C-VALIDATE)","body":"Rust APIs do not generally follow the robustness principle : \"be conservative in what you send; be liberal in what you accept\". Instead, Rust code should enforce the validity of input whenever practical. Enforcement can be achieved through the following mechanisms (listed in order of preference)."},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"id":"naming.html#feature-names-are-free-of-placeholder-words-c-feature","body":"Do not include words in the name of a Cargo feature that convey zero meaning, as in use-abc or with-abc . Name the feature abc directly. This arises most commonly for crates that have an optional dependency on the Rust standard library. The canonical way to do this correctly is: # In Cargo.toml [features]\ndefault = [\"std\"]\nstd = [] // In lib.rs #![cfg_attr(not(feature = \"std\"), no_std)] Do not call the feature use-std or with-std or any creative name that is not std . This naming convention aligns with the naming of implicit features inferred by Cargo for optional dependencies. Consider crate x with optional dependencies on Serde and on the Rust standard library: [package]\nname = \"x\"\nversion = \"0.1.0\" [features]\nstd = [\"serde/std\"] [dependencies]\nserde = { version = \"1.0\", optional = true } When we depend on x , we can enable the optional Serde dependency with features = [\"serde\"] . Similarly we can enable the optional standard library dependency with features = [\"std\"] . The implicit feature inferred by Cargo for the optional dependency is called serde , not use-serde or with-serde , so we like for explicit features to behave the same way. As a related note, Cargo requires that features are additive so a feature named negatively like no-abc is practically never correct.","breadcrumbs":"Feature names are free of placeholder words (C-FEATURE)","title":"Feature names are free of placeholder words (C-FEATURE)"},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"breadcrumbs":"Iterator type names match the methods that produce them (C-ITER-TY)","id":"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty","title":"Iterator type names match the methods that produce them (C-ITER-TY)","body":"A method called into_iter() should return a type called IntoIter and similarly for all other methods that return iterators. This guideline applies chiefly to methods, but often makes sense for functions as well. For example the percent_encode function from the url crate returns an iterator type called PercentEncode . These type names make the most sense when prefixed with their owning module, for example vec::IntoIter ."},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"breadcrumbs":"Item macros work anywhere that items are allowed (C-ANYWHERE)","body":"Rust allows items to be placed at the module level or within a tighter scope like a function. Item macros should work equally well as ordinary items in all of these places. The test suite should include invocations of the macro in at least the module scope and function scope. #[cfg(test)]\nmod tests { test_your_macro_in_a!(module); #[test] fn anywhere() { test_your_macro_in_a!(function); }\n} As a simple example of how things can go wrong, this macro works great in a module scope but fails in a function scope. macro_rules! broken { ($m:ident :: $t:ident) => { pub struct $t; pub mod $m { pub use super::$t; } }\n} broken!(m::T); // okay, expands to T and m::T fn g() { broken!(m::U); // fails to compile, super::U refers to the containing module not g\n}","title":"Item macros work anywhere that items are allowed (C-ANYWHERE)","id":"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere"},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"body":"Newtypes can statically distinguish between different interpretations of an underlying type. For example, a f64 value might be used to represent a quantity in miles or in kilometers. Using newtypes, we can keep track of the intended interpretation: struct Miles(pub f64);\nstruct Kilometers(pub f64); impl Miles { fn to_kilometers(self) -> Kilometers { /* ... */ }\n}\nimpl Kilometers { fn to_miles(self) -> Miles { /* ... */ }\n} Once we have separated these two types, we can statically ensure that we do not confuse them. For example, the function fn are_we_there_yet(distance_travelled: Miles) -> bool { /* ... */ } cannot accidentally be called with a Kilometers value. The compiler will remind us to perform the conversion, thus averting certain catastrophic bugs .","title":"Newtypes provide static distinctions (C-NEWTYPE)","breadcrumbs":"Newtypes provide static distinctions (C-NEWTYPE)","id":"type-safety.html#newtypes-provide-static-distinctions-c-newtype"},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"id":"documentation.html#all-items-have-a-rustdoc-example-c-example","breadcrumbs":"All items have a rustdoc example (C-EXAMPLE)","title":"All items have a rustdoc example (C-EXAMPLE)","body":"Every public module, trait, struct, enum, function, method, macro, and type definition should have an example that exercises the functionality. This guideline should be applied within reason. A link to an applicable example on another item may be sufficient. For example if exactly one function uses a particular type, it may be appropriate to write a single example on either the function or the type and link to it from the other. The purpose of an example is not always to show how to use the item. Readers can be expected to understand how to invoke functions, match on enums, and other fundamental tasks. Rather, an example is often intended to show why someone would want to use the item. // This would be a poor example of using clone(). It mechanically shows *how* to\n// call clone(), but does nothing to show *why* somebody would want this.\nfn main() { let hello = \"hello\"; hello.clone();\n}"},"type-safety.html#non-consuming-builders-preferred":{"body":"In some cases, constructing the final T does not require the builder itself to be consumed. The following variant on std::process::Command is one example: // NOTE: the actual Command API does not use owned Strings;\n// this is a simplified version. pub struct Command { program: String, args: Vec<String>, cwd: Option<String>, // etc\n} impl Command { pub fn new(program: String) -> Command { Command { program: program, args: Vec::new(), cwd: None, } } /// Add an argument to pass to the program. pub fn arg(&mut self, arg: String) -> &mut Command { self.args.push(arg); self } /// Add multiple arguments to pass to the program. pub fn args(&mut self, args: &[String]) -> &mut Command { self.args.extend_from_slice(args); self } /// Set the working directory for the child process. pub fn current_dir(&mut self, dir: String) -> &mut Command { self.cwd = Some(dir); self } /// Executes the command as a child process, which is returned. pub fn spawn(&self) -> io::Result<Child> { /* ... */ }\n} Note that the spawn method, which actually uses the builder configuration to spawn a process, takes the builder by shared reference. This is possible because spawning the process does not require ownership of the configuration data. Because the terminal spawn method only needs a reference, the configuration methods take and return a mutable borrow of self . The benefit By using borrows throughout, Command can be used conveniently for both one-liner and more complex constructions: // One-liners\nCommand::new(\"/bin/cat\").arg(\"file.txt\").spawn(); // Complex configuration\nlet mut cmd = Command::new(\"/bin/ls\");\ncmd.arg(\".\");\nif size_sorted { cmd.arg(\"-S\");\n}\ncmd.spawn();","title":"Non-consuming builders (preferred)","breadcrumbs":"Non-consuming builders (preferred)","id":"type-safety.html#non-consuming-builders-preferred"},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"id":"macros.html#input-syntax-is-evocative-of-the-output-c-evocative","breadcrumbs":"Input syntax is evocative of the output (C-EVOCATIVE)","body":"Rust macros let you dream up practically whatever input syntax you want. Aim to keep input syntax familiar and cohesive with the rest of your users' code by mirroring existing Rust syntax where possible. Pay attention to the choice and placement of keywords and punctuation. A good guide is to use syntax, especially keywords and punctuation, that is similar to what will be produced in the output of the macro. For example if your macro declares a struct with a particular name given in the input, preface the name with the keyword struct to signal to readers that a struct is being declared with the given name. // Prefer this...\nbitflags! { struct S: u32 { /* ... */ }\n} // ...over no keyword...\nbitflags! { S: u32 { /* ... */ }\n} // ...or some ad-hoc word.\nbitflags! { flags S: u32 { /* ... */ }\n} Another example is semicolons vs commas. Constants in Rust are followed by semicolons so if your macro declares a chain of constants, they should likely be followed by semicolons even if the syntax is otherwise slightly different from Rust's. // Ordinary constants use semicolons.\nconst A: u32 = 0b000001;\nconst B: u32 = 0b000010; // So prefer this...\nbitflags! { struct S: u32 { const C = 0b000100; const D = 0b001000; }\n} // ...over this.\nbitflags! { struct S: u32 { const E = 0b010000, const F = 0b100000, }\n} Macros are so diverse that these specific examples won't be relevant, but think about how to apply the same principles to your situation.","title":"Input syntax is evocative of the output (C-EVOCATIVE)"},"interoperability.html#examples-from-the-standard-library":{"title":"Examples from the standard library","breadcrumbs":"Examples from the standard library","body":"ParseBoolError is returned when failing to parse a bool from a string.","id":"interoperability.html#examples-from-the-standard-library"},"naming.html#casing-conforms-to-rfc-430-c-case":{"id":"naming.html#casing-conforms-to-rfc-430-c-case","breadcrumbs":"Casing conforms to RFC 430 (C-CASE)","title":"Casing conforms to RFC 430 (C-CASE)","body":"Basic Rust naming conventions are described in RFC 430 . In general, Rust tends to use UpperCamelCase for \"type-level\" constructs (types and traits) and snake_case for \"value-level\" constructs. More precisely: Item Convention Crates unclear Modules snake_case Types UpperCamelCase Traits UpperCamelCase Enum variants UpperCamelCase Functions snake_case Methods snake_case General constructors new or with_more_details Conversion constructors from_some_other_type Macros snake_case! Local variables snake_case Statics SCREAMING_SNAKE_CASE Constants SCREAMING_SNAKE_CASE Type parameters concise UpperCamelCase , usually single uppercase letter: T Lifetimes short lowercase , usually a single letter: 'a , 'de , 'src Features unclear but see C-FEATURE In UpperCamelCase , acronyms and contractions of compound words count as one word: use Uuid rather than UUID , Usize rather than USize or Stdin rather than StdIn . In snake_case , acronyms and contractions are lower-cased: is_xid_start . In snake_case or SCREAMING_SNAKE_CASE , a \"word\" should never consist of a single letter unless it is the last \"word\". So, we have btree_map rather than b_tree_map , but PI_2 rather than PI2 . Crate names should not use -rs or -rust as a suffix or prefix. Every crate is Rust! It serves no purpose to remind users of this constantly."},"type-safety.html#consuming-builders":{"body":"Sometimes builders must transfer ownership when constructing the final type T , meaning that the terminal methods must take self rather than &self . impl TaskBuilder { /// Name the task-to-be. pub fn named(mut self, name: String) -> TaskBuilder { self.name = Some(name); self } /// Redirect task-local stdout. pub fn stdout(mut self, stdout: Box<io::Write + Send>) -> TaskBuilder { self.stdout = Some(stdout); self } /// Creates and executes a new child task. pub fn spawn<F>(self, f: F) where F: FnOnce() + Send { /* ... */ }\n} Here, the stdout configuration involves passing ownership of an io::Write , which must be transferred to the task upon construction (in spawn ). When the terminal methods of the builder require ownership, there is a basic tradeoff: If the other builder methods take/return a mutable borrow, the complex configuration case will work well, but one-liner configuration becomes impossible. If the other builder methods take/return an owned self , one-liners continue to work well but complex configuration is less convenient. Under the rubric of making easy things easy and hard things possible, all builder methods for a consuming builder should take and returned an owned self . Then client code works as follows: // One-liners\nTaskBuilder::new(\"my_task\").spawn(|| { /* ... */ }); // Complex configuration\nlet mut task = TaskBuilder::new();\ntask = task.named(\"my_task_2\"); // must re-assign to retain ownership\nif reroute { task = task.stdout(mywriter);\n}\ntask.spawn(|| { /* ... */ }); One-liners work as before, because ownership is threaded through each of the builder methods until being consumed by spawn . Complex configuration, however, is more verbose: it requires re-assigning the builder at each step.","breadcrumbs":"Consuming builders","id":"type-safety.html#consuming-builders","title":"Consuming builders"},"interoperability.html#examples":{"id":"interoperability.html#examples","title":"Examples","body":"flate2::read::GzDecoder::new flate2::write::GzEncoder::new serde_json::from_reader serde_json::to_writer","breadcrumbs":"Examples"},"flexibility.html#disadvantages-of-generics":{"body":"Code size . Specializing generic functions means that the function body is duplicated. The increase in code size must be weighed against the performance benefits of static dispatch. Homogeneous types . This is the other side of the \"precise types\" coin: if T is a type parameter, it stands for a single actual type. So for example a Vec<T> contains elements of a single concrete type (and, indeed, the vector representation is specialized to lay these out in line). Sometimes heterogeneous collections are useful; see trait objects . Signature verbosity . Heavy use of generics can make it more difficult to read and understand a function's signature.","id":"flexibility.html#disadvantages-of-generics","title":"Disadvantages of generics","breadcrumbs":"Disadvantages of generics"},"debuggability.html#debuggability":{"title":"Debuggability","id":"debuggability.html#debuggability","breadcrumbs":"Debuggability","body":""},"debuggability.html#all-public-types-implement--debug--c-debug":{"title":"All public types implement Debug (C-DEBUG)","body":"If there are exceptions, they are rare.","id":"debuggability.html#all-public-types-implement--debug--c-debug","breadcrumbs":"All public types implement Debug (C-DEBUG)"},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"id":"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control","title":"Caller decides where to copy and place data (C-CALLER-CONTROL)","breadcrumbs":"Caller decides where to copy and place data (C-CALLER-CONTROL)","body":"If a function requires ownership of an argument, it should take ownership of the argument rather than borrowing and cloning the argument. // Prefer this:\nfn foo(b: Bar) { /* use b as owned, directly */\n} // Over this:\nfn foo(b: &Bar) { let b = b.clone(); /* use b as owned after cloning */\n} If a function does not require ownership of an argument, it should take a shared or exclusive borrow of the argument rather than taking ownership and dropping the argument. // Prefer this:\nfn foo(b: &Bar) { /* use b as borrowed */\n} // Over this:\nfn foo(b: Bar) { /* use b as borrowed, it is implicitly dropped before function returns */\n} The Copy trait should only be used as a bound when absolutely needed, not as a way of signaling that copies should be cheap to make."},"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"body":"The fewer assumptions a function makes about its inputs, the more widely usable it becomes. Prefer fn foo<I: IntoIterator<Item = i64>>(iter: I) { /* ... */ } over any of fn foo(c: &[i64]) { /* ... */ }\nfn foo(c: &Vec<i64>) { /* ... */ }\nfn foo(c: &SomeOtherCollection<i64>) { /* ... */ } if the function only needs to iterate over the data. More generally, consider using generics to pinpoint the assumptions a function needs to make about its arguments.","title":"Functions minimize assumptions about parameters by using generics (C-GENERIC)","id":"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic","breadcrumbs":"Functions minimize assumptions about parameters by using generics (C-GENERIC)"},"flexibility.html#disadvantages-of-trait-objects":{"id":"flexibility.html#disadvantages-of-trait-objects","title":"Disadvantages of trait objects","breadcrumbs":"Disadvantages of trait objects","body":"No generic methods . Trait objects cannot currently provide generic methods. Dynamic dispatch and fat pointers . Trait objects inherently involve indirection and vtable dispatch, which can carry a performance penalty. No Self . Except for the method receiver argument, methods on trait objects cannot use the Self type."},"checklist.html#rust-api-guidelines-checklist":{"breadcrumbs":"Rust API Guidelines Checklist","body":"Naming (crate aligns with Rust naming conventions) [ ] Casing conforms to RFC 430 ( C-CASE ) [ ] Ad-hoc conversions follow as_ , to_ , into_ conventions ( C-CONV ) [ ] Getter names follow Rust convention ( C-GETTER ) [ ] Methods on collections that produce iterators follow iter , iter_mut , into_iter ( C-ITER ) [ ] Iterator type names match the methods that produce them ( C-ITER-TY ) [ ] Feature names are free of placeholder words ( C-FEATURE ) [ ] Names use a consistent word order ( C-WORD-ORDER ) Interoperability (crate interacts nicely with other library functionality) [ ] Types eagerly implement common traits ( C-COMMON-TRAITS ) Copy , Clone , Eq , PartialEq , Ord , PartialOrd , Hash , Debug , Display , Default [ ] Conversions use the standard traits From , AsRef , AsMut ( C-CONV-TRAITS ) [ ] Collections implement FromIterator and Extend ( C-COLLECT ) [ ] Data structures implement Serde's Serialize , Deserialize ( C-SERDE ) [ ] Types are Send and Sync where possible ( C-SEND-SYNC ) [ ] Error types are meaningful and well-behaved ( C-GOOD-ERR ) [ ] Binary number types provide Hex , Octal , Binary formatting ( C-NUM-FMT ) [ ] Generic reader/writer functions take R: Read and W: Write by value ( C-RW-VALUE ) Macros (crate presents well-behaved macros) [ ] Input syntax is evocative of the output ( C-EVOCATIVE ) [ ] Macros compose well with attributes ( C-MACRO-ATTR ) [ ] Item macros work anywhere that items are allowed ( C-ANYWHERE ) [ ] Item macros support visibility specifiers ( C-MACRO-VIS ) [ ] Type fragments are flexible ( C-MACRO-TY ) Documentation (crate is abundantly documented) [ ] Crate level docs are thorough and include examples ( C-CRATE-DOC ) [ ] All items have a rustdoc example ( C-EXAMPLE ) [ ] Examples use ? , not try! , not unwrap ( C-QUESTION-MARK ) [ ] Function docs include error, panic, and safety considerations ( C-FAILURE ) [ ] Prose contains hyperlinks to relevant things ( C-LINK ) [ ] Cargo.toml includes all common metadata ( C-METADATA ) authors, description, license, homepage, documentation, repository, readme, keywords, categories [ ] Crate sets html_root_url attribute \"https://docs.rs/CRATE/X.Y.Z\" ( C-HTML-ROOT ) [ ] Release notes document all significant changes ( C-RELNOTES ) [ ] Rustdoc does not show unhelpful implementation details ( C-HIDDEN ) Predictability (crate enables legible code that acts how it looks) [ ] Smart pointers do not add inherent methods ( C-SMART-PTR ) [ ] Conversions live on the most specific type involved ( C-CONV-SPECIFIC ) [ ] Functions with a clear receiver are methods ( C-METHOD ) [ ] Functions do not take out-parameters ( C-NO-OUT ) [ ] Operator overloads are unsurprising ( C-OVERLOAD ) [ ] Only smart pointers implement Deref and DerefMut ( C-DEREF ) [ ] Constructors are static, inherent methods ( C-CTOR ) Flexibility (crate supports diverse real-world use cases) [ ] Functions expose intermediate results to avoid duplicate work ( C-INTERMEDIATE ) [ ] Caller decides where to copy and place data ( C-CALLER-CONTROL ) [ ] Functions minimize assumptions about parameters by using generics ( C-GENERIC ) [ ] Traits are object-safe if they may be useful as a trait object ( C-OBJECT ) Type safety (crate leverages the type system effectively) [ ] Newtypes provide static distinctions ( C-NEWTYPE ) [ ] Arguments convey meaning through types, not bool or Option ( C-CUSTOM-TYPE ) [ ] Types for a set of flags are bitflags , not enums ( C-BITFLAG ) [ ] Builders enable construction of complex values ( C-BUILDER ) Dependability (crate is unlikely to do the wrong thing) [ ] Functions validate their arguments ( C-VALIDATE ) [ ] Destructors never fail ( C-DTOR-FAIL ) [ ] Destructors that may block have alternatives ( C-DTOR-BLOCK ) Debuggability (crate is conducive to easy debugging) [ ] All public types implement Debug ( C-DEBUG ) [ ] Debug representation is never empty ( C-DEBUG-NONEMPTY ) Future proofing (crate is free to improve without breaking users' code) [ ] Sealed traits protect against downstream implementations ( C-SEALED ) [ ] Structs have private fields ( C-STRUCT-PRIVATE ) [ ] Newtypes encapsulate implementation details ( C-NEWTYPE-HIDE ) [ ] Data structures do not duplicate derived trait bounds ( C-STRUCT-BOUNDS ) Necessities (to whom they matter, they really matter) [ ] Public dependencies of a stable crate are stable ( C-STABLE ) [ ] Crate and its dependencies have a permissive license ( C-PERMISSIVE )","title":"Rust API Guidelines Checklist","id":"checklist.html#rust-api-guidelines-checklist"},"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"breadcrumbs":"Conversions use the standard traits From , AsRef , AsMut (C-CONV-TRAITS)","id":"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits","body":"The following conversion traits should be implemented where it makes sense: From TryFrom AsRef AsMut The following conversion traits should never be implemented: Into TryInto These traits have a blanket impl based on From and TryFrom . Implement those instead.","title":"Conversions use the standard traits From , AsRef , AsMut (C-CONV-TRAITS)"},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"id":"predictability.html#functions-do-not-take-out-parameters-c-no-out","breadcrumbs":"Functions do not take out-parameters (C-NO-OUT)","title":"Functions do not take out-parameters (C-NO-OUT)","body":"Prefer fn foo() -> (Bar, Bar) over fn foo(output: &mut Bar) -> Bar for returning multiple Bar values. Compound return types like tuples and structs are efficiently compiled and do not require heap allocation. If a function needs to return multiple values, it should do so via one of these types. The primary exception: sometimes a function is meant to modify data that the caller already owns, for example to re-use a buffer: fn read(&mut self, buf: &mut [u8]) -> io::Result<usize>"},"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"title":"Only smart pointers implement Deref and DerefMut (C-DEREF)","id":"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref","breadcrumbs":"Only smart pointers implement Deref and DerefMut (C-DEREF)","body":"The Deref traits are used implicitly by the compiler in many circumstances, and interact with method resolution. The relevant rules are designed specifically to accommodate smart pointers, and so the traits should be used only for that purpose."},"type-safety.html#type-safety":{"breadcrumbs":"Type safety","id":"type-safety.html#type-safety","title":"Type safety","body":""},"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"title":"Prose contains hyperlinks to relevant things (C-LINK)","body":"Links to methods within the same type usually look like this: [`serialize_struct`]: #method.serialize_struct Links to other types usually look like this: [`Deserialize`]: trait.Deserialize.html Links may also point to a parent or child module: [`Value`]: ../enum.Value.html\n[`DeserializeOwned`]: de/trait.DeserializeOwned.html This guideline is officially recommended by RFC 1574 under the heading \"Link all the things\" .","breadcrumbs":"Prose contains hyperlinks to relevant things (C-LINK)","id":"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link"},"predictability.html#examples-from-the-standard-library":{"body":"std::io::Error::new is the commonly used constructor for an IO error. std::io::Error::from_raw_os_error is a conversion constructor based on an error code received from the operating system. Box::new creates a new container type, taking a single argument. File::open opens a file resource. Mmap::open_with_offset opens a memory-mapped file, with additional options.","id":"predictability.html#examples-from-the-standard-library","title":"Examples from the standard library","breadcrumbs":"Examples from the standard library"},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"id":"interoperability.html#types-eagerly-implement-common-traits-c-common-traits","title":"Types eagerly implement common traits (C-COMMON-TRAITS)","breadcrumbs":"Types eagerly implement common traits (C-COMMON-TRAITS)","body":"Rust's trait system does not allow orphans : roughly, every impl must live either in the crate that defines the trait or the implementing type. Consequently, crates that define new types should eagerly implement all applicable, common traits. To see why, consider the following situation: Crate std defines trait Display . Crate url defines type Url , without implementing Display . Crate webapp imports from both std and url , There is no way for webapp to add Display to url , since it defines neither. (Note: the newtype pattern can provide an efficient, but inconvenient workaround.) The most important common traits to implement from std are: Copy Clone Eq PartialEq Ord PartialOrd Hash Debug Display Default Note that it is common and expected for types to implement both Default and an empty new constructor. new is the constructor convention in Rust, and users expect it to exist, so if it is reasonable for the basic constructor to take no arguments, then it should, even if it is functionally identical to default ."},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"breadcrumbs":"Types for a set of flags are bitflags , not enums (C-BITFLAG)","id":"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag","title":"Types for a set of flags are bitflags , not enums (C-BITFLAG)","body":"Rust supports enum types with explicitly specified discriminants: enum Color { Red = 0xff0000, Green = 0x00ff00, Blue = 0x0000ff,\n} Custom discriminants are useful when an enum type needs to be serialized to an integer value compatibly with some other system/language. They support \"typesafe\" APIs: by taking a Color , rather than an integer, a function is guaranteed to get well-formed inputs, even if it later views those inputs as integers. An enum allows an API to request exactly one choice from among many. Sometimes an API's input is instead the presence or absence of a set of flags. In C code, this is often done by having each flag correspond to a particular bit, allowing a single integer to represent, say, 32 or 64 flags. Rust's bitflags crate provides a typesafe representation of this pattern. #[macro_use]\nextern crate bitflags; bitflags! { struct Flags: u32 { const FLAG_A = 0b00000001; const FLAG_B = 0b00000010; const FLAG_C = 0b00000100; }\n} fn f(settings: Flags) { if settings.contains(Flags::FLAG_A) { println!(\"doing thing A\"); } if settings.contains(Flags::FLAG_B) { println!(\"doing thing B\"); } if settings.contains(Flags::FLAG_C) { println!(\"doing thing C\"); }\n} fn main() { f(Flags::FLAG_A | Flags::FLAG_C);\n}"},"naming.html#examples-from-the-standard-library":{"body":"Vec::iter returns Iter Vec::iter_mut returns IterMut Vec::into_iter returns IntoIter BTreeMap::keys returns Keys BTreeMap::values returns Values","id":"naming.html#examples-from-the-standard-library","breadcrumbs":"Examples from the standard library","title":"Examples from the standard library"},"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"breadcrumbs":"Destructors that may block have alternatives (C-DTOR-BLOCK)","title":"Destructors that may block have alternatives (C-DTOR-BLOCK)","body":"Similarly, destructors should not invoke blocking operations, which can make debugging much more difficult. Again, consider providing a separate method for preparing for an infallible, nonblocking teardown.","id":"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block"},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"breadcrumbs":"Constructors are static, inherent methods (C-CTOR)","id":"predictability.html#constructors-are-static-inherent-methods-c-ctor","body":"In Rust, \"constructors\" are just a convention. There are a variety of conventions around constructor naming, and the distinctions are often subtle. A constructor in its most basic form is a new method with no arguments. impl<T> Example<T> { pub fn new() -> Example<T> { /* ... */ }\n} Constructors are static (no self ) inherent methods for the type that they construct. Combined with the practice of fully importing type names, this convention leads to informative but concise construction: use example::Example; // Construct a new Example.\nlet ex = Example::new(); The name new should generally be used for the primary method of instantiating a type. Sometimes it takes no arguments, as in the examples above. Sometimes it does take arguments, like Box::new which is passed the value to place in the Box . Some types' constructors, most notably I/O resource types, use distinct naming conventions for their constructors, as in File::open , Mmap::open , TcpStream::connect , and UpdSocket::bind . In these cases names are chosen as appropriate for the domain. Often there are multiple ways to construct a type. It's common in these cases for secondary constructors to be suffixed _with_foo , as in Mmap::open_with_offset . If your type has a multiplicity of construction options though, consider the builder pattern ( C-BUILDER ) instead. Some constructors are \"conversion constructors\", methods that create a new type from an existing value of a different type. These typically have names begining with from_ as in std::io::Error::from_raw_os_error . Note also though the From trait ( C-CONV-TRAITS ), which is quite similar. There are three distinctions between a from_ -prefixed conversion constructor and a From<T> impl. A from_ constructor can be unsafe; a From impl cannot. One example of this is Box::from_raw . A from_ constructor can accept additional arguments to disambiguate the meaning of the source data, as in u64::from_str_radix . A From impl is only appropriate when the source data type is sufficient to determine the encoding of the output data type. When the input is just a bag of bits like in u64::from_be or String::from_utf8 , the conversion constructor name is able to identify their meaning. Note that it is common and expected for types to implement both Default and a new constructor. For types that have both, they should have the same behavior. Either one may be implemented in terms of the other.","title":"Constructors are static, inherent methods (C-CTOR)"},"future-proofing.html#examples":{"breadcrumbs":"Examples","id":"future-proofing.html#examples","title":"Examples","body":"serde_json::value::Index byteorder::ByteOrder"},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"title":"Public dependencies of a stable crate are stable (C-STABLE)","body":"A crate cannot be stable (>=1.0.0) without all of its public dependencies being stable. Public dependencies are crates from which types are used in the public API of the current crate. pub fn do_my_thing(arg: other_crate::TheirThing) { /* ... */ } A crate containing this function cannot be stable unless other_crate is also stable. Be careful because public dependencies can sneak in at unexpected places. pub struct Error { private: ErrorImpl,\n} enum ErrorImpl { Io(io::Error), // Should be okay even if other_crate isn't // stable, because ErrorImpl is private. Dep(other_crate::Error),\n} // Oh no! This puts other_crate into the public API\n// of the current crate.\nimpl From<other_crate::Error> for Error { fn from(err: other_crate::Error) -> Self { Error { private: ErrorImpl::Dep(err) } }\n}","id":"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable","breadcrumbs":"Public dependencies of a stable crate are stable (C-STABLE)"},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"body":"Like it or not, example code is often copied verbatim by users. Unwrapping an error should be a conscious decision that the user needs to make. A common way of structuring fallible example code is the following. The lines beginning with # are compiled by cargo test when building the example but will not appear in user-visible rustdoc. /// ```rust\n/// # use std::error::Error;\n/// #\n/// # fn try_main() -> Result<(), Box<Error>> {\n/// your;\n/// example?;\n/// code;\n/// #\n/// # Ok(())\n/// # }\n/// #\n/// # fn main() {\n/// # try_main().unwrap();\n/// # }\n/// ```","id":"documentation.html#examples-use----not--try--not--unwrap--c-question-mark","title":"Examples use ? , not try! , not unwrap (C-QUESTION-MARK)","breadcrumbs":"Examples use ? , not try! , not unwrap (C-QUESTION-MARK)"},"debuggability.html#debug--representation-is-never-empty-c-debug-nonempty":{"breadcrumbs":"Debug representation is never empty (C-DEBUG-NONEMPTY)","id":"debuggability.html#debug--representation-is-never-empty-c-debug-nonempty","title":"Debug representation is never empty (C-DEBUG-NONEMPTY)","body":"Even for conceptually empty values, the Debug representation should never be empty. let empty_str = \"\";\nassert_eq!(format!(\"{:?}\", empty_str), \"\\\"\\\"\"); let empty_vec = Vec::<bool>::new();\nassert_eq!(format!(\"{:?}\", empty_vec), \"[]\");"},"predictability.html#predictability":{"title":"Predictability","body":"","id":"predictability.html#predictability","breadcrumbs":"Predictability"},"flexibility.html#examples-from-the-standard-library":{"id":"flexibility.html#examples-from-the-standard-library","body":"The io::Read and io::Write traits are often used as objects. The Iterator trait has several generic methods marked with where Self: Sized to retain the ability to use Iterator as an object.","breadcrumbs":"Examples from the standard library","title":"Examples from the standard library"},"necessities.html#necessities":{"id":"necessities.html#necessities","body":"","title":"Necessities","breadcrumbs":"Necessities"},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"breadcrumbs":"Data structures implement Serde's Serialize , Deserialize (C-SERDE)","title":"Data structures implement Serde's Serialize , Deserialize (C-SERDE)","id":"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde","body":"Types that play the role of a data structure should implement Serialize and Deserialize . There is a continuum of types between things that are clearly a data structure and things that are clearly not, with gray area in between. LinkedHashMap and IpAddr are data structures. It would be completely reasonable for somebody to want to read in a LinkedHashMap or IpAddr from a JSON file, or send one over IPC to another process. LittleEndian is not a data structure. It is a marker used by the byteorder crate to optimize at compile time for bytes in a particular order, and in fact an instance of LittleEndian can never exist at runtime. So these are clear-cut examples; the #rust or #serde IRC channels can help assess more ambiguous cases if necessary. If a crate does not already depend on Serde for other reasons, it may wish to gate Serde impls behind a Cargo cfg. This way downstream libraries only need to pay the cost of compiling Serde if they need those impls to exist. For consistency with other Serde-based libraries, the name of the Cargo cfg should be simply \"serde\" . Do not use a different name for the cfg like \"serde_impls\" or \"serde_serialization\" . The canonical implementation looks like this when not using derive: [dependencies]\nserde = { version = \"1.0\", optional = true } #[cfg(feature = \"serde\")]\nextern crate serde; struct T { /* ... */ } #[cfg(feature = \"serde\")]\nimpl Serialize for T { /* ... */ } #[cfg(feature = \"serde\")]\nimpl<'de> Deserialize<'de> for T { /* ... */ } And when using derive: [dependencies]\nserde = { version = \"1.0\", optional = true, features = [\"derive\"] } #[cfg(feature = \"serde\")]\n#[macro_use]\nextern crate serde; #[cfg_attr(feature = \"serde\", derive(Serialize, Deserialize))]\nstruct T { /* ... */ }"},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"id":"documentation.html#release-notes-document-all-significant-changes-c-relnotes","title":"Release notes document all significant changes (C-RELNOTES)","body":"Users of the crate can read the release notes to find a summary of what changed in each published release of the crate. A link to the release notes, or the notes themselves, should be included in the crate-level documentation and/or the repository linked in Cargo.toml. Breaking changes (as defined in RFC 1105 ) should be clearly identified in the release notes. If using Git to track the source of a crate, every release published to crates.io should have a corresponding tag identifying the commit that was published. A similar process should be used for non-Git VCS tools as well. # Tag the current commit\nGIT_COMMITTER_DATE=$(git log -n1 --pretty=%aD) git tag -a -m \"Release 0.3.0\" 0.3.0\ngit push --tags Annotated tags are preferred because some Git commands ignore unannotated tags if any annotated tags exist.","breadcrumbs":"Release notes document all significant changes (C-RELNOTES)"},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"id":"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type","breadcrumbs":"Arguments convey meaning through types, not bool or Option (C-CUSTOM-TYPE)","title":"Arguments convey meaning through types, not bool or Option (C-CUSTOM-TYPE)","body":"Prefer let w = Widget::new(Small, Round) over let w = Widget::new(true, false) Core types like bool , u8 and Option have many possible interpretations. Use a deliberate type (whether enum, struct, or tuple) to convey interpretation and invariants. In the above example, it is not immediately clear what true and false are conveying without looking up the argument names, but Small and Round are more suggestive. Using custom types makes it easier to expand the options later on, for example by adding an ExtraLarge variant. See the newtype pattern ( C-NEWTYPE ) for a no-cost way to wrap existing types with a distinguished name."},"naming.html#naming":{"id":"naming.html#naming","title":"Naming","body":"","breadcrumbs":"Naming"},"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"id":"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync","title":"Types are Send and Sync where possible (C-SEND-SYNC)","breadcrumbs":"Types are Send and Sync where possible (C-SEND-SYNC)","body":"Send and Sync are automatically implemented when the compiler determines it is appropriate. In types that manipulate raw pointers, be vigilant that the Send and Sync status of your type accurately reflects its thread safety characteristics. Tests like the following can help catch unintentional regressions in whether the type implements Send or Sync . #[test]\nfn test_send() { fn assert_send<T: Send>() {} assert_send::<MyStrangeType>();\n} #[test]\nfn test_sync() { fn assert_sync<T: Sync>() {} assert_sync::<MyStrangeType>();\n}"},"flexibility.html#functions-expose-intermediate-results-to-avoid-duplicate-work-c-intermediate":{"breadcrumbs":"Functions expose intermediate results to avoid duplicate work (C-INTERMEDIATE)","id":"flexibility.html#functions-expose-intermediate-results-to-avoid-duplicate-work-c-intermediate","title":"Functions expose intermediate results to avoid duplicate work (C-INTERMEDIATE)","body":"Many functions that answer a question also compute interesting related data. If this data is potentially of interest to the client, consider exposing it in the API."},"dependability.html#static-enforcement":{"id":"dependability.html#static-enforcement","breadcrumbs":"Static enforcement","title":"Static enforcement","body":"Choose an argument type that rules out bad inputs. For example, prefer fn foo(a: Ascii) { /* ... */ } over fn foo(a: u8) { /* ... */ } where Ascii is a wrapper around u8 that guarantees the highest bit is zero; see newtype patterns ( C-NEWTYPE ) for more details on creating typesafe wrappers. Static enforcement usually comes at little run-time cost: it pushes the costs to the boundaries (e.g. when a u8 is first converted into an Ascii ). It also catches bugs early, during compilation, rather than through run-time failures. On the other hand, some properties are difficult or impossible to express using types."},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"title":"Crate sets html_root_url attribute (C-HTML-ROOT)","id":"documentation.html#crate-sets-html_root_url-attribute-c-html-root","breadcrumbs":"Crate sets html_root_url attribute (C-HTML-ROOT)","body":"It should point to \"https://docs.rs/CRATE/MAJOR.MINOR.PATCH\" , assuming the crate uses docs.rs for its primary API documentation. The html_root_url attribute tells rustdoc how to create URLs to items in the crate when compiling downstream crates. Without it, links in the documentation of crates that depend on your crate will be incorrect. #![doc(html_root_url = \"https://docs.rs/log/0.3.8\")] Because this URL contains an exact version number, it must be kept in sync with the version number in Cargo.toml . The version-sync crate can help with this by letting you add an integration test that fails if the html_root_url version number is out of sync with the crate version. If you do not like that mechanism, it is recommended to add a comment to the Cargo.toml version key reminding yourself to keep the two updated together, like: version = \"0.3.8\" # remember to update html_root_url For documentation hosted outside of docs.rs, the value for html_root_url is correct if appending the crate name + index.html takes you to the documentation of the crate's root module. For example if the documentation of the root module is located at \"https://api.rocket.rs/rocket/index.html\" then the html_root_url would be \"https://api.rocket.rs\" ."},"macros.html#type-fragments-are-flexible-c-macro-ty":{"title":"Type fragments are flexible (C-MACRO-TY)","breadcrumbs":"Type fragments are flexible (C-MACRO-TY)","id":"macros.html#type-fragments-are-flexible-c-macro-ty","body":"If your macro accepts a type fragment like $t:ty in the input, it should be usable with all of the following: Primitives: u8 , &str Relative paths: m::Data Absolute paths: ::base::Data Upward relative paths: super::Data Generics: Vec<String> As a simple example of how things can go wrong, this macro works great with primitives and absolute paths but fails with relative paths. macro_rules! broken { ($m:ident => $t:ty) => { pub mod $m { pub struct Wrapper($t); } }\n} broken!(a => u8); // okay broken!(b => ::std::marker::PhantomData<()>); // okay struct S;\nbroken!(c => S); // fails to compile"},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"body":"When in doubt, prefer to_ / as_ / into_ to from_ , because they are more ergonomic to use (and can be chained with other methods). For many conversions between two types, one of the types is clearly more \"specific\": it provides some additional invariant or interpretation that is not present in the other type. For example, str is more specific than &[u8] , since it is a UTF-8 encoded sequence of bytes. Conversions should live with the more specific of the involved types. Thus, str provides both the as_bytes method and the from_utf8 constructor for converting to and from &[u8] values. Besides being intuitive, this convention avoids polluting concrete types like &[u8] with endless conversion methods.","title":"Conversions live on the most specific type involved (C-CONV-SPECIFIC)","breadcrumbs":"Conversions live on the most specific type involved (C-CONV-SPECIFIC)","id":"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific"},"naming.html#names-use-a-consistent-word-order-c-word-order":{"breadcrumbs":"Names use a consistent word order (C-WORD-ORDER)","body":"Here are some error types from the standard library: JoinPathsError ParseBoolError ParseCharError ParseFloatError ParseIntError RecvTimeoutError StripPrefixError All of these use verb-object-error word order. If we were adding an error to represent an address failing to parse, for consistency we would want to name it in verb-object-error order like ParseAddrError rather than AddrParseError . The particular choice of word order is not important, but pay attention to consistency within the crate and consistency with similar functionality in the standard library.","id":"naming.html#names-use-a-consistent-word-order-c-word-order","title":"Names use a consistent word order (C-WORD-ORDER)"},"macros.html#macros":{"title":"Macros","id":"macros.html#macros","body":"","breadcrumbs":"Macros"},"documentation.html#documentation":{"breadcrumbs":"Documentation","body":"","id":"documentation.html#documentation","title":"Documentation"},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"body":"An error type is any type E used in a Result<T, E> returned by any public function of your crate. Error types should always implement the std::error::Error trait which is the mechanism by which error handling libraries like error-chain abstract over different types of errors, and which allows the error to be used as the cause() of another error. Additionally, error types should implement the Send and Sync traits. An error that is not Send cannot be returned by a thread run with thread::spawn . An error that is not Sync cannot be passed across threads using an Arc . These are common requirements for basic error handling in a multithreaded application. Send and Sync are also important for being able to package a custom error into an IO error using std::io::Error::new , which requires a trait bound of Error + Send + Sync . One place to be vigilant about this guideline is in functions that return Error trait objects, for example reqwest::Error::get_ref . Typically Error + Send + Sync + 'static will be the most useful for callers. The addition of 'static allows the trait object to be used with Error::downcast_ref . Never use () as an error type, even where there is no useful additional information for the error to carry. () does not implement Error so it cannot be used with error handling libraries like error-chain . () does not implement Display so a user would need to write an error message of their own if they want to fail because of the error. () has an unhelpful Debug representation for users that decide to unwrap() the error. It would not be semantically meaningful for a downstream library to implement From<()> for their error type, so () as an error type cannot be used with the ? operator. Instead, define a meaningful error type specific to your crate or to the individual function. Provide appropriate Error and Display impls. If there is no useful information for the error to carry, it can be implemented as a unit struct. use std::error::Error;\nuse std::fmt::Display; // Instead of this...\nfn do_the_thing() -> Result<Wow, ()> // Prefer this...\nfn do_the_thing() -> Result<Wow, DoError> #[derive(Debug)]\nstruct DoError; impl Display for DoError { /* ... */ }\nimpl Error for DoError { /* ... */ } The error message given by the Display representation of an error type should be lowercase without trailing punctuation, and typically concise. The message given by Error::description() does not matter. Users should always use Display instead of description() to print the error. A low-effort description like \"JSON error\" is sufficient.","id":"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err","title":"Error types are meaningful and well-behaved (C-GOOD-ERR)","breadcrumbs":"Error types are meaningful and well-behaved (C-GOOD-ERR)"},"dependability.html#dynamic-enforcement":{"body":"Validate the input as it is processed (or ahead of time, if necessary). Dynamic checking is often easier to implement than static checking, but has several downsides: Runtime overhead (unless checking can be done as part of processing the input). Delayed detection of bugs. Introduces failure cases, either via panic! or Result / Option types, which must then be dealt with by client code. Dynamic enforcement with debug_assert! Same as dynamic enforcement, but with the possibility of easily turning off expensive checks for production builds. Dynamic enforcement with opt-out Same as dynamic enforcement, but adds sibling functions that opt out of the checking. The convention is to mark these opt-out functions with a suffix like _unchecked or by placing them in a raw submodule. The unchecked functions can be used judiciously in cases where (1) performance dictates avoiding checks and (2) the client is otherwise confident that the inputs are valid.","title":"Dynamic enforcement","id":"dependability.html#dynamic-enforcement","breadcrumbs":"Dynamic enforcement"},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"title":"Functions with a clear receiver are methods (C-METHOD)","id":"predictability.html#functions-with-a-clear-receiver-are-methods-c-method","body":"Prefer impl Foo { pub fn frob(&self, w: widget) { /* ... */ }\n} over pub fn frob(foo: &Foo, w: widget) { /* ... */ } for any operation that is clearly associated with a particular type. Methods have numerous advantages over functions: They do not need to be imported or qualified to be used: all you need is a value of the appropriate type. Their invocation performs autoborrowing (including mutable borrows). They make it easy to answer the question \"what can I do with a value of type T \" (especially when using rustdoc). They provide self notation, which is more concise and often more clearly conveys ownership distinctions.","breadcrumbs":"Functions with a clear receiver are methods (C-METHOD)"},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"id":"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds","breadcrumbs":"Data structures do not duplicate derived trait bounds (C-STRUCT-BOUNDS)","title":"Data structures do not duplicate derived trait bounds (C-STRUCT-BOUNDS)","body":"Generic data structures should not use trait bounds that can be derived or do not otherwise add semantic value. Each trait in the derive attribute will be expanded into a separate impl block that only applies to generic arguments that implement that trait. // Prefer this:\n#[derive(Clone, Debug, PartialEq)]\nstruct Good<T> { /* ... */ } // Over this:\n#[derive(Clone, Debug, PartialEq)]\nstruct Bad<T: Clone + Debug + PartialEq> { /* ... */ } Duplicating derived traits as bounds on Bad is unnecessary and a backwards-compatibiliity hazard. To illustrate this point, consider deriving PartialOrd on the structures in the previous example: // Non-breaking change:\n#[derive(Clone, Debug, PartialEq, PartialOrd)]\nstruct Good<T> { /* ... */ } // Breaking change:\n#[derive(Clone, Debug, PartialEq, PartialOrd)]\nstruct Bad<T: Clone + Debug + PartialEq + PartialOrd> { /* ... */ } Generally speaking, adding a trait bound to a data structure is a breaking change because every consumer of that structure will need to start satisfying the additional bound. Deriving more traits from the standard library using the derive attribute is not a breaking change. The following traits should never be used in bounds on data structures: Clone PartialEq PartialOrd Debug Display Default Serialize Deserialize DeserializeOwned There is a grey area around other non-derivable trait bounds that are not strictly required by the structure definition, like Read or Write . They may communicate the intended behavior of the type better in its definition but also limits future extensibility. Including semantically useful trait bounds on data structures is still less problematic than including derivable traits as bounds."},"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"id":"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr","title":"Smart pointers do not add inherent methods (C-SMART-PTR)","breadcrumbs":"Smart pointers do not add inherent methods (C-SMART-PTR)","body":"For example, this is why the Box::into_raw function is defined the way it is. impl<T> Box<T> where T: ?Sized { fn into_raw(b: Box<T>) -> *mut T { /* ... */ }\n} let boxed_str: Box<str> = /* ... */;\nlet ptr = Box::into_raw(boxed_str); If this were defined as an inherent method instead, it would be confusing at the call site whether the method being called is a method on Box<T> or a method on T . impl<T> Box<T> where T: ?Sized { // Do not do this. fn into_raw(self) -> *mut T { /* ... */ }\n} let boxed_str: Box<str> = /* ... */; // This is a method on str accessed through the smart pointer Deref impl.\nboxed_str.chars() // This is a method on Box<str>...?\nboxed_str.into_raw()"},"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"body":"Follow Rust syntax for visibility of items produced by a macro. Private by default, public if pub is specified. bitflags! { struct PrivateFlags: u8 { const A = 0b0001; const B = 0b0010; }\n} bitflags! { pub struct PublicFlags: u8 { const C = 0b0100; const D = 0b1000; }\n}","title":"Item macros support visibility specifiers (C-MACRO-VIS)","id":"macros.html#item-macros-support-visibility-specifiers-c-macro-vis","breadcrumbs":"Item macros support visibility specifiers (C-MACRO-VIS)"},"future-proofing.html#exceptions":{"id":"future-proofing.html#exceptions","body":"There are three exceptions where trait bounds on structures are required: The data structure refers to an associated type on the trait. The bound is ?Sized . The data structure has a Drop impl that requires trait bounds. Rust currently requires all trait bounds on the Drop impl are also present on the data structure.","title":"Exceptions","breadcrumbs":"Exceptions"},"predictability.html#operator-overloads-are-unsurprising-c-overload":{"title":"Operator overloads are unsurprising (C-OVERLOAD)","body":"Operators with built in syntax ( * , | , and so on) can be provided for a type by implementing the traits in std::ops . These operators come with strong expectations: implement Mul only for an operation that bears some resemblance to multiplication (and shares the expected properties, e.g. associativity), and so on for the other traits.","id":"predictability.html#operator-overloads-are-unsurprising-c-overload","breadcrumbs":"Operator overloads are unsurprising (C-OVERLOAD)"},"flexibility.html#flexibility":{"id":"flexibility.html#flexibility","body":"","breadcrumbs":"Flexibility","title":"Flexibility"},"dependability.html#destructors-never-fail-c-dtor-fail":{"id":"dependability.html#destructors-never-fail-c-dtor-fail","body":"Destructors are executed on task failure, and in that context a failing destructor causes the program to abort. Instead of failing in a destructor, provide a separate method for checking for clean teardown, e.g. a close method, that returns a Result to signal problems.","title":"Destructors never fail (C-DTOR-FAIL)","breadcrumbs":"Destructors never fail (C-DTOR-FAIL)"},"dependability.html#dependability":{"title":"Dependability","id":"dependability.html#dependability","breadcrumbs":"Dependability","body":""},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"breadcrumbs":"Newtypes encapsulate implementation details (C-NEWTYPE-HIDE)","title":"Newtypes encapsulate implementation details (C-NEWTYPE-HIDE)","id":"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide","body":"A newtype can be used to hide representation details while making precise promises to the client. For example, consider a function my_transform that returns a compound iterator type. use std::iter::{Enumerate, Skip}; pub fn my_transform<I: Iterator>(input: I) -> Enumerate<Skip<I>> { input.skip(3).enumerate()\n} We wish to hide this type from the client, so that the client's view of the return type is roughly Iterator<Item = (usize, T)> . We can do so using the newtype pattern: use std::iter::{Enumerate, Skip}; pub struct MyTransformResult<I>(Enumerate<Skip<I>>); impl<I: Iterator> Iterator for MyTransformResult<I> { type Item = (usize, I::Item); fn next(&mut self) -> Option<Self::Item> { self.0.next() }\n} pub fn my_transform<I: Iterator>(input: I) -> MyTransformResult<I> { MyTransformResult(input.skip(3).enumerate())\n} Aside from simplifying the signature, this use of newtypes allows us to promise less to the client. The client does not know how the result iterator is constructed or represented, which means the representation can change in the future without breaking client code. In the future the same thing can be accomplished more concisely with the impl Trait feature but this is currently unstable. #![feature(conservative_impl_trait)] pub fn my_transform<I: Iterator>(input: I) -> impl Iterator<Item = (usize, I::Item)> { input.skip(3).enumerate()\n}"},"flexibility.html#advantages-of-trait-objects":{"breadcrumbs":"Advantages of trait objects","body":"Heterogeneity . When you need it, you really need it. Code size . Unlike generics, trait objects do not generate specialized (monomorphized) versions of code, which can greatly reduce code size.","title":"Advantages of trait objects","id":"flexibility.html#advantages-of-trait-objects"},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"id":"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv","body":"Conversions should be provided as methods, with names prefixed as follows: Prefix Cost Ownership as_ Free borrowed -> borrowed to_ Expensive borrowed -> borrowedborrowed -> owned (non-Copy types)owned -> owned (Copy types) into_ Variable owned -> owned (non-Copy types) For example: str::as_bytes() gives a view of a str as a slice of UTF-8 bytes, which is free. The input is a borrowed &str and the output is a borrowed &[u8] . Path::to_str performs an expensive UTF-8 check on the bytes of an operating system path. The input and output are both borrowed. It would not be correct to call this as_str because this method has nontrivial cost at runtime. str::to_lowercase() produces the Unicode-correct lowercase equivalent of a str , which involves iterating through characters of the string and may require memory allocation. The input is a borrowed &str and the output is an owned String . f64::to_radians() converts a floating point quantity from degrees to radians. The input is f64 . Passing a reference &f64 is not warranted because f64 is cheap to copy. Calling the function into_radians would be misleading because the input is not consumed. String::into_bytes() extracts the underlying Vec<u8> of a String , which is free. It takes ownership of a String and returns an owned Vec<u8> . BufReader::into_inner() takes ownership of a buffered reader and extracts out the underlying reader, which is free. Data in the buffer is discarded. BufWriter::into_inner() takes ownership of a buffered writer and extracts out the underlying writer, which requires a potentially expensive flush of any buffered data. Conversions prefixed as_ and into_ typically decrease abstraction , either exposing a view into the underlying representation ( as ) or deconstructing data into its underlying representation ( into ). Conversions prefixed to_ , on the other hand, typically stay at the same level of abstraction but do some work to change one representation into another. When a type wraps a single value to associate it with higher-level semantics, access to the wrapped value should be provided by an into_inner() method. This applies to wrappers that provide buffering like BufReader , encoding or decoding like GzDecoder , atomic access like AtomicBool , or any similar semantics. If the mut qualifier in the name of a conversion method constitutes part of the return type, it should appear as it would appear in the type. For example Vec::as_mut_slice returns a mut slice; it does what it says. This name is preferred over as_slice_mut . // Return type is a mut slice.\nfn as_mut_slice(&mut self) -> &mut [T]; More examples from the standard library Result::as_ref RefCell::as_ptr slice::to_vec Option::into_iter","breadcrumbs":"Ad-hoc conversions follow as_ , to_ , into_ conventions (C-CONV)","title":"Ad-hoc conversions follow as_ , to_ , into_ conventions (C-CONV)"},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"body":"The [package] section of Cargo.toml should include the following values: authors description license repository readme keywords categories In addition, there are two optional metadata fields: documentation homepage By default, crates.io links to documentation for the crate on docs.rs . The documentation metadata only needs to be set if the documentation is hosted somewhere other than docs.rs , for example because the crate links against a shared library that is not available in the build environment of docs.rs . The homepage metadata should only be set if there is a unique website for the crate other than the source repository or API documentation. Do not make homepage redundant with either the documentation or repository values. For example, serde sets homepage to https://serde.rs , a dedicated website.","id":"documentation.html#cargotoml-includes-all-common-metadata-c-metadata","breadcrumbs":"Cargo.toml includes all common metadata (C-METADATA)","title":"Cargo.toml includes all common metadata (C-METADATA)"},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"id":"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter","breadcrumbs":"Methods on collections that produce iterators follow iter , iter_mut , into_iter (C-ITER)","title":"Methods on collections that produce iterators follow iter , iter_mut , into_iter (C-ITER)","body":"Per RFC 199 . For a container with elements of type U , iterator methods should be named: fn iter(&self) -> Iter // Iter implements Iterator<Item = &U>\nfn iter_mut(&mut self) -> IterMut // IterMut implements Iterator<Item = &mut U>\nfn into_iter(self) -> IntoIter // IntoIter implements Iterator<Item = U> This guideline applies to data structures that are conceptually homogeneous collections. As a counterexample, the str type is slice of bytes that are guaranteed to be valid UTF-8. This is conceptually more nuanced than a homogeneous collection so rather than providing the iter / iter_mut / into_iter group of iterator methods, it provides str::bytes to iterate as bytes and str::chars to iterate as chars. This guideline applies to methods only, not functions. For example percent_encode from the url crate returns an iterator over percent-encoded string fragments. There would be no clarity to be had by using an iter / iter_mut / into_iter convention."},"future-proofing.html#structs-have-private-fields-c-struct-private":{"id":"future-proofing.html#structs-have-private-fields-c-struct-private","breadcrumbs":"Structs have private fields (C-STRUCT-PRIVATE)","title":"Structs have private fields (C-STRUCT-PRIVATE)","body":"Making a field public is a strong commitment: it pins down a representation choice, and prevents the type from providing any validation or maintaining any invariants on the contents of the field, since clients can mutate it arbitrarily. Public fields are most appropriate for struct types in the C spirit: compound, passive data structures. Otherwise, consider providing getter/setter methods and hiding fields instead."},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"id":"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object","breadcrumbs":"Traits are object-safe if they may be useful as a trait object (C-OBJECT)","body":"Trait objects have some significant limitations: methods invoked through a trait object cannot use generics, and cannot use Self except in receiver position. When designing a trait, decide early on whether the trait will be used as an object or as a bound on generics. If a trait is meant to be used as an object, its methods should take and return trait objects rather than use generics. A where clause of Self: Sized may be used to exclude specific methods from the trait's object. The following trait is not object-safe due to the generic method. trait MyTrait { fn object_safe(&self, i: i32); fn not_object_safe<T>(&self, t: T);\n} Adding a requirement of Self: Sized to the generic method excludes it from the trait object and makes the trait object-safe. trait MyTrait { fn object_safe(&self, i: i32); fn not_object_safe<T>(&self, t: T) where Self: Sized;\n}","title":"Traits are object-safe if they may be useful as a trait object (C-OBJECT)"},"interoperability.html#collections-implement--fromiterator--and--extend--c-collect":{"title":"Collections implement FromIterator and Extend (C-COLLECT)","breadcrumbs":"Collections implement FromIterator and Extend (C-COLLECT)","id":"interoperability.html#collections-implement--fromiterator--and--extend--c-collect","body":"FromIterator and Extend enable collections to be used conveniently with the following iterator methods: Iterator::collect Iterator::partition Iterator::unzip FromIterator is for creating a new collection containing items from an iterator, and Extend is for adding items from an iterator onto an existing collection."},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"title":"Crate and its dependencies have a permissive license (C-PERMISSIVE)","breadcrumbs":"Crate and its dependencies have a permissive license (C-PERMISSIVE)","id":"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive","body":"The software produced by the Rust project is dual-licensed, under either the MIT or Apache 2.0 licenses. Crates that simply need the maximum compatibility with the Rust ecosystem are recommended to do the same, in the manner described herein. Other options are described below. These API guidelines do not provide a detailed explanation of Rust's license, but there is a small amount said in the Rust FAQ . These guidelines are concerned with matters of interoperability with Rust, and are not comprehensive over licensing options. To apply the Rust license to your project, define the license field in your Cargo.toml as: [package]\nname = \"...\"\nversion = \"...\"\nauthors = [\"...\"]\nlicense = \"MIT OR Apache-2.0\" And toward the end of your README.md: ## License Licensed under either of * Apache License, Version 2.0 ([LICENSE-APACHE](LICENSE-APACHE) or http://www.apache.org/licenses/LICENSE-2.0) * MIT license ([LICENSE-MIT](LICENSE-MIT) or http://opensource.org/licenses/MIT) at your option. ## Contribution Unless you explicitly state otherwise, any contribution intentionally submitted\nfor inclusion in the work by you, as defined in the Apache-2.0 license, shall be\ndual licensed as above, without any additional terms or conditions. Besides the dual MIT/Apache-2.0 license, another common licensing approach used by Rust crate authors is to apply a single permissive license such as MIT or BSD. This license scheme is also entirely compatible with Rust's, because it imposes the minimal restrictions of Rust's MIT license. Crates that desire perfect license compatibility with Rust are not recommended to choose only the Apache license. The Apache license, though it is a permissive license, imposes restrictions beyond the MIT and BSD licenses that can discourage or prevent their use in some scenarios, so Apache-only software cannot be used in some situations where most of the Rust runtime stack can. The license of a crate's dependencies can affect the restrictions on distribution of the crate itself, so a permissively-licensed crate should generally only depend on permissively-licensed crates."},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"title":"Rustdoc does not show unhelpful implementation details (C-HIDDEN)","id":"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden","body":"Rustdoc is supposed to include everything users need to use the crate fully and nothing more. It is fine to explain relevant implementation details in prose but they should not be real entries in the documentation. Especially be selective about which impls are visible in rustdoc -- all the ones that users would need for using the crate fully, but no others. In the following code the rustdoc of PublicError by default would show the From<PrivateError> impl. We choose to hide it with #[doc(hidden)] because users can never have a PrivateError in their code so this impl would never be relevant to them. // This error type is returned to users.\npub struct PublicError { /* ... */ } // This error type is returned by some private helper functions.\nstruct PrivateError { /* ... */ } // Enable use of `?` operator.\n#[doc(hidden)]\nimpl From<PrivateError> for PublicError { fn from(err: PrivateError) -> PublicError { /* ... */ }\n} pub(crate) is another great tool for removing implementation details from the public API. It allows items to be used from outside of their own module but not outside of the same crate.","breadcrumbs":"Rustdoc does not show unhelpful implementation details (C-HIDDEN)"},"documentation.html#examples":{"id":"documentation.html#examples","breadcrumbs":"Examples","body":"Serde 1.0.0 release notes Serde 0.9.8 release notes Serde 0.9.0 release notes Diesel change log","title":"Examples"},"flexibility.html#advantages-of-generics":{"id":"flexibility.html#advantages-of-generics","breadcrumbs":"Advantages of generics","title":"Advantages of generics","body":"Reusability . Generic functions can be applied to an open-ended collection of types, while giving a clear contract for the functionality those types must provide. Static dispatch and optimization . Each use of a generic function is specialized (\"monomorphized\") to the particular types implementing the trait bounds, which means that (1) invocations of trait methods are static, direct calls to the implementation and (2) the compiler can inline and otherwise optimize these calls. Inline layout . If a struct and enum type is generic over some type parameter T , values of type T will be laid out inline in the struct / enum , without any indirection. Inference . Since the type parameters to generic functions can usually be inferred, generic functions can help cut down on verbosity in code where explicit conversions or other method calls would usually be necessary. Precise types . Because generic give a name to the specific type implementing a trait, it is possible to be precise about places where that exact type is required or produced. For example, a function fn binary<T: Trait>(x: T, y: T) -> T is guaranteed to consume and produce elements of exactly the same type T ; it cannot be invoked with parameters of different types that both implement Trait ."},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"body":"Macros that produce more than one output item should support adding attributes to any one of those items. One common use case would be putting individual items behind a cfg. bitflags! { struct Flags: u8 { #[cfg(windows)] const ControlCenter = 0b001; #[cfg(unix)] const Terminal = 0b010; }\n} Macros that produce a struct or enum as output should support attributes so that the output can be used with derive. bitflags! { #[derive(Default, Serialize)] struct Flags: u8 { const ControlCenter = 0b001; const Terminal = 0b010; }\n}","title":"Item macros compose well with attributes (C-MACRO-ATTR)","breadcrumbs":"Item macros compose well with attributes (C-MACRO-ATTR)","id":"macros.html#item-macros-compose-well-with-attributes-c-macro-attr"},"documentation.html#crate-level-docs-are-thorough-and-include-examples-c-crate-doc":{"id":"documentation.html#crate-level-docs-are-thorough-and-include-examples-c-crate-doc","body":"See RFC 1687 .","breadcrumbs":"Crate level docs are thorough and include examples (C-CRATE-DOC)","title":"Crate level docs are thorough and include examples (C-CRATE-DOC)"},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"body":"Some data structures are complicated to construct, due to their construction needing: a large number of inputs compound data (e.g. slices) optional configuration data choice between several flavors which can easily lead to a large number of distinct constructors with many arguments each. If T is such a data structure, consider introducing a T builder : Introduce a separate data type TBuilder for incrementally configuring a T value. When possible, choose a better name: e.g. Command is the builder for a child process , Url can be created from a ParseOptions . The builder constructor should take as parameters only the data required to make a T . The builder should offer a suite of convenient methods for configuration, including setting up compound inputs (like slices) incrementally. These methods should return self to allow chaining. The builder should provide one or more \" terminal \" methods for actually building a T . The builder pattern is especially appropriate when building a T involves side effects, such as spawning a task or launching a process. In Rust, there are two variants of the builder pattern, differing in the treatment of ownership, as described below.","id":"type-safety.html#builders-enable-construction-of-complex-values-c-builder","breadcrumbs":"Builders enable construction of complex values (C-BUILDER)","title":"Builders enable construction of complex values (C-BUILDER)"},"external-links.html#external-links":{"title":"External links","body":"RFC 199 - Ownership naming conventions RFC 344 - Naming conventions RFC 430 - Naming conventions RFC 505 - Doc conventions RFC 1574 - Doc conventions RFC 1687 - Crate-level documentation Elegant Library APIs in Rust Rust Design Patterns","breadcrumbs":"External links","id":"external-links.html#external-links"},"interoperability.html#interoperability":{"body":"","id":"interoperability.html#interoperability","breadcrumbs":"Interoperability","title":"Interoperability"},"future-proofing.html#examples-from-the-standard-library":{"title":"Examples from the standard library","id":"future-proofing.html#examples-from-the-standard-library","body":"std::borrow::Cow refers to an associated type on the Borrow trait. std::boxed::Box opts out of the implicit Sized bound. std::io::BufWriter requires a trait bound in its Drop impl.","breadcrumbs":"Examples from the standard library"},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"id":"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed","body":"Some traits are only meant to be implemented within the crate that defines them. In such cases, we can retain the ability to make changes to the trait in a non-breaking way by using the sealed trait pattern. /// This trait is sealed and cannot be implemented for types outside this crate.\npub trait TheTrait: private::Sealed { // Zero or more methods that the user is allowed to call. fn ...(); // Zero or more private methods, not allowed for user to call. #[doc(hidden)] fn ...();\n} // Implement for some types.\nimpl TheTrait for usize { /* ... */\n} mod private { pub trait Sealed {} // Implement for those same types, but no others. impl Sealed for usize {}\n} The empty private Sealed supertrait cannot be named by downstream crates, so we are guaranteed that implementations of Sealed (and therefore TheTrait ) only exist in the current crate. We are free to add methods to TheTrait in a non-breaking release even though that would ordinarily be a breaking change for traits that are not sealed. Also we are free to change the signature of methods that are not publicly documented. Note that removing a public method or changing the signature of a public method in a sealed trait are still breaking changes. To avoid frustrated users trying to implement the trait, it should be documented in rustdoc that the trait is sealed and not meant to be implemented outside of the current crate.","breadcrumbs":"Sealed traits protect against downstream implementations (C-SEALED)","title":"Sealed traits protect against downstream implementations (C-SEALED)"},"naming.html#getter-names-follow-rust-convention-c-getter":{"title":"Getter names follow Rust convention (C-GETTER)","body":"With a few exceptions, the get_ prefix is not used for getters in Rust code. pub struct S { first: First, second: Second,\n} impl S { // Not get_first. pub fn first(&self) -> &First { &self.first } // Not get_first_mut, get_mut_first, or mut_first. pub fn first_mut(&mut self) -> &mut First { &mut self.first }\n} The get naming is used only when there is a single and obvious thing that could reasonably be gotten by a getter. For example Cell::get accesses the content of a Cell . For getters that do runtime validation such as bounds checking, consider adding unsafe _unchecked variants. Typically those will have the following signatures. fn get(&self, index: K) -> Option<&V>;\nfn get_mut(&mut self, index: K) -> Option<&mut V>;\nunsafe fn get_unchecked(&self, index: K) -> &V;\nunsafe fn get_unchecked_mut(&mut self, index: K) -> &mut V; The difference between getters and conversions ( C-CONV ) can be subtle and is not always clear-cut. For example TempDir::path can be understood as a getter for the filesystem path of the temporary directory, while TempDir::into_path is a conversion that transfers responsibility for deleting the temporary directory to the caller. Since path is a getter, it would not be correct to call it get_path or as_path .","id":"naming.html#getter-names-follow-rust-convention-c-getter","breadcrumbs":"Getter names follow Rust convention (C-GETTER)"}},"docInfo":{"flexibility.html#disadvantages-of-trait-objects":{"title":3,"body":33,"breadcrumbs":3},"predictability.html#smart-pointers-do-not-add-inherent-methods-c-smart-ptr":{"breadcrumbs":8,"title":8,"body":55},"macros.html#item-macros-compose-well-with-attributes-c-macro-attr":{"body":55,"title":8,"breadcrumbs":8},"naming.html#getter-names-follow-rust-convention-c-getter":{"breadcrumbs":7,"body":120,"title":7},"dependability.html#dependability":{"title":1,"breadcrumbs":1,"body":0},"future-proofing.html#future-proofing":{"breadcrumbs":2,"title":2,"body":0},"dependability.html#static-enforcement":{"body":66,"title":2,"breadcrumbs":2},"documentation.html#examples":{"breadcrumbs":1,"title":1,"body":15},"predictability.html#examples-from-the-standard-library":{"body":34,"breadcrumbs":3,"title":3},"documentation.html#crate-level-docs-are-thorough-and-include-examples-c-crate-doc":{"breadcrumbs":9,"title":9,"body":3},"type-safety.html#non-consuming-builders-preferred":{"body":158,"breadcrumbs":4,"title":4},"interoperability.html#binary-number-types-provide--hex---octal---binary--formatting-c-num-fmt":{"title":11,"breadcrumbs":11,"body":34},"interoperability.html#conversions-use-the-standard-traits--from---asref---asmut--c-conv-traits":{"body":23,"breadcrumbs":9,"title":9},"macros.html#item-macros-work-anywhere-that-items-are-allowed-c-anywhere":{"breadcrumbs":8,"body":76,"title":8},"interoperability.html#examples-of-error-messages":{"breadcrumbs":3,"title":3,"body":26},"documentation.html#documentation":{"body":0,"breadcrumbs":1,"title":1},"debuggability.html#debug--representation-is-never-empty-c-debug-nonempty":{"body":15,"breadcrumbs":7,"title":7},"necessities.html#crate-and-its-dependencies-have-a-permissive-license-c-permissive":{"title":6,"breadcrumbs":6,"body":185},"interoperability.html#examples":{"breadcrumbs":1,"body":4,"title":1},"interoperability.html#data-structures-implement-serdes--serialize---deserialize--c-serde":{"title":8,"breadcrumbs":8,"body":160},"type-safety.html#builders-enable-construction-of-complex-values-c-builder":{"body":118,"breadcrumbs":7,"title":7},"future-proofing.html#data-structures-do-not-duplicate-derived-trait-bounds-c-struct-bounds":{"body":155,"title":9,"breadcrumbs":9},"documentation.html#rustdoc-does-not-show-unhelpful-implementation-details-c-hidden":{"breadcrumbs":7,"title":7,"body":93},"interoperability.html#generic-readerwriter-functions-take--r-read--and--w-write--by-value-c-rw-value":{"body":74,"title":12,"breadcrumbs":12},"documentation.html#release-notes-document-all-significant-changes-c-relnotes":{"body":82,"title":7,"breadcrumbs":7},"predictability.html#only-smart-pointers-implement--deref--and--derefmut--c-deref":{"title":7,"breadcrumbs":7,"body":20},"naming.html#methods-on-collections-that-produce-iterators-follow--iter---iter_mut---into_iter--c-iter":{"breadcrumbs":10,"title":10,"body":89},"type-safety.html#types-for-a-set-of-flags-are--bitflags--not-enums-c-bitflag":{"breadcrumbs":7,"body":117,"title":7},"flexibility.html#traits-are-object-safe-if-they-may-be-useful-as-a-trait-object-c-object":{"breadcrumbs":8,"body":86,"title":8},"debuggability.html#all-public-types-implement--debug--c-debug":{"breadcrumbs":6,"title":6,"body":2},"flexibility.html#functions-expose-intermediate-results-to-avoid-duplicate-work-c-intermediate":{"breadcrumbs":9,"title":9,"body":15},"type-safety.html#type-safety":{"body":0,"breadcrumbs":2,"title":2},"predictability.html#constructors-are-static-inherent-methods-c-ctor":{"body":198,"breadcrumbs":6,"title":6},"flexibility.html#advantages-of-trait-objects":{"title":3,"body":19,"breadcrumbs":3},"naming.html#ad-hoc-conversions-follow--as_---to_---into_--conventions-c-conv":{"body":245,"breadcrumbs":10,"title":10},"interoperability.html#types-are--send--and--sync--where-possible-c-send-sync":{"body":46,"breadcrumbs":7,"title":7},"predictability.html#operator-overloads-are-unsurprising-c-overload":{"breadcrumbs":5,"body":24,"title":5},"checklist.html#rust-api-guidelines-checklist":{"body":494,"title":4,"breadcrumbs":4},"future-proofing.html#newtypes-encapsulate-implementation-details-c-newtype-hide":{"breadcrumbs":7,"title":7,"body":110},"external-links.html#external-links":{"breadcrumbs":2,"body":33,"title":2},"predictability.html#predictability":{"breadcrumbs":1,"body":0,"title":1},"documentation.html#cargotoml-includes-all-common-metadata-c-metadata":{"breadcrumbs":6,"body":67,"title":6},"documentation.html#crate-sets-html_root_url-attribute-c-html-root":{"breadcrumbs":7,"title":7,"body":97},"naming.html#iterator-type-names-match-the-methods-that-produce-them-c-iter-ty":{"title":9,"breadcrumbs":9,"body":38},"type-safety.html#consuming-builders":{"title":2,"body":167,"breadcrumbs":2},"type-safety.html#newtypes-provide-static-distinctions-c-newtype":{"body":64,"title":6,"breadcrumbs":6},"future-proofing.html#examples":{"title":1,"breadcrumbs":1,"body":2},"naming.html#casing-conforms-to-rfc-430-c-case":{"body":127,"breadcrumbs":6,"title":6},"debuggability.html#debuggability":{"breadcrumbs":1,"body":0,"title":1},"macros.html#input-syntax-is-evocative-of-the-output-c-evocative":{"body":141,"breadcrumbs":6,"title":6},"interoperability.html#interoperability":{"breadcrumbs":1,"title":1,"body":0},"flexibility.html#flexibility":{"body":0,"title":1,"breadcrumbs":1},"necessities.html#necessities":{"body":0,"title":1,"breadcrumbs":1},"flexibility.html#advantages-of-generics":{"breadcrumbs":2,"body":124,"title":2},"predictability.html#functions-do-not-take-out-parameters-c-no-out":{"title":6,"body":54,"breadcrumbs":6},"future-proofing.html#examples-from-the-standard-library":{"title":3,"body":18,"breadcrumbs":3},"naming.html#names-use-a-consistent-word-order-c-word-order":{"title":8,"body":48,"breadcrumbs":8},"naming.html#feature-names-are-free-of-placeholder-words-c-feature":{"body":121,"title":7,"breadcrumbs":7},"macros.html#type-fragments-are-flexible-c-macro-ty":{"breadcrumbs":6,"title":6,"body":59},"flexibility.html#caller-decides-where-to-copy-and-place-data-c-caller-control":{"body":71,"breadcrumbs":8,"title":8},"naming.html#examples-from-the-standard-library":{"body":15,"title":3,"breadcrumbs":3},"future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed":{"title":8,"body":127,"breadcrumbs":8},"predictability.html#conversions-live-on-the-most-specific-type-involved-c-conv-specific":{"title":8,"breadcrumbs":8,"body":66},"documentation.html#all-items-have-a-rustdoc-example-c-example":{"breadcrumbs":5,"body":76,"title":5},"type-safety.html#arguments-convey-meaning-through-types-not--bool--or--option--c-custom-type":{"title":10,"breadcrumbs":10,"body":66},"interoperability.html#collections-implement--fromiterator--and--extend--c-collect":{"title":6,"body":26,"breadcrumbs":6},"future-proofing.html#structs-have-private-fields-c-struct-private":{"title":6,"breadcrumbs":6,"body":39},"naming.html#naming":{"title":1,"breadcrumbs":1,"body":0},"about.html#rust-api-guidelines":{"title":3,"breadcrumbs":3,"body":94},"flexibility.html#examples-from-the-standard-library":{"body":18,"title":3,"breadcrumbs":3},"dependability.html#dynamic-enforcement":{"body":88,"breadcrumbs":2,"title":2},"future-proofing.html#exceptions":{"body":31,"title":1,"breadcrumbs":1},"dependability.html#destructors-that-may-block-have-alternatives-c-dtor-block":{"breadcrumbs":6,"body":19,"title":6},"flexibility.html#functions-minimize-assumptions-about-parameters-by-using-generics-c-generic":{"title":8,"body":40,"breadcrumbs":8},"documentation.html#examples-use----not--try--not--unwrap--c-question-mark":{"breadcrumbs":7,"body":43,"title":7},"macros.html#macros":{"breadcrumbs":1,"body":0,"title":1},"dependability.html#destructors-never-fail-c-dtor-fail":{"title":6,"breadcrumbs":6,"body":26},"macros.html#item-macros-support-visibility-specifiers-c-macro-vis":{"title":8,"breadcrumbs":8,"body":32},"documentation.html#function-docs-include-error-panic-and-safety-considerations-c-failure":{"breadcrumbs":9,"title":9,"body":205},"flexibility.html#disadvantages-of-generics":{"title":2,"breadcrumbs":2,"body":64},"necessities.html#public-dependencies-of-a-stable-crate-are-stable-c-stable":{"body":67,"breadcrumbs":7,"title":7},"dependability.html#functions-validate-their-arguments-c-validate":{"breadcrumbs":5,"body":26,"title":5},"interoperability.html#error-types-are-meaningful-and-well-behaved-c-good-err":{"title":8,"breadcrumbs":8,"body":222},"interoperability.html#types-eagerly-implement-common-traits-c-common-traits":{"breadcrumbs":8,"body":100,"title":8},"interoperability.html#examples-from-the-standard-library":{"title":3,"body":6,"breadcrumbs":3},"predictability.html#functions-with-a-clear-receiver-are-methods-c-method":{"breadcrumbs":6,"body":59,"title":6},"documentation.html#prose-contains-hyperlinks-to-relevant-things-c-link":{"title":7,"breadcrumbs":7,"body":33}},"length":87}}};